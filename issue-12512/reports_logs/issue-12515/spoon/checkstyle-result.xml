<?xml version="1.0" encoding="UTF-8"?>
<checkstyle version="10.5.1-SNAPSHOT">
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/TestRunner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestInteger.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestAnonymousExecutable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestUnreachable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestShortCircuit.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestNullDereference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestLogic.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestSwitch.java">
<error line="353" column="20" severity="warning" message="The String &quot;text&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestReferences.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestFields.java">
<error line="111" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="124" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="136" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="146" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="159" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="172" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="193" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="212" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="219" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="229" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="238" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="248" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="258" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="274" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="283" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="292" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="299" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="305" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestDereference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestFloat.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestAssignment.java">
<error line="80" column="20" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="98" column="21" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestIf.java">
<error line="313" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestOperatorAssignment.java">
<error line="29" column="16" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestReturn.java">
<error line="87" column="9" severity="warning" message="Variable &apos;noreturn&apos; can be moved inside the block at line &apos;89&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="96" column="38" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="108" column="34" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestArray.java">
<error line="84" column="33" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="210" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="229" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestLoops.java">
<error line="440" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="453" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="464" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="475" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="489" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="504" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="538" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="549" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="560" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="563" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="573" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="601" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="610" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="619" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="632" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="646" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="657" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="671" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="682" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="691" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="700" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="710" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="721" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="732" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="744" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="757" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="770" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="772" column="14" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="779" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="784" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="795" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="802" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="814" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="827" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestUnaryOperator.java">
<error line="113" column="17" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="114" column="20" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="115" column="19" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="116" column="14" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="117" column="20" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="118" column="18" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestReset.java">
<error line="8" column="24" severity="warning" message="Only one variable definition per line allowed." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="9" column="24" severity="warning" message="Only one variable definition per line allowed." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="13" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="302" column="9" severity="warning" message="Variable &apos;arr2&apos; can be moved inside the block at line &apos;304&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestConditionalOperator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestBinaryOperator.java">
<error line="43" column="15" severity="warning" message="Short-circuit operator should be used instead of &apos;&amp;&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidNotShortCircuitOperatorsForBooleanCheck"/>
<error line="44" column="15" severity="warning" message="Short-circuit operator should be used instead of &apos;|&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidNotShortCircuitOperatorsForBooleanCheck"/>
<error line="58" column="26" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="59" column="26" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestGenerics.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestInvocation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestTry.java">
<error line="19" column="9" severity="warning" message="Catching &apos;RuntimeException&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="39" column="9" severity="warning" message="Catching &apos;RuntimeException&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="67" column="9" severity="warning" message="Catching &apos;RuntimeException&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="81" column="9" severity="warning" message="Catching &apos;RuntimeException&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="132" column="9" severity="warning" message="Catching &apos;RuntimeException&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestSanity.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestLambda.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestCast.java">
<error line="42" column="24" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="204" column="13" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="224" column="14" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="238" column="17" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="243" column="26" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="246" column="27" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="252" column="18" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="253" column="23" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="254" column="23" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="302" column="13" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="303" column="13" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestAnonymousClass.java">
<error line="71" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="103" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestBoxing.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/test/java/fr/inria/spoon/dataflow/testcases/TestTypes.java">
<error line="38" column="19" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="39" column="19" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="40" column="19" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="42" column="17" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="43" column="17" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="44" column="18" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="45" column="18" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="48" column="18" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="65" column="16" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="67" column="17" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="72" column="17" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="79" column="16" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="88" column="16" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="173" column="13" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="179" column="18" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="228" column="11" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="275" column="22" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="293" column="17" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="295" column="20" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="342" column="13" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/warning/WarningKind.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/warning/Warning.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/misc/FlagReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/misc/BranchData.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/misc/ConditionStatus.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/scanners/AbstractCheckingScanner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/scanners/ResetOnModificationScanner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/scanners/CheckersScanner.java">
<error line="31" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/scanners/DataFlowScanner.java">
<error line="105" column="18" severity="warning" message="Return count for &apos;makeLiteral&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="138" column="24" severity="warning" message="Return count for &apos;castBV&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="151" column="13" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="205" column="74" severity="warning" message="Condition with &amp;&amp; at line 205 position 73 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="421" column="31" severity="warning" message="The String &quot;value&quot; appears 19 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="549" column="17" severity="warning" message="Variable &apos;caseType&apos; can be moved inside the block at line &apos;554&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="746" column="17" severity="warning" message="Variable &apos;targetType&apos; can be moved inside the block at line &apos;747&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="951" column="40" severity="warning" message="Condition with &amp;&amp; at line 951 position 39 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="978" column="44" severity="warning" message="Condition with &amp;&amp; at line 978 position 43 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="1203" column="18" severity="warning" message="Return count for &apos;calcBinaryOperator&apos; method is 24 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1214" column="41" severity="warning" message="Condition with || at line 1,214 position 40 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="1229" column="42" severity="warning" message="Condition with || at line 1,229 position 41 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="1364" column="40" severity="warning" message="Condition with || at line 1,364 position 39 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/memory/Memory.java">
<error line="31" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="36" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/checkers/Checker.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/checkers/NullDereferenceChecker.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/checkers/AbstractChecker.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/checkers/AlwaysTrueFalseChecker.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/Main.java">
<error line="16" column="43" severity="warning" message="The String &quot;sources&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="18" column="34" severity="warning" message="The String &quot;arg...&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="22" column="45" severity="warning" message="The String &quot;classpath&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/utils/CommonUtils.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/utils/TypeUtils.java">
<error line="35" column="47" severity="warning" message="The String &quot;java.lang.String&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="47" severity="warning" message="The String &quot;int&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="88" severity="warning" message="The String &quot;java.lang.Integer&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="51" column="47" severity="warning" message="The String &quot;boolean&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="51" column="92" severity="warning" message="The String &quot;java.lang.Boolean&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="59" column="47" severity="warning" message="The String &quot;long&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="59" column="89" severity="warning" message="The String &quot;java.lang.Long&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="47" severity="warning" message="The String &quot;char&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="89" severity="warning" message="The String &quot;java.lang.Character&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="81" column="23" severity="warning" message="Return count for &apos;getPrimitiveTypeSize&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="85" column="18" severity="warning" message="The String &quot;byte&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="86" column="18" severity="warning" message="The String &quot;java.lang.Byte&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="88" column="18" severity="warning" message="The String &quot;short&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="89" column="18" severity="warning" message="The String &quot;java.lang.Short&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="138" column="24" severity="warning" message="Return count for &apos;getTypeSort&apos; method is 8 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-dataflow/src/main/java/fr/inria/spoon/dataflow/utils/PromotionUtils.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/testing/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/testing/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/testing/FileAssertTest.java">
<error line="28" column="38" severity="warning" message="The String &quot;Foo.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="32" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/testing/AbstractAssertTest.java">
<error line="33" column="27" severity="warning" message="The String &quot;Foo.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="33" column="95" severity="warning" message="The String &quot;Bar.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/testing/CtElementAssertTest.java">
<error line="38" column="32" severity="warning" message="The String &quot;i&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="51" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="56" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="61" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/testing/processors/FooToBarProcessor.java">
<error line="23" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/testing/CtPackageAssertTest.java">
<error line="49" column="32" severity="warning" message="The String &quot;spoon.testing.testclasses.Foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="53" column="56" severity="warning" message="The String &quot;./src/test/java/spoon/testing/testclasses/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="58" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="60" column="158" severity="warning" message="The String &quot;another.package&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="63" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="75" column="28" severity="warning" message="The String &quot;X&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="82" column="22" severity="warning" message="The String &quot;some.package.X&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/MavenLauncherTest.java">
<error line="46" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
<error line="49" column="52" severity="warning" message="The String &quot;./pom.xml&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="69" column="52" severity="warning" message="The String &quot;./&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="75" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="85" column="20" severity="warning" message="The String &quot;size: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="85" column="140" severity="warning" message="Unnecessary parentheses around identifier &apos;numberOfJavaSrcFolder&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="94" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="115" column="101" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="127" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="132" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="142" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="159" column="39" severity="warning" message="The String &quot;junit&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="171" column="87" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="173" column="67" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="175" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="176" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/meta/ModelRoleHandlerTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/meta/RoleHandlerTemplate.java">
<error line="99" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="103" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="107" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="111" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/ReplacementVisitorGenerator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/CtBiScannerGenerator.java">
<error line="50" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="61" column="64" severity="warning" message="The String &quot;autogenerated by &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="146" severity="warning" message="The String &quot;List Map#values()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="106" column="30" severity="warning" message="The String &quot;CtBiScannerDefault&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/scanner/PeekElementTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/scanner/CtBiScannerTemplate.java">
<error line="64" column="14" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/RoleHandlersGenerator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/MetamodelGenerator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/CloneVisitorGenerator.java">
<error line="95" column="57" severity="warning" message="The String &quot;visitCt&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="135" column="36" severity="warning" message="The String &quot;auto-generated, see &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="172" severity="warning" message="The String &quot;()&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="242" column="17" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="257" column="21" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="424" column="37" severity="warning" message="Return count for &apos;getSetterOf&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="429" column="17" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="470" column="37" severity="warning" message="Return count for &apos;getGetterOf&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="475" column="17" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/clone/SetterTemplateMatcher.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/clone/CloneBuilderTemplate.java">
<error line="29" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/clone/CloneVisitorTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/clone/GetterTemplateMatcher.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/replace/ReplaceScanner.java">
<error line="100" column="36" severity="warning" message="The String &quot;auto-generated, see &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="110" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="130" column="104" severity="warning" message="The String &quot;ReplaceListener&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="145" column="75" severity="warning" message="The String &quot;set&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="188" column="65" severity="warning" message="The String &quot;.CtListener&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/generating/replace/ReplacementVisitor.java">
<error line="43" column="87" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="44" column="11" severity="warning" message="Useless catch block. No logging, wrapping or handling code here." source="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck"/>
<error line="51" column="11" severity="warning" message="Useless catch block. No logging, wrapping or handling code here." source="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck"/>
<error line="56" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="57" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="59" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="61" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="80" column="55" severity="warning" message="The String &quot;Cannot replace single value by multiple values in &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/processing/CtGenerationTest.java">
<error line="49" column="52" severity="warning" message="The String &quot;line.separator&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="70" severity="warning" message="The String &quot;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="66" column="43" severity="warning" message="The String &quot;./target/generated/&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/reflect/code&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="69" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/reflect/declaration&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="70" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/reflect/reference&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="71" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/reflect/internal&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="73" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/reflect/visitor/CtScanner.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="89" column="176" severity="warning" message="The String &quot;spoon.support.visitor.replace.ReplacementVisitor&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="137" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/support/reflect/code&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="138" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/support/reflect/declaration&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="139" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/support/reflect/reference&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="168" severity="warning" message="The String &quot;spoon.support.visitor.clone.CloneBuilder&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="152" severity="warning" message="The String &quot;spoon.support.visitor.clone.CloneVisitor&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="184" column="68" severity="warning" message="The String &quot;-noRoleHandler&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="191" column="169" severity="warning" message="The String &quot;spoon.reflect.meta.impl.ModelRoleHandlers&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/processing/ProcessingTest.java">
<error line="46" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="51" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="59" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/visitor/CtScannerTest.java">
<error line="108" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="114" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="134" column="46" severity="warning" message="The String &quot;visit&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="222" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="339" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="345" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/visitor/CtVisitorTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/visitor/CtIteratorTest.java">
<error line="34" column="38" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/visitor/CtBFSIteratorTest.java">
<error line="20" column="38" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="37" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="63" column="59" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/visitor/CtInheritanceScannerMethodsTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/visitor/processors/CheckVisitorTestProcessor.java">
<error line="49" column="55" severity="warning" message="The String &quot;Impl&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="84" column="42" severity="warning" message="The String &quot;You should have &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="84" column="139" severity="warning" message="The String &quot; in the CtInheritanceScanner.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/visitor/processors/CheckScannerTestProcessor.java">
<error line="40" column="55" severity="warning" message="The String &quot;Impl&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="38" severity="warning" message="The String &quot;The statement must be a call to &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="86" severity="warning" message="The String &quot; method.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/visitor/CtInheritanceScannerTest.java">
<error line="60" column="74" severity="warning" message="The String &quot;Ct&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="70" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="88" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="96" column="68" severity="warning" message="The String &quot;visit&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="145" column="13" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="151" column="21" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/ast/CloneTest.java">
<error line="59" column="40" severity="warning" message="The String &quot;--output-type&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="59" column="57" severity="warning" message="The String &quot;nooutput&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="74" column="57" severity="warning" message="The String &quot;Ct&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="77" column="66" severity="warning" message="The String &quot;clone&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="78" column="60" severity="warning" message="The String &quot; hasn&apos;t clone method.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="79" column="57" severity="warning" message="The String &quot; hasn&apos;t Override annotation on clone method.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="87" column="17" severity="warning" message="Variable &apos;clone&apos; can be moved inside the block at line &apos;88&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="144" column="53" severity="warning" message="The String &quot;./src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="173" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="183" column="60" severity="warning" message="The String &quot;A2&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="195" column="22" severity="warning" message="The String &quot;cCopy&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="51" severity="warning" message="The String &quot;foo&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/ast/AstCheckerTest.java">
<error line="64" column="54" severity="warning" message="The String &quot;b&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="90" column="28" severity="warning" message="Return count for &apos;matches&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="98" column="92" severity="warning" message="The String &quot;Ct&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="113" column="46" severity="warning" message="The String &quot;add&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="113" column="78" severity="warning" message="The String &quot;remove&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="25" severity="warning" message="Return count for &apos;isSurcharged&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="234" column="25" severity="warning" message="Return count for &apos;isDelegateMethod&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/reference/CtTypeReferenceTest.java">
<error line="27" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/declaration/CtTypeInformationTest.java">
<error line="72" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="80" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="84" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="88" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="92" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="94" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="95" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="100" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="104" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="108" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="112" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="117" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="117" column="72" severity="warning" message="The String &quot;java.io.InputStream&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="121" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="122" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="123" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="132" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="137" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="138" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="139" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="195" column="61" severity="warning" message="The String &quot;foo&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="213" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="214" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="220" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/declaration/testclasses/TestInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/declaration/testclasses/Subinterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/declaration/testclasses/ExtendsArrayList.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/declaration/testclasses/Subclass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/reflect/declaration/UnknownDeclarationTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/initializers/testclasses/InstanceInitializers.java">
<error line="20" column="35" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/initializers/testclasses/InternalClassStaticFieldInit.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/initializers/InitializerTest.java">
<error line="40" column="33" severity="warning" message="The String &quot;spoon.test.initializers.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="41" column="17" severity="warning" message="The String &quot;InternalClassStaticFieldInit&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="45" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="47" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="59" column="17" severity="warning" message="The String &quot;InstanceInitializers&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="63" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="66" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="72" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="75" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="93" column="22" severity="warning" message="The String &quot;UnicodeUtil.UTF8Result temp = new UnicodeUtil.UTF8Result()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="97" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctBlock/testclasses/Toto.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctBlock/TestCtBlock.java">
<error line="45" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/ctBlock/testclasses/Toto.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="48" column="104" severity="warning" message="The String &quot;foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/RefactoringTest.java">
<error line="45" column="17" severity="warning" message="The String &quot;-i&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="45" column="23" severity="warning" message="The String &quot;src/test/java/spoon/test/refactoring/testclasses&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="46" column="17" severity="warning" message="The String &quot;-o&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="46" column="23" severity="warning" message="The String &quot;target/spooned/refactoring&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="57" column="17" severity="warning" message="The String &quot;-p&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="70" severity="warning" message="The String &quot;spoon.test.refactoring.testclasses.AClassX&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="96" column="22" severity="warning" message="The String &quot;this(\&quot;\&quot;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/testclasses/TestTryRename.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/testclasses/AbstractClass.java">
<error line="4" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/testclasses/CtRenameLocalVariableRefactoringTestSubject.java">
<error line="21" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="31" column="17" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="48" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="49" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="59" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="62" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="65" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="67" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="93" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="94" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="95" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="96" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="97" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="102" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="103" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="104" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="105" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="109" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="135" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="136" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="137" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="138" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="144" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="145" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="146" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="150" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="161" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="167" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="168" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="169" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="172" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="188" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="189" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="190" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="193" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="207" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="210" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="211" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="212" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="215" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="221" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="225" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="226" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="227" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="230" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="236" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="240" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="241" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="243" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="246" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="247" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/testclasses/AClass.java">
<error line="11" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;AClass&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/IFaceK.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TypeC.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/IFaceT.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/IFaceB.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TypeR.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TypeL.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TypeM.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TypeB.java">
<error line="5" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/IFaceL.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TypeS.java">
<error line="30" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TypeA.java">
<error line="5" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TypeK.java">
<error line="5" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/parameter/testclasses/TestHierarchy.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/CtRenameGenericVariableRefactoringTest.java">
<error line="84" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/processors/ThisTransformationProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/CtRenameLocalVariableRefactoringTest.java">
<error line="66" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="126" column="78" severity="warning" message="The String &quot; Rename of \&quot;&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="128" column="89" severity="warning" message="The String &quot;\&quot; to \&quot;&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="129" column="124" severity="warning" message="The String &quot;\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="168" column="11" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="175" column="11" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="176" column="123" severity="warning" message="The String &quot; failed after: &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="183" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="183" column="38" severity="warning" message="The String &quot;The model validation of code in &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="184" column="11" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="198" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="222" column="97" severity="warning" message="The String &quot;local1&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/refactoring/MethodsRefactoringTest.java">
<error line="71" column="53" severity="warning" message="The String &quot;./src/test/java/spoon/test/refactoring/parameter/testclasses&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="75" column="17" severity="warning" message="The String &quot;spoon.test.refactoring.parameter.testclasses.TypeB&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="76" column="17" severity="warning" message="The String &quot;spoon.test.refactoring.parameter.testclasses.TypeB$1&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="77" column="17" severity="warning" message="The String &quot;spoon.test.refactoring.parameter.testclasses.TypeC&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="17" severity="warning" message="The String &quot;spoon.test.refactoring.parameter.testclasses.TypeB$1Local&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="95" column="17" severity="warning" message="The String &quot;spoon.test.refactoring.parameter.testclasses.TypeL&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="96" column="17" severity="warning" message="The String &quot;spoon.test.refactoring.parameter.testclasses.TypeM&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="36" severity="warning" message="The String &quot; not found&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="144" column="20" severity="warning" message="The String &quot;Unexpected executable found by Constructor of TypeA &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="161" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="167" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="168" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="176" column="25" severity="warning" message="The String &quot;Unexpected start executable &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="178" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="184" column="33" severity="warning" message="The String &quot;The signature &quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="190" column="24" severity="warning" message="The String &quot;Unexpected executables: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="197" column="24" severity="warning" message="The String &quot;Missing start executable &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="199" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="219" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="238" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="294" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="332" column="34" severity="warning" message="The String &quot;spoon/test/refactoring/parameter/testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="336" column="73" severity="warning" message="The String &quot;./src/test/java/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="342" column="66" severity="warning" message="The String &quot;method1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="356" column="52" severity="warning" message="The String &quot;./target/spooned/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/delete/DeleteTest.java">
<error line="61" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="78" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="94" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="102" column="51" severity="warning" message="The String &quot;m&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="110" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="126" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="134" column="51" severity="warning" message="The String &quot;m3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="143" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="160" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="168" column="51" severity="warning" message="The String &quot;m4&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="176" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="192" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="220" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="234" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/delete/testclasses/Adobada.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/parent/Foo.java">
<error line="25" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="37" column="25" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/parent/NullParentTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/parent/ContractOnSettersParametrizedTest.java">
<error line="82" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="98" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="98" column="26" severity="warning" message="Return count for &apos;createCompatibleObject&apos; method is 21 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="100" column="9" severity="warning" message="Variable &apos;f&apos; can be moved inside the block at line &apos;117&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="200" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="213" column="13" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="241" column="79" severity="warning" message="The String &quot;#&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="241" column="109" severity="warning" message="The String &quot; doesn&apos;t initializes parent&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="264" column="21" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="266" column="21" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="270" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="271" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/parent/TopLevelTypeTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/parent/SetParentTest.java">
<error line="53" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="77" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="80" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="95" column="51" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="98" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/parent/ParentTest.java">
<error line="80" column="37" severity="warning" message="The String &quot;--output-type&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="80" column="54" severity="warning" message="The String &quot;nooutput&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="92" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="99" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="107" column="26" severity="warning" message="The String &quot;Foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="109" column="54" severity="warning" message="The String &quot;foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="137" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="150" column="72" severity="warning" message="The String &quot;Panini&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="180" column="58" severity="warning" message="The String &quot;m3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="222" column="61" severity="warning" message="The String &quot;m&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="294" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="297" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="298" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="305" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
<error line="330" column="65" severity="warning" message="The String &quot;add&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="353" column="125" severity="warning" message="The String &quot; declared in &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="370" column="85" severity="warning" message="The String &quot; declared in the class &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visitor/VisitorFake.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visitor/AssignmentsEqualsTest.java">
<error line="24" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="25" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="26" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="27" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="28" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="29" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visitor/VisitorTest.java">
<error line="19" column="9" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="47" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/logging/LogTest.java">
<error line="46" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="49" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="52" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="55" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="58" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/BlockTest.java">
<error line="43" column="30" severity="warning" message="The String &quot;class X {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="44" severity="warning" message="The String &quot;public void foo() {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="45" column="35" severity="warning" message="The String &quot;}};&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="59" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/Foo.java">
<error line="7" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/ClassWithSuperAndIFace.java">
<error line="9" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/testclasses/ClassWithSuperOutOfModel.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/testclasses/SwitchStringClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/testclasses/InterfaceWrithFields.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/testclasses/AnonymousExecutableClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/testclasses/InterfaceSuperclass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/SwitchCaseTest.java">
<error line="72" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/TypeTest.java">
<error line="47" column="33" severity="warning" message="The String &quot;spoon.test.model&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="47" column="53" severity="warning" message="The String &quot;Foo&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="81" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="82" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="83" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="90" column="32" severity="warning" message="The String &quot;spoon.test.model.testclasses&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="107" column="52" severity="warning" message="The String &quot;ClassWithSuperAndIFace&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="109" column="22" severity="warning" message="The String &quot;classField&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="110" column="22" severity="warning" message="The String &quot;i&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="111" column="53" severity="warning" message="The String &quot;fooMethod&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="112" column="22" severity="warning" message="The String &quot;j&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="113" column="22" severity="warning" message="The String &quot;IFACE_FIELD_1&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="114" column="22" severity="warning" message="The String &quot;IFACE_FIELD_2&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="115" column="53" severity="warning" message="The String &quot;notExists&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="133" column="73" severity="warning" message="The String &quot;ClassWithSuperOutOfModel&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="135" column="22" severity="warning" message="The String &quot;buf&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="136" column="22" severity="warning" message="The String &quot;count&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="144" column="26" severity="warning" message="The String &quot;class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="146" column="26" severity="warning" message="The String &quot;interface&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="147" column="26" severity="warning" message="The String &quot;enum&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="149" column="26" severity="warning" message="The String &quot;annotation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="153" column="26" severity="warning" message="The String &quot;generics&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="156" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="159" column="32" severity="warning" message="The String &quot;src/test/resources/multiclass/module1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="160" column="32" severity="warning" message="The String &quot;src/test/resources/multiclass/module2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/AnonymousExecutableTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/model/IncrementalLauncherTest.java">
<error line="66" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="71" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="75" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="78" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="82" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="87" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="100" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="105" column="56" severity="warning" message="The String &quot;D.java&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="109" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="118" column="46" severity="warning" message="The String &quot;A&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="46" severity="warning" message="The String &quot;B&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="46" severity="warning" message="The String &quot;C&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="121" column="46" severity="warning" message="The String &quot;D&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="126" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="127" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="128" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="131" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="132" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="133" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="134" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="143" column="50" severity="warning" message="The String &quot;A.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="144" column="50" severity="warning" message="The String &quot;B.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="145" column="50" severity="warning" message="The String &quot;C.java&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="149" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="152" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="158" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="161" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="172" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="173" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="190" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="195" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="195" column="20" severity="warning" message="The String &quot;int&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="195" column="45" severity="warning" message="The String &quot;val&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="198" column="51" severity="warning" message="The String &quot;func&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="202" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="203" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="210" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="215" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="215" column="20" severity="warning" message="The String &quot;float&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="222" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="223" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/PatternTest.java">
<error line="109" column="96" severity="warning" message="The String &quot;matcher1&quot; appears 26 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="111" column="38" severity="warning" message="The String &quot;values&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="40" severity="warning" message="The String &quot;java.lang.System.out.println(value)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="127" column="21" severity="warning" message="The String &quot;java.lang.System.out.println(\&quot;a\&quot;)&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="128" column="21" severity="warning" message="The String &quot;java.lang.System.out.println(\&quot;Xxxx\&quot;)&quot; appears 13 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="129" column="21" severity="warning" message="The String &quot;java.lang.System.out.println(((java.lang.String) (null)))&quot; appears 13 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="130" column="21" severity="warning" message="The String &quot;java.lang.System.out.println(java.lang.Long.class.toString())&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="132" column="21" severity="warning" message="The String &quot;\&quot;a\&quot;&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="133" column="21" severity="warning" message="The String &quot;\&quot;Xxxx\&quot;&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="134" column="21" severity="warning" message="The String &quot;((java.lang.String) (null))&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="135" column="21" severity="warning" message="The String &quot;java.lang.Long.class.toString()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="34" severity="warning" message="The String &quot;varName&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="168" column="21" severity="warning" message="The String &quot;cc++&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="199" column="34" severity="warning" message="The String &quot;option&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="200" column="34" severity="warning" message="The String &quot;value&quot; appears 36 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="75" severity="warning" message="The String &quot;testMatch1&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="286" column="34" severity="warning" message="The String &quot;printedValue&quot; appears 25 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="288" column="117" severity="warning" message="The String &quot;int foo = 0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="288" column="168" severity="warning" message="The String &quot;foo++&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="292" column="34" severity="warning" message="The String &quot;statements&quot; appears 20 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="318" column="17" severity="warning" message="The String &quot;int i = 0&quot; appears 10 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="319" column="17" severity="warning" message="The String &quot;i++&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="320" column="17" severity="warning" message="The String &quot;java.lang.System.out.println(i)&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="323" column="17" severity="warning" message="The String &quot;java.lang.System.out.println(\&quot;last one\&quot;)&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="334" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="335" column="22" severity="warning" message="The String &quot;\&quot;last one\&quot;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="366" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="380" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="410" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="422" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="434" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="464" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="478" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="506" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="561" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="585" column="38" severity="warning" message="The String &quot;statements1&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="586" column="38" severity="warning" message="The String &quot;statements2&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="587" column="89" severity="warning" message="The String &quot;something&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="594" column="26" severity="warning" message="The String &quot;count=&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="625" column="30" severity="warning" message="The String &quot;inlinedSysOut&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="724" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="727" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="753" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="759" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="766" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="785" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="812" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="818" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="824" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="839" column="38" severity="warning" message="The String &quot;modifiers&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="840" column="38" severity="warning" message="The String &quot;methodName&quot; appears 14 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="841" column="38" severity="warning" message="The String &quot;parameters&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="860" column="30" severity="warning" message="The String &quot;publicStaticMethod&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="869" column="30" severity="warning" message="The String &quot;packageProtectedMethodWithParam&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="892" column="30" severity="warning" message="The String &quot;withBody&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="918" column="38" severity="warning" message="The String &quot;__pattern_param_annot&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="920" column="38" severity="warning" message="The String &quot;__pattern_param_method_name&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="944" column="30" severity="warning" message="The String &quot;m1&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="949" column="30" severity="warning" message="The String &quot;\&quot;xyz\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="955" column="30" severity="warning" message="The String &quot;m2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="961" column="48" severity="warning" message="The String &quot;timeout&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="981" column="38" severity="warning" message="The String &quot;allAnnotations&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="985" column="38" severity="warning" message="The String &quot;CheckAnnotationValues&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="996" column="30" severity="warning" message="The String &quot;deprecatedTestAnnotation2&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1000" column="30" severity="warning" message="The String &quot;@java.lang.Deprecated&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1016" column="38" severity="warning" message="The String &quot;CheckKey&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1017" column="38" severity="warning" message="The String &quot;CheckValue&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1061" column="34" severity="warning" message="The String &quot;otherThrowables&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1090" column="21" severity="warning" message="The String &quot;java.lang.IllegalArgumentException&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1120" column="39" severity="warning" message="The String &quot;null&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1136" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1140" column="26" severity="warning" message="The String &quot;./src/test/java/spoon/test/template/testclasses/replace/DPPSample1.java&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1141" column="26" severity="warning" message="The String &quot;./src/test/java/spoon/test/template/testclasses/replace&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1148" column="50" severity="warning" message="The String &quot;next&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1148" column="57" severity="warning" message="The String &quot;item&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1148" column="64" severity="warning" message="The String &quot;startPrefixSpace&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1148" column="93" severity="warning" message="The String &quot;start&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1149" column="30" severity="warning" message="The String &quot;nextPrefixSpace&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1149" column="48" severity="warning" message="The String &quot;startSuffixSpace&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1150" column="17" severity="warning" message="The String &quot;endPrefixSpace&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1150" column="34" severity="warning" message="The String &quot;startKeyword&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1150" column="49" severity="warning" message="The String &quot;useStartKeyword&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1150" column="67" severity="warning" message="The String &quot;end&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1150" column="73" severity="warning" message="The String &quot;nextSuffixSpace&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1150" column="91" severity="warning" message="The String &quot;getIterable&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1159" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1162" column="40" severity="warning" message="The String &quot;line.separator&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1170" column="17" severity="warning" message="The String &quot; */&quot; appears 11 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1172" column="17" severity="warning" message="The String &quot;    /* CtInvocation&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1174" column="17" severity="warning" message="The String &quot;     */&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1185" column="17" severity="warning" message="The String &quot;}&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1232" column="17" severity="warning" message="The String &quot;        lp.printSeparatorIfAppropriate();&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1236" column="17" severity="warning" message="The String &quot;        statements();&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1237" column="17" severity="warning" message="The String &quot;    }&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1241" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1261" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1270" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1293" column="22" severity="warning" message="The String &quot;false&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1297" column="22" severity="warning" message="The String &quot;\&quot;,\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1298" column="22" severity="warning" message="The String &quot;true&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1300" column="22" severity="warning" message="The String &quot;\&quot;;\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1301" column="22" severity="warning" message="The String &quot;ctEnum.getEnumValues()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1302" column="22" severity="warning" message="The String &quot;[scan(enumValue)]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1323" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1334" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1344" column="33" severity="warning" message="The String &quot;spoon.test.generated.ACloneOfAClassWithMethodsAndRefs&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1349" column="118" severity="warning" message="The String &quot;foo&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1360" column="73" severity="warning" message="The String &quot;void&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1361" column="17" severity="warning" message="The String &quot;spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$1Bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1362" column="17" severity="warning" message="The String &quot;java.lang.Object&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1362" column="42" severity="warning" message="The String &quot;spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$Local&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1375" column="18" severity="warning" message="The String &quot;Unexpected declaring type &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1379" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1429" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1437" column="22" severity="warning" message="The String &quot;a&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1459" column="40" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="1460" column="40" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="1461" column="40" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="1466" column="104" severity="warning" message="The String &quot;b&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1466" column="109" severity="warning" message="The String &quot;c&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1499" column="67" severity="warning" message="The String &quot;d&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1510" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1515" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1524" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1528" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1537" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1541" column="40" severity="warning" message="The String &quot;--output-type&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1541" column="57" severity="warning" message="The String &quot;nooutput&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1542" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/template/testclasses/logger/Logger.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1549" column="75" severity="warning" message="The String &quot;enter&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1569" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1571" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1573" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1575" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1578" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1593" column="34" severity="warning" message="The String &quot;members&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1610" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1627" column="30" severity="warning" message="The String &quot;methodBody&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1638" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/TemplateInvocationSubstitutionTest.java">
<error line="47" column="57" severity="warning" message="The String &quot;Result&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="62" column="98" severity="warning" message="The String &quot;abc&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="22" severity="warning" message="The String &quot;java.lang.System.out.println(\&quot;abc\&quot;.substring(1))&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/TemplateClassAccessTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/TemplateArrayAccessTest.java">
<error line="42" column="57" severity="warning" message="The String &quot;Result&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="76" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="43" column="77" severity="warning" message="The String &quot;a&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="86" severity="warning" message="The String &quot;b&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="57" column="76" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/AnExpressionTemplate.java">
<error line="19" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/constructors/TemplateWithFieldsAndMethods.java">
<error line="26" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/constructors/C1.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/constructors/TemplateWithConstructor.java">
<error line="18" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;TemplateWithConstructor&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="23" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;TemplateWithConstructor&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="24" column="28" severity="warning" message="The String &quot;new&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="28" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;TemplateWithConstructor&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="32" column="48" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/constructors/TemplateWithFieldsAndMethods_Wrong.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/types/AClassWithMethodsAndRefs.java">
<error line="6" column="19" severity="warning" message="Overridable method &apos;someMethod&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/types/AnIfaceModel.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/types/AnEnumModel.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/types/AClassModel.java">
<error line="7" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/LoggerModel.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/SubstitutionByExpressionTemplate.java">
<error line="17" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/InvocationSubstitutionByExpressionTemplate.java">
<error line="19" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/ContextHelper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/ToBeMatched.java">
<error line="8" column="23" severity="warning" message="The String &quot;a&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="8" column="28" severity="warning" message="The String &quot;b&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="8" column="33" severity="warning" message="The String &quot;c&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="8" column="38" severity="warning" message="The String &quot;d&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="8" column="43" severity="warning" message="The String &quot;e&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/EnumAccessTemplate.java">
<error line="20" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/InnerClassTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/InvocationTemplate.java">
<error line="16" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/SubstituteRootTemplate.java">
<error line="19" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/ReturnReplaceTemplate.java">
<error line="15" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/SubstituteArrayAccessTemplate.java">
<error line="17" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/SubStringTemplate.java">
<error line="11" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="22" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/inheritance/SuperClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/inheritance/SubTemplate.java">
<error line="64" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="68" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="76" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="80" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/inheritance/SuperTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/inheritance/InterfaceTemplate.java">
<error line="11" column="58" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/inheritance/SubClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/ClassAccessTemplate.java">
<error line="17" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/FieldAccessOfInnerClassTemplate.java">
<error line="17" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/NtonCodeTemplate.java">
<error line="48" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/logger/LoggerTemplate.java">
<error line="43" column="41" severity="warning" message="The String &quot;_methodName_&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/logger/Logger.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/logger/LoggerTemplateProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/ObjectIsNotParamTemplate.java">
<error line="14" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="14" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/AnotherFieldAccessTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/SubstituteLiteralTemplate.java">
<error line="19" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/InvocationSubstitutionByStatementTemplate.java">
<error line="18" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchMap.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/GenerateIfElse.java">
<error line="8" column="30" severity="warning" message="The String &quot;string&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchForEach.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchMultiple2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchWithParameterType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchIfElse.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchMultiple.java">
<error line="24" column="30" severity="warning" message="The String &quot;statements&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="34" column="81" severity="warning" message="The String &quot;something&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchMultiple3.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchWithParameterCondition.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/Check.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchModifiers.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchThrowables.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/match/MatchForEach2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/TwoSnippets.java">
<error line="24" column="41" severity="warning" message="The String &quot;c&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/bounds/CheckBoundMatcher.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/bounds/CheckBound.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/bounds/CheckBoundTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/bounds/FooBound.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/TypeReferenceClassAccessTemplate.java">
<error line="23" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/BServiceImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/C.java">
<error line="8" column="30" severity="warning" message="The String &quot;.&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="20" column="11" severity="warning" message="Catching &apos;RuntimeException&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/replace/OldPattern.java">
<error line="76" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="77" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/replace/NewPattern.java">
<error line="49" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/replace/ElementPrinterHelper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/replace/Item.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/replace/DPPSample1.java">
<error line="13" column="119" severity="warning" message="The String &quot;,&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="13" column="137" severity="warning" message="The String &quot;;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/SubstituteArrayLengthTemplate.java">
<error line="17" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/ArrayAccessTemplate.java">
<error line="28" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="31" column="31" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/SimpleTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/FieldAccessTemplate.java">
<error line="15" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/testclasses/SecurityCheckerTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/core/ParameterInfoTest.java">
<error line="32" column="22" severity="warning" message="The String &quot;year&quot; appears 80 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="36" column="22" severity="warning" message="The String &quot;year.age&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="36" column="55" severity="warning" message="The String &quot;age&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="42" column="22" severity="warning" message="The String &quot;year[7]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="102" column="70" severity="warning" message="The String &quot;a&quot; appears 13 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="102" column="75" severity="warning" message="The String &quot;b&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="188" column="61" severity="warning" message="The String &quot;x&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="197" column="117" severity="warning" message="The String &quot;zz&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="198" column="45" severity="warning" message="The String &quot;key&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="204" column="56" severity="warning" message="The String &quot;years&quot; appears 14 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="266" column="36" severity="warning" message="The String &quot;map&quot; appears 25 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="275" column="73" severity="warning" message="The String &quot;best&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="328" column="36" severity="warning" message="The String &quot;list&quot; appears 26 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="383" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="428" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/TemplateTest.java">
<error line="124" column="25" severity="warning" message="The String &quot;./src/test/java/spoon/test/template/testclasses/inheritance/SubClass.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="139" column="57" severity="warning" message="The String &quot;toBeOverriden&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="141" column="53" severity="warning" message="The String &quot;#toBeOverriden&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="148" column="33" severity="warning" message="The String &quot;x&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="172" column="57" severity="warning" message="The String &quot;methodWithTemplatedParameters&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="183" column="47" severity="warning" message="The String &quot;newVarName&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="185" column="51" severity="warning" message="The String &quot;#var&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="22" severity="warning" message="The String &quot;java.lang.System.out.println(0)&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="206" column="22" severity="warning" message="The String &quot;java.lang.System.out.println(1)&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="214" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="216" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="219" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="225" column="22" severity="warning" message="The String &quot;l = ((java.util.LinkedList) (newVarName))// will be replaced by l = (LinkedList) newVarName&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="252" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="252" column="83" severity="warning" message="The String &quot;Generated by&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="255" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="256" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="265" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="268" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="269" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="280" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="281" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="297" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="299" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="301" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="304" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="306" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="318" column="36" severity="warning" message="The String &quot;./src/test/java/spoon/test/template/testclasses/constructors/C1.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="349" column="17" severity="warning" message="The String &quot;testparam&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="354" column="38" severity="warning" message="The String &quot;methodToBeInserted&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="391" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="413" column="49" severity="warning" message="The String &quot;method&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="420" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="421" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="424" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="427" column="36" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="429" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="455" column="118" severity="warning" message="The String &quot;matcher1&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="458" column="31" severity="warning" message="The String &quot;foo&quot; appears 13 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="458" column="37" severity="warning" message="The String &quot;fbar&quot; appears 11 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="460" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="460" column="58" severity="warning" message="The String &quot;_col_&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="460" column="67" severity="warning" message="The String &quot;new java.util.ArrayList&lt;&gt;()&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="472" column="31" severity="warning" message="The String &quot;bou&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="472" column="38" severity="warning" message="The String &quot;bov&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="474" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="482" column="118" severity="warning" message="The String &quot;matcher3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="487" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="487" column="58" severity="warning" message="The String &quot;_x_&quot; appears 18 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="487" column="65" severity="warning" message="The String &quot;new java.util.ArrayList&lt;&gt;().size()&quot; appears 14 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="488" column="65" severity="warning" message="The String &quot;l.size()&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="499" column="37" severity="warning" message="The String &quot;foo2&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="501" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="504" column="33" severity="warning" message="The String &quot;_y_&quot; appears 15 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="504" column="40" severity="warning" message="The String &quot;10&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="507" column="40" severity="warning" message="The String &quot;11&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="518" column="118" severity="warning" message="The String &quot;matcher5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="521" column="51" severity="warning" message="The String &quot;baz&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="523" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="527" column="33" severity="warning" message="The String &quot;_block_&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="527" column="44" severity="warning" message="The String &quot;{ throw new java.lang.IndexOutOfBoundsException();}&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="543" column="44" severity="warning" message="The String &quot;{ java.lang.System.out.println();}&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="560" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="564" column="33" severity="warning" message="The String &quot;_stmt_&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="564" column="43" severity="warning" message="The String &quot;throw new java.lang.IndexOutOfBoundsException()&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="580" column="43" severity="warning" message="The String &quot;java.lang.System.out.println()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="595" column="31" severity="warning" message="The String &quot;bos&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="597" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="661" column="40" severity="warning" message="The String &quot;--output-type&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="661" column="57" severity="warning" message="The String &quot;nooutput&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="666" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="674" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="676" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="678" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="680" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="703" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="704" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="705" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="714" column="54" severity="warning" message="The String &quot;./src/test/java/spoon/test/template/testclasses/SecurityCheckerTemplate.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="775" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="785" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="796" column="57" severity="warning" message="The String &quot;Result&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="816" column="56" severity="warning" message="The String &quot;apply&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="854" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="856" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="857" column="22" severity="warning" message="The String &quot;java.lang.String s = \&quot;Spoon is cool!\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="877" column="52" severity="warning" message="The String &quot;Inner&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="920" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="936" column="24" severity="warning" message="The String &quot;someMethod&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="936" column="38" severity="warning" message="The String &quot;genMethod&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="940" column="66" severity="warning" message="The String &quot;generated.GenIface&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="951" column="66" severity="warning" message="The String &quot;generated.GenClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="958" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="961" column="33" severity="warning" message="The String &quot;GOOD&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="962" column="33" severity="warning" message="The String &quot;BETTER&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="964" column="77" severity="warning" message="The String &quot;generated.GenEnum&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="985" column="89" severity="warning" message="The String &quot;stringField1&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="986" column="127" severity="warning" message="The String &quot;stringField2&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="988" column="131" severity="warning" message="The String &quot;m1&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1029" column="59" severity="warning" message="The String &quot;setA&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1033" column="81" severity="warning" message="The String &quot;m&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1038" column="26" severity="warning" message="The String &quot;java.lang.String m_Object = \&quot;Object is here more times: Object\&quot;;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1038" column="112" severity="warning" message="The String &quot;m_Object&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1040" column="59" severity="warning" message="The String &quot;setObject&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1042" column="26" severity="warning" message="The String &quot;java.lang.String p_Object&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1043" column="26" severity="warning" message="The String &quot;this.m_Object = p_Object&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1044" column="26" severity="warning" message="The String &quot;setObject(\&quot;The Object is here too\&quot;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1062" column="59" severity="warning" message="The String &quot;setXxx&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1104" column="76" severity="warning" message="The String &quot;value&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1104" column="114" severity="warning" message="The String &quot;x.X&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1105" column="26" severity="warning" message="The String &quot;int value;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1107" column="26" severity="warning" message="The String &quot;value = 7&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1168" column="22" severity="warning" message="The String &quot;spoon.test.template.TypeReferenceClassAccess.Example&lt;java.util.Date&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/ArrayResizeTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/TemplateEnumAccessTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/template/TemplateReplaceReturnTest.java">
<error line="42" column="57" severity="warning" message="The String &quot;./src/test/java/spoon/test/template/testclasses/ReturnReplaceTemplate.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="87" severity="warning" message="The String &quot;spoon.test.template&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="111" severity="warning" message="The String &quot;ReturnReplaceResult&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="51" column="171" severity="warning" message="The String &quot;method&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="52" column="52" severity="warning" message="The String &quot;./target/spooned/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="54" column="40" severity="warning" message="The String &quot;./target/spooned/spoon/test/template/ReturnReplaceResult.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/SpoonTestHelpers.java">
<error line="55" column="16" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="97" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="102" column="49" severity="warning" message="The String &quot;set&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/CommentTest.java">
<error line="105" column="49" severity="warning" message="The String &quot;line.separator&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="109" column="34" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="110" column="17" severity="warning" message="The String &quot;-i&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="111" column="17" severity="warning" message="The String &quot;-o&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="111" column="23" severity="warning" message="The String &quot;./target/spooned/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="112" column="17" severity="warning" message="The String &quot;-c&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="133" column="19" severity="warning" message="The String &quot;/**&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="135" column="19" severity="warning" message="The String &quot; */&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="154" column="22" severity="warning" message="The String &quot;\n&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="166" column="22" severity="warning" message="The String &quot;A short description without a proper end&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="174" column="35" severity="warning" message="The String &quot;./src/test/resources/comment/JavaDocComment.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="178" column="73" severity="warning" message="The String &quot;spoon.test.comment.testclasses.JavaDocComment&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="198" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="199" column="34" severity="warning" message="The String &quot; *&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="202" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="207" column="22" severity="warning" message="The String &quot;JavaDoc test class.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="208" column="19" severity="warning" message="The String &quot;Long description&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="225" column="22" severity="warning" message="The String &quot;1.3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="230" column="22" severity="warning" message="The String &quot;the parameters&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="231" column="22" severity="warning" message="The String &quot;i&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="247" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="247" column="53" severity="warning" message="The String &quot;@deprecated&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="251" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="267" column="69" severity="warning" message="The String &quot;m&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="295" column="22" severity="warning" message="The String &quot;Bottom File&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="304" column="45" severity="warning" message="The String &quot;:&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="304" column="73" severity="warning" message="The String &quot; is not printed&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="308" column="43" severity="warning" message="The String &quot;comment class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="310" column="42" severity="warning" message="The String &quot;field&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="312" column="43" severity="warning" message="The String &quot;Comment Field&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="320" column="43" severity="warning" message="The String &quot;comment static block&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="321" column="43" severity="warning" message="The String &quot;comment inside static&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="323" column="19" severity="warning" message="The String &quot;static {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="325" column="19" severity="warning" message="The String &quot;}&quot; appears 21 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="329" column="43" severity="warning" message="The String &quot;comment constructor&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="331" column="43" severity="warning" message="The String &quot;Comment in constructor&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="339" column="43" severity="warning" message="The String &quot;comment method&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="340" column="43" severity="warning" message="The String &quot;comment empty method block&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="341" column="22" severity="warning" message="The String &quot;// comment method&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="342" column="19" severity="warning" message="The String &quot;public void m() {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="347" column="46" severity="warning" message="The String &quot;m1&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="350" column="43" severity="warning" message="The String &quot;comment switch&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="352" column="19" severity="warning" message="The String &quot;switch (1) {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="354" column="19" severity="warning" message="The String &quot;    case 0 :&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="356" column="19" severity="warning" message="The String &quot;    case 1 :&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="358" column="19" severity="warning" message="The String &quot;        int i = 0;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="359" column="19" severity="warning" message="The String &quot;    default :&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="364" column="43" severity="warning" message="The String &quot;comment for&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="366" column="19" severity="warning" message="The String &quot;for (int i = 0; i &lt; 10; i++) {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="371" column="43" severity="warning" message="The String &quot;comment if&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="373" column="19" severity="warning" message="The String &quot;if ((1 % 2) == 0) {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="375" column="19" severity="warning" message="The String &quot;    field++;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="379" column="43" severity="warning" message="The String &quot;comment constructor call&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="384" column="43" severity="warning" message="The String &quot;comment invocation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="386" column="19" severity="warning" message="The String &quot;this.m()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="389" column="43" severity="warning" message="The String &quot;comment local variable&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="391" column="19" severity="warning" message="The String &quot;int i = 0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="394" column="43" severity="warning" message="The String &quot;comment multi assignments&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="396" column="19" severity="warning" message="The String &quot;int j = 2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="399" column="43" severity="warning" message="The String &quot;comment dowhile&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="401" column="19" severity="warning" message="The String &quot;do {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="403" column="19" severity="warning" message="The String &quot;    i++;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="405" column="19" severity="warning" message="The String &quot;} while (i &lt; 10 )&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="408" column="43" severity="warning" message="The String &quot;comment try&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="410" column="19" severity="warning" message="The String &quot;try {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="420" column="43" severity="warning" message="The String &quot;comment synchronized&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="422" column="19" severity="warning" message="The String &quot;synchronized(this) {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="458" column="43" severity="warning" message="The String &quot;comment return&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="460" column="19" severity="warning" message="The String &quot;return&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="463" column="45" severity="warning" message="The String &quot;m2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="479" column="19" severity="warning" message="The String &quot;int i) throws java.lang.Error, java.lang.Exception {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="647" column="30" severity="warning" message="The String &quot;// foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="656" column="22" severity="warning" message="The String &quot;/* // foo */&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="683" column="19" severity="warning" message="The String &quot;void newMethod() {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="708" column="28" severity="warning" message="The String &quot;comment&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="713" column="22" severity="warning" message="The String &quot;// comment&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="761" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="784" column="75" severity="warning" message="The String &quot;System.out.println(\&quot;Caenorhabditis\&quot;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="788" column="78" severity="warning" message="The String &quot;\&quot;Caenorhabditis\&quot; + \&quot;Caenorhabditis\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="817" column="47" severity="warning" message="The String &quot; has no documentation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="895" column="110" severity="warning" message="The String &quot;doc/code_elements.md&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="919" column="60" severity="warning" message="The String &quot;./src/test/java/spoon/test/comment/testclasses/WindowsEOL.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="934" column="34" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="956" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="960" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="977" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="978" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="1008" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1016" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1024" column="34" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="1050" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1069" column="22" severity="warning" message="The String &quot;// c3 belongs to getClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1114" column="17" severity="warning" message="The String &quot; *\r&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1145" column="22" severity="warning" message="The String &quot;comment1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1146" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1173" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1174" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1175" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1178" column="22" severity="warning" message="The String &quot;param1&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1179" column="22" severity="warning" message="The String &quot;param2&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1187" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/TestClassWithComments.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/JavaDocComment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/OtherJavaDoc.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/Comment2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/CatchComments.java">
<error line="7" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/AnnotationTypeComments.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/JavaDocEmptyCommentAndTags.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/WithIfBlock.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/LambdaComments.java">
<error line="8" column="67" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="18" column="57" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="26" column="69" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="30" column="67" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="35" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="41" column="58" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="41" column="74" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="43" column="59" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="43" column="81" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="45" column="61" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="45" column="77" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="47" column="64" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="49" column="59" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="49" column="74" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="49" column="88" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="49" column="103" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/WildComments.java">
<error line="8" column="37" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="14" column="13" severity="warning" message="The String &quot;/* starts with /*&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="20" column="13" severity="warning" message="The String &quot;/ starts with /&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="22" column="13" severity="warning" message="The String &quot;// starts with //&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="29" column="13" severity="warning" message="The String &quot;/ starts with space and /&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="33" column="13" severity="warning" message="The String &quot;// starts with space and //&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="83" column="13" severity="warning" message="The String &quot;*&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/EnumClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/WindowsEOL.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/EmptyStatementComments.java">
<error line="8" column="19" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/CommentsOnStatements.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/Comment1.java">
<error line="12" column="9" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/BlockComment.java">
<error line="20" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="26" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="30" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="32" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="34" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="36" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="39" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="41" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="43" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="45" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="47" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="50" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="53" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="56" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="57" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="57" column="20" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="58" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="60" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="62" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="65" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="67" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="69" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="70" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="72" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="74" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="77" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="78" column="9" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
<error line="87" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="89" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="91" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="93" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="95" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="97" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="98" column="14" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comment/testclasses/InlineComment.java">
<error line="25" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="62" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="79" column="9" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="113" column="9" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/interfaces/TestInterfaceWithoutSetup.java">
<error line="44" column="32" severity="warning" message="The String &quot;./src/test/resources/spoon/test/itf/DumbItf.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="56" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="57" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="58" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="61" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="65" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="66" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="67" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="73" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="74" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="75" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="80" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="83" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="84" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="93" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="94" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="95" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="100" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="101" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="105" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="106" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="109" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="110" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="114" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="115" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="118" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="119" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="120" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="124" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="127" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="131" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="132" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="149" column="105" severity="warning" message="The String &quot;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="149" column="122" severity="warning" message="The String &quot;\\s&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/interfaces/testclasses/RedefinesDefaultMethodInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/interfaces/testclasses/InterfaceWithDefaultMethods.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/interfaces/testclasses/ExtendsDefaultMethodInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/interfaces/testclasses/ExtendsStaticMethodInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/interfaces/testclasses/RedefinesStaticMethodInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/interfaces/InterfaceTest.java">
<error line="63" column="67" severity="warning" message="The String &quot;getZonedDateTime&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="20" severity="warning" message="The String &quot;The method in the interface must to be default&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="87" column="22" severity="warning" message="The String &quot;Sub interface must have only one method in its interface&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="88" column="22" severity="warning" message="The String &quot;Sub interface must have 6 methods in its interface and its super interfaces&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="92" column="20" severity="warning" message="The String &quot;Interface of the default method must be the sub interface&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="114" column="74" severity="warning" message="The String &quot;getZoneId&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="116" column="20" severity="warning" message="The String &quot;Interface of the static method must be the sub interface&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/signature/SignatureTest.java">
<error line="72" column="30" severity="warning" message="The String &quot;class X {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="73" column="35" severity="warning" message="The String &quot; return null;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="73" column="53" severity="warning" message="The String &quot;}};&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="77" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="112" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="134" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="137" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="145" column="10" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="145" column="53" severity="warning" message="The String &quot;Integer.toBinaryString(20)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="153" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="156" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="165" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="168" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="176" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="178" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="195" column="31" severity="warning" message="The String &quot;class PR {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="200" column="19" severity="warning" message="The String &quot; this.foo(s);&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="201" column="19" severity="warning" message="The String &quot;this.foo(p);&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="203" column="19" severity="warning" message="The String &quot;}&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="210" column="19" severity="warning" message="The String &quot;};&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="232" column="22" severity="warning" message="The String &quot;foo(java.lang.String)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="281" column="9" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/change/testclasses/SubjectOfChange.java">
<error line="5" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/change/ChangeCollectorTest.java">
<error line="81" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/serializable/SerializableTest.java">
<error line="44" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;factory&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="70" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="75" column="32" severity="warning" message="The String &quot;spoon.test.serializable.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="75" column="71" severity="warning" message="The String &quot;Dummy&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="87" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="88" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/serializable/testclasses/Dummy.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/serializable/SourcePositionTest.java">
<error line="62" column="45" severity="warning" message="The String &quot;SomeClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="66" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="67" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="68" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="70" column="42" severity="warning" message="The String &quot;a&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="72" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/serializable/ModelStreamerTest.java">
<error line="72" column="53" severity="warning" message="The String &quot; bytes for &quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/snippets/SnippetTest.java">
<error line="53" column="30" severity="warning" message="The String &quot;class X {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="53" column="44" severity="warning" message="The String &quot;public void foo() {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="54" column="35" severity="warning" message="The String &quot;}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="54" column="41" severity="warning" message="The String &quot;};&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="69" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="78" column="100" severity="warning" message="The String &quot;1 &gt; 2&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="84" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="89" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="91" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="95" column="26" severity="warning" message="The String &quot;1 &gt; 3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="97" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="110" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="117" column="59" severity="warning" message="The String &quot;return 3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="138" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="161" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/ArrayRealVector.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/ToBeChanged.java">
<error line="33" column="6" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="36" column="5" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/FooCasper.java">
<error line="58" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="61" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/Rule.java">
<error line="92" column="50" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/Validation.java">
<error line="29" column="24" severity="warning" message="The String &quot;false&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="36" column="56" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="49" column="45" severity="warning" message="The String &quot;org.apache.el.parser.SKIP_IDENTIFIER_CHECK&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="27" severity="warning" message="Return count for &apos;isIdentifier&apos; method is 5 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/loop/WhileWithBraces.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/loop/ForNoBraces.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/loop/WhileNoBraces.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/loop/ForEachNoBraces.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/sub/TypeIdentifierCollision.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/sub/Constants.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/ElementScan.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/AClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/MissingVariableDeclaration.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/TypeIdentifierCollision.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/ImportStatic.java">
<error line="16" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/testclasses/QualifiedThisRef.java">
<error line="15" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/TestSniperPrinter.java">
<error line="89" column="51" severity="warning" message="The String &quot;modified&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="35" severity="warning" message="The String &quot;andSomeOtherMethod&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="232" column="91" severity="warning" message="The String &quot;.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="248" column="62" severity="warning" message="The String &quot;\\.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="248" column="69" severity="warning" message="The String &quot;/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="298" column="96" severity="warning" message="The String &quot;\t&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/PrinterTest.java">
<error line="87" column="87" severity="warning" message="The String &quot;import java.util.List;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="152" column="20" severity="warning" message="The String &quot;The result should contain import java.util.ArrayList: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="152" column="94" severity="warning" message="The String &quot;import java.util.ArrayList;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="153" column="20" severity="warning" message="The String &quot;The result should contain import java.util.List: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="154" column="20" severity="warning" message="The String &quot;The result should contain import static org.Bar.m: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="212" column="20" severity="warning" message="The String &quot;The result should contain direct this accessor for field: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="212" column="106" severity="warning" message="The String &quot;Rule.Phoneme.this.phonemeText&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="265" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="269" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="309" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="322" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="325" column="59" severity="warning" message="The String &quot; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="347" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="364" column="44" severity="warning" message="The String &quot;writeSeparator&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="386" column="32" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="404" column="44" severity="warning" message="The String &quot;writeIdentifier&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="409" column="39" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="411" column="39" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="435" column="44" severity="warning" message="The String &quot;writeln&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="464" column="32" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="494" column="44" severity="warning" message="The String &quot;writeWhitespace&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="528" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/LinesTest.java">
<error line="73" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="85" column="38" severity="warning" message="The String &quot;--lines&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="85" column="49" severity="warning" message="The String &quot;--with-imports&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="113" column="45" severity="warning" message="The String &quot; not handled&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="116" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="119" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/QualifiedThisRefTest.java">
<error line="75" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="86" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="87" column="22" severity="warning" message="The String &quot;notify()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="90" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="109" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="134" column="60" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="135" column="78" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="143" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/LoopSniperJavaPrettyPrinterTest.java">
<error line="55" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/prettyprinter/DefaultPrettyPrinterTest.java">
<error line="88" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="104" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="113" column="42" severity="warning" message="The String &quot;./src/test/java/spoon/test/prettyprinter/testclasses/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="15" severity="warning" message="The String &quot;        return new ArrayList&lt;&gt;();&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="15" severity="warning" message="The String &quot;    }&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="125" column="15" severity="warning" message="The String &quot;}&quot; appears 10 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="129" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="138" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="139" column="22" severity="warning" message="The String &quot;Object&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="153" column="15" severity="warning" message="The String &quot;    return new ArrayList&lt;&gt;();&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="157" column="71" severity="warning" message="The String &quot;aMethod&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="165" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="190" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="277" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="294" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="312" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="336" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="350" column="89" severity="warning" message="The String &quot;machin&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="357" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="358" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="369" column="22" severity="warning" message="The String &quot;this(v, true)&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="394" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/testclasses3/Cooking.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/testclasses3/Prepare.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/ClassFactoryTest.java">
<error line="34" column="78" severity="warning" message="The String &quot;Inner&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="46" column="75" severity="warning" message="The String &quot;TopLevel&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/testclasses2/Baz.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/AnnotationFactoryTest.java">
<error line="38" column="51" severity="warning" message="The String &quot;names&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="38" column="72" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="38" column="73" severity="warning" message="The String &quot;foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="38" column="80" severity="warning" message="The String &quot;bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="41" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/TypeFactoryTest.java">
<error line="44" column="22" severity="warning" message="The String &quot;short&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="82" column="52" severity="warning" message="The String &quot;spoon.test.factory.testclasses3.Cooking$Tacos&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="89" column="55" severity="warning" message="The String &quot;spoon.test.factory.testclasses3.Prepare$Tacos&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/FieldFactoryTest.java">
<error line="44" column="33" severity="warning" message="The String &quot;spoon.test.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="44" column="59" severity="warning" message="The String &quot;SampleClass&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="51" column="34" severity="warning" message="The String &quot;name&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="58" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="68" column="43" severity="warning" message="The String &quot;i&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="80" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/CodeFactoryTest.java">
<error line="45" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="58" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/ConstructorFactoryTest.java">
<error line="57" column="29" severity="warning" message="The String &quot;str&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/FactoryTest.java">
<error line="60" column="33" severity="warning" message="The String &quot;spoon.test.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="60" column="59" severity="warning" message="The String &quot;SampleClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="47" severity="warning" message="The String &quot;method3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="71" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="101" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="111" column="68" severity="warning" message="The String &quot;clazz&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="115" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="116" column="22" severity="warning" message="The String &quot;spoon.test.factory.testclasses.Foo.class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="118" column="68" severity="warning" message="The String &quot;classes&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="122" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="146" column="43" severity="warning" message="The String &quot;spoon&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="229" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/factory/ExecutableFactoryTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method_overriding/testclasses2/ObjectInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method_overriding/testclasses/D.java">
<error line="7" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method_overriding/testclasses/B.java">
<error line="7" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method_overriding/testclasses/A.java">
<error line="7" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method_overriding/testclasses/C.java">
<error line="9" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method_overriding/testclasses/IA.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method_overriding/MethodOverriddingTest.java">
<error line="48" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="49" column="63" severity="warning" message="The String &quot;equals&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="52" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="55" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="67" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="71" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="74" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="98" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="105" column="9" severity="warning" message="Variable &apos;m1&apos; can be moved inside the block at line &apos;106&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="122" column="31" severity="warning" message="The String &quot; NOT overriding &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/strings/testclasses/Main.java">
<error line="10" column="28" severity="warning" message="The String &quot;c&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="12" column="28" severity="warning" message="The String &quot;c\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="13" column="34" severity="warning" message="The String &quot;test&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/strings/StringLiteralTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/strings/StringTest.java">
<error line="34" column="67" severity="warning" message="The String &quot;Main&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="42" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="43" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctElement/testclasses/Returner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctElement/MetadataTest.java">
<error line="46" column="25" severity="warning" message="The String &quot;foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="46" column="32" severity="warning" message="The String &quot;bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="47" column="25" severity="warning" message="The String &quot;fiz&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctElement/ElementTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/modifiers/testclasses/StaticMethod.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/modifiers/testclasses/MethodVarArgs.java">
<error line="15" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/modifiers/testclasses/AbstractClass.java">
<error line="7" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="11" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/modifiers/testclasses/ConcreteClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/modifiers/ModifiersTest.java">
<error line="50" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/modifiers/testclasses/MethodVarArgs.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="54" column="59" severity="warning" message="The String &quot;getInitValues&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="141" column="26" severity="warning" message="The String &quot;The field &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="141" column="61" severity="warning" message="The String &quot; should be take into account.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="157" column="22" severity="warning" message="The String &quot;otherMethod&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="161" column="22" severity="warning" message="The String &quot;anotherOne&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="166" column="26" severity="warning" message="The String &quot;The method &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="166" column="63" severity="warning" message="The String &quot; should be taken into account.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="46" severity="warning" message="The String &quot; is wrong&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="219" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="223" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="231" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="239" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/testclasses/RethrowingClass.java">
<error line="19" column="11" severity="warning" message="Useless catch block. No logging, wrapping or handling code here." source="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/testclasses/Bar.java">
<error line="10" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/testclasses/internal/MyException2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/testclasses/internal/MyException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/testclasses/Statement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/testclasses/TryCatchResourceClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/testclasses/Main.java">
<error line="11" column="32" severity="warning" message="The String &quot;test&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="12" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="18" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/trycatch/TryCatchTest.java">
<error line="61" column="36" severity="warning" message="The String &quot;spoon.test.trycatch.testclasses&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="71" severity="warning" message="The String &quot;Main&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="68" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="81" column="30" severity="warning" message="The String &quot;class X {&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="81" column="44" severity="warning" message="The String &quot;public void foo() {&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="97" column="66" severity="warning" message="The String &quot;}&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="98" column="35" severity="warning" message="The String &quot;};&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="105" column="22" severity="warning" message="The String &quot;java.lang.System.exit(0)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="167" column="69" severity="warning" message="The String &quot;TryCatchResourceClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="174" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="186" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="219" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="220" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="221" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="289" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="306" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/lambda/LambdaTest.java">
<error line="176" column="34" severity="warning" message="The String &quot;p&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="192" column="34" severity="warning" message="The String &quot;p1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="195" column="34" severity="warning" message="The String &quot;p2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="249" column="19" severity="warning" message="The String &quot;}))&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="282" column="92" severity="warning" message="The String &quot;m8&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="311" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="322" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="334" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="339" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="352" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="359" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="361" column="22" severity="warning" message="The String &quot;int&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="371" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="387" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="397" column="1" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="441" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="450" column="22" severity="warning" message="The String &quot;elt&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="451" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="456" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/lambda/testclasses/Intersection.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/lambda/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/lambda/testclasses/LambdaRxJava.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/lambda/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/lambda/testclasses/Panini.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/lambda/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/lambda/testclasses/Kuu.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructor/testclasses/Tacos.java">
<error line="9" column="9" severity="warning" message="Super call could be removed: Class &apos;Tacos&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructor/testclasses/ImplicitConstructor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructor/testclasses/AClass.java">
<error line="8" column="27" severity="warning" message="Redundant super constructor call could be removed. Class &apos;AClass&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructor/ConstructorTest.java">
<error line="67" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="68" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="74" column="87" severity="warning" message="The String &quot;int i = 0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="77" column="22" severity="warning" message="The String &quot;super()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="88" column="11" severity="warning" message="Catching &apos;RuntimeException&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="143" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/compilation/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/compilation/testclasses/IBar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/compilation/testclasses/Ifoo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/compilation/CompilationTest.java">
<error line="75" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="80" column="35" severity="warning" message="The String &quot;src/test/resources/compilation/&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="107" column="29" severity="warning" message="The String &quot;./src/test/resources/noclasspath/Simple.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="115" column="34" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="116" column="17" severity="warning" message="The String &quot;-i&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="123" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="125" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="145" column="46" severity="warning" message="The String &quot;Simple&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="30" severity="warning" message="The String &quot;m&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="169" column="75" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="197" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="236" column="82" severity="warning" message="The String &quot;Foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="254" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="256" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="294" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="296" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="303" column="31" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="303" column="32" severity="warning" message="The String &quot;--noclasspath&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="305" column="52" severity="warning" message="The String &quot;compilation.Bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="314" column="32" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="314" column="33" severity="warning" message="The String &quot;--precompile&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="324" column="32" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="335" column="27" severity="warning" message="The String &quot;spoontest.a.ClassA&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="347" column="66" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="355" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="368" column="81" severity="warning" message="The String &quot;spoontest.IFoo&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="369" column="80" severity="warning" message="The String &quot;spoontest.Foo&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="370" column="20" severity="warning" message="The String &quot;Foo subtype of IFoo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="392" column="66" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="403" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="436" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="437" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="445" column="27" severity="warning" message="The String &quot;target/classes/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="475" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="484" column="45" severity="warning" message="The String &quot;user.dir&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="551" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="556" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="557" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="558" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctBodyHolder/CtBodyHolderTest.java">
<error line="70" column="49" severity="warning" message="The String &quot;method2&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="72" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="87" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="99" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="111" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="118" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="123" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctBodyHolder/testclasses/ClassWithBodies.java">
<error line="18" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctBodyHolder/testclasses/CWBStatementTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/testclasses/SampleForInsertBefore.java">
<error line="30" column="9" severity="warning" message="Super call could be removed: Class &apos;SampleForInsertBefore&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/processors/CtInterfaceProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/processors/ArrayResizeProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/processors/GenericCtTypeProcessor.java">
<error line="34" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/processors/CtClassProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/processors/RenameProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/processors/CtTypeProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/processors/MyProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/processors/TestProcessor.java">
<error line="42" column="62" severity="warning" message="The String &quot;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/processing/ProcessingTest.java">
<error line="69" column="33" severity="warning" message="The String &quot;spoon.test.processing.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="69" column="70" severity="warning" message="The String &quot;SampleForInsertBefore&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="73" column="49" severity="warning" message="The String &quot;int i = 0;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="74" column="26" severity="warning" message="The String &quot;insert failed for method &quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="83" column="26" severity="warning" message="The String &quot;insert failed for constructor &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="97" column="22" severity="warning" message="The String &quot;insert has not been done at the right position&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="101" column="25" severity="warning" message="The String &quot;switch should not be the same&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="112" column="49" severity="warning" message="The String &quot;int i = 0&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="148" column="44" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="168" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="171" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="180" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="181" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="182" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="186" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="221" column="19" severity="warning" message="The String &quot;aString&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="221" column="30" severity="warning" message="The String &quot;foo&quot; appears 10 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="222" column="19" severity="warning" message="The String &quot;anInt&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="224" column="19" severity="warning" message="The String &quot;anObject&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="227" column="19" severity="warning" message="The String &quot;arrayInt&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="228" column="19" severity="warning" message="The String &quot;listString&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="228" column="59" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="228" column="60" severity="warning" message="The String &quot;42&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="231" column="19" severity="warning" message="The String &quot;arrayBoolean&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="234" column="19" severity="warning" message="The String &quot;mapStringDouble&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="242" column="48" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="247" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="278" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="287" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="337" column="48" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="337" column="56" severity="warning" message="The String &quot;bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="338" column="40" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="345" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="350" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="357" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="360" column="24" severity="warning" message="The String &quot;Type &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="360" column="53" severity="warning" message="The String &quot; is not a class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="364" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="382" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="388" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="394" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="398" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="399" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="401" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="402" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="404" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="405" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="410" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="423" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="426" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="430" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="431" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="432" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/intercession/RemoveTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/intercession/insertBefore/InsertMethodsTest.java">
<error line="77" column="22" severity="warning" message="The String &quot;int z = x + y&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="81" column="23" severity="warning" message="The String &quot;System.out.println(x);&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="109" column="112" severity="warning" message="The String &quot;ifWithoutBraces&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="112" column="78" severity="warning" message="The String &quot;return 2&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="126" column="109" severity="warning" message="The String &quot;ifWithBraces&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="135" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="152" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="168" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="175" column="97" severity="warning" message="The String &quot;switchMethod&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="182" column="84" severity="warning" message="The String &quot;System.out.println(\&quot;foo\&quot;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="247" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="268" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="268" column="22" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="273" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="274" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="286" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="287" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/intercession/insertBefore/InsertBeforeExample.java">
<error line="5" column="9" severity="warning" message="Super call could be removed: Class &apos;InsertBeforeExample&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="10" column="14" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="16" column="14" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="23" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/intercession/OneCanCallSetterWithNullParameterizedTest.java">
<error line="69" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="72" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="77" column="9" severity="warning" message="Variable &apos;factory&apos; can be moved inside the block at line &apos;79&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/intercession/IntercessionTest.java">
<error line="68" column="30" severity="warning" message="The String &quot;class X {&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="44" severity="warning" message="The String &quot;public void foo() {&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="68" severity="warning" message="The String &quot; int x=0;&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="69" column="35" severity="warning" message="The String &quot;}&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="69" column="41" severity="warning" message="The String &quot;};&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="142" column="25" severity="warning" message="The String &quot;if (1 == 0)\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="142" column="43" severity="warning" message="The String &quot;    return 1;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="142" column="63" severity="warning" message="The String &quot;else\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="143" column="19" severity="warning" message="The String &quot;    return 0;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="49" severity="warning" message="The String &quot;\r&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="160" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="161" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="211" column="96" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="227" column="69" severity="warning" message="The String &quot;set&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="254" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/intercession/IntercessionScanner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/testclasses/UseDouble.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/testclasses/MethodeWithNonAccessibleTypeArgument.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/testclasses/A2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/testclasses/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/testclasses/internal/Double.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/testclasses/Float.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/packageprotected/NonAccessibleInterf.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/packageprotected/AccessibleClassFromNonAccessibleInterf.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/visibility/VisibilityTest.java">
<error line="102" column="50" severity="warning" message="The String &quot;B&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="107" column="58" severity="warning" message="The String &quot;instanceOf&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="112" column="58" severity="warning" message="The String &quot;returnType&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="174" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/path/PathTest.java">
<error line="85" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="91" column="42" severity="warning" message="The String &quot;spoon&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="56" severity="warning" message="The String &quot;test&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="69" severity="warning" message="The String &quot;path&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="82" severity="warning" message="The String &quot;testclasses&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="102" severity="warning" message="The String &quot;Foo&quot; appears 18 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="93" column="36" severity="warning" message="The String &quot;spoon.test.path.testclasses.Foo&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="97" column="114" severity="warning" message="The String &quot;bar&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="114" severity="warning" message="The String &quot;()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="122" column="62" severity="warning" message="The String &quot;spoon.test.path.testclasses.Foo()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="127" column="146" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="135" column="54" severity="warning" message="The String &quot;.spoon.test.path.testclasses.Foo/CtMethod&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="145" column="62" severity="warning" message="The String &quot;toto&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="148" column="39" severity="warning" message="The String &quot;spoon.test.path.testclasses&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="156" column="54" severity="warning" message="The String &quot;.spoon.test.path.testclasses.Foo.foo#body#statement[index=0]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="157" column="95" severity="warning" message="The String &quot;foo&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="160" column="53" severity="warning" message="The String &quot;.spoon.test.path.testclasses.Foo.bar/CtParameter&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="181" column="53" severity="warning" message="The String &quot;.spoon.test.path.testclasses.Foo.toto#defaultExpression&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="241" column="53" severity="warning" message="The String &quot;.spoon.test.path.testclasses.Foo.*#body#statement[index=0]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="251" column="102" severity="warning" message="The String &quot;methodWithArgs&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="273" column="60" severity="warning" message="The String &quot;.**/CtIf#else&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="295" column="53" severity="warning" message="The String &quot;.**#else&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/path/testclasses/Foo.java">
<error line="7" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;Foo&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="30" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="38" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="41" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="43" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="46" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/testclasses/SampleImportClass.java">
<error line="21" column="9" severity="warning" message="Super call could be removed: Class &apos;SampleImportClass&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/testclasses/SampleClass.java">
<error line="17" column="9" severity="warning" message="Super call could be removed: Class &apos;SampleClass&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/loop/LoopTest.java">
<error line="48" column="37" severity="warning" message="The String &quot;m&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="83" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="85" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/loop/testclasses/EmptyLoops.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/loop/testclasses/Condition.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/loop/testclasses/Join.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/query_function/testclasses/VariableReferencesFromStaticMethod.java">
<error line="10" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/query_function/testclasses/VariableReferencesModelTest.java">
<error line="23" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="27" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="29" column="13" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="30" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="33" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="35" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="37" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="45" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="49" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="52" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="55" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="57" column="9" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="57" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="67" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="71" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="77" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="81" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="89" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="93" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="98" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="109" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="111" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="114" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="122" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="129" column="52" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="137" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="143" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="151" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="156" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="164" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="170" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="172" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="174" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="178" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="187" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="194" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="196" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="198" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="199" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="203" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="217" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="220" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="226" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="228" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="230" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="231" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="235" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="241" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="244" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="249" column="31" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="251" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="253" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="257" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="263" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="266" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="270" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="271" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="275" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="282" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/query_function/VariableReferencesTest.java">
<error line="94" column="69" severity="warning" message="The String &quot; in &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="113" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="183" column="16" severity="warning" message="The String &quot;field&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="190" column="66" severity="warning" message="Return count for the lambda is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="212" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="259" column="11" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="260" column="30" severity="warning" message="Either log or throw exception." source="com.github.sevntu.checkstyle.checks.coding.EitherLogOrThrowCheck"/>
<error line="286" column="21" severity="warning" message="Return count for &apos;getLiteralValue&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="299" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/GenericsWithAmbiguousStaticField.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/ImplicitStaticClassAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/ChildOfGenericsWithAmbiguousStaticField.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/ImplicitFieldReference.java">
<error line="13" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/AmbiguousImplicitFieldReference.java">
<error line="18" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/ALong.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/Constants.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/ChildOfConstants.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/GenericsWithAmbiguousMemberField.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/testclasses/ImplicitStaticFieldReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess2/ImplicitStaticFieldReferenceTest.java">
<error line="37" column="9" severity="warning" message="Variable &apos;launcher&apos; can be moved inside the block at line &apos;38&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="37" column="46" severity="warning" message="The String &quot;ImplicitStaticFieldReference.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="40" column="26" severity="warning" message="The String &quot;return ImplicitStaticFieldReference&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="40" column="79" severity="warning" message="The String &quot;reader&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="41" column="26" severity="warning" message="The String &quot;ImplicitStaticFieldReference = value&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="41" column="87" severity="warning" message="The String &quot;writer&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="42" column="26" severity="warning" message="The String &quot;reader()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="42" column="59" severity="warning" message="The String &quot;testLocalMethodInvocations&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="26" severity="warning" message="The String &quot;longWriter(7)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="9" severity="warning" message="Variable &apos;launcher&apos; can be moved inside the block at line &apos;50&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="61" column="9" severity="warning" message="Variable &apos;launcher&apos; can be moved inside the block at line &apos;62&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="61" column="46" severity="warning" message="The String &quot;ImplicitFieldReference.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="26" severity="warning" message="The String &quot;return memberField&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="62" severity="warning" message="The String &quot;getMemberField&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="26" severity="warning" message="The String &quot;memberField = p_memberField&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="78" severity="warning" message="The String &quot;setMemberField&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="26" severity="warning" message="The String &quot;getMemberField()&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="72" column="9" severity="warning" message="Variable &apos;launcher&apos; can be moved inside the block at line &apos;73&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="84" column="9" severity="warning" message="Variable &apos;launcher&apos; can be moved inside the block at line &apos;85&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="84" column="46" severity="warning" message="The String &quot;AmbiguousImplicitFieldReference.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="95" column="9" severity="warning" message="Variable &apos;launcher&apos; can be moved inside the block at line &apos;96&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="107" column="46" severity="warning" message="The String &quot;ImplicitStaticClassAccess.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="115" column="46" severity="warning" message="The String &quot;GenericsWithAmbiguousStaticField.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="124" column="46" severity="warning" message="The String &quot;ChildOfGenericsWithAmbiguousStaticField.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="129" column="9" severity="warning" message="Variable &apos;launcher&apos; can be moved inside the block at line &apos;130&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="134" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="141" column="46" severity="warning" message="The String &quot;GenericsWithAmbiguousMemberField.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="46" severity="warning" message="The String &quot;ChildOfConstants.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="71" severity="warning" message="The String &quot;Constants.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/ImportScannerTest.java">
<error line="100" column="71" severity="warning" message="The String &quot;import &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="102" column="52" severity="warning" message="The String &quot;static &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="162" column="156" severity="warning" message="The String &quot; imports&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="180" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="210" column="43" severity="warning" message="The String &quot;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="236" column="30" severity="warning" message="The String &quot;spoon.test.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="237" column="28" severity="warning" message="The String &quot;SampleImportClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="238" column="46" severity="warning" message="The String &quot;.&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="247" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="304" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="333" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="333" column="53" severity="warning" message="The String &quot;import java.util.List;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="337" column="31" severity="warning" message="The String &quot;m&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="339" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="343" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/ImportAndExtendWithPackageNameTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/StaticNoOrdered.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal4/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal4/Constants.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/StaticImportsFromEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/ClientClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/SuperClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/DumbClassUsingInternal.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/Kun.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/multiplecu/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/multiplecu/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/ToBeModified.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal2/Menudo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal2/Chimichanga.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal3/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal3/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/Reflection.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/JavaLongUse.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/ShouldNotAutoreference.java">
<error line="24" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/TransportIndicesShardStoresAction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal/SuperClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal/ChildClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal/PublicSuperClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/internal/PublicInterface2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/Mole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/DefaultClientClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/SubClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/ClassWithInvocation.java">
<error line="10" column="13" severity="warning" message="Overridable method &apos;test&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/memberaccess/DoesnotExtendA.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/memberaccess/Iface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/memberaccess/A.java">
<error line="5" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="7" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/memberaccess/ExtendsA.java">
<error line="5" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="7" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/MultiCatch.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/NotImportExecutableType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/memberaccess2/DoesnotExtendA.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/memberaccess2/ExtendsA.java">
<error line="7" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="9" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/ItfWithEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/testclasses/Pozole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/CtUnresolvedImportTest.java">
<error line="21" column="54" severity="warning" message="The String &quot;spoon.A&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="25" column="54" severity="warning" message="The String &quot;spoon.m&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="33" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="34" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="35" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="36" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="37" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="38" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="39" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="42" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="49" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="50" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="51" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="52" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="53" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="54" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="55" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/name_scope/testclasses/Renata.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/name_scope/NameScopeTest.java">
<error line="54" column="54" severity="warning" message="The String &quot;michal&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="55" column="57" severity="warning" message="The String &quot;Tereza&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="57" column="62" severity="warning" message="The String &quot;draw&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="75" severity="warning" message="The String &quot;currentTimeMillis&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="76" severity="warning" message="The String &quot;newDirectoryStream&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="60" severity="warning" message="The String &quot;count&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/imports/ImportTest.java">
<error line="115" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/internal/SuperClass.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="116" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/internal/ChildClass.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="118" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/ClientClass.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="40" severity="warning" message="The String &quot;./target/spoon/super_imports/bin&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="40" severity="warning" message="The String &quot;./target/spoon/super_imports/src&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="123" column="116" severity="warning" message="The String &quot;ClientClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="125" column="67" severity="warning" message="The String &quot;InnerClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="126" column="27" severity="warning" message="The String &quot;spoon.test.imports.testclasses.ClientClass.InnerClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="131" column="22" severity="warning" message="The String &quot;spoon.test.imports.testclasses.internal.ChildClass.InnerClassProtected&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="133" column="22" severity="warning" message="The String &quot;spoon.test.imports.testclasses.internal.SuperClass.InnerClassProtected&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="137" column="22" severity="warning" message="The String &quot;SuperClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="138" column="53" severity="warning" message="The String &quot;spoon.test.imports.testclasses.internal.SuperClass$InnerClassProtected&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="156" column="22" severity="warning" message="The String &quot;spoon.test.imports.testclasses.ClientClass$InnerClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="195" column="37" severity="warning" message="The String &quot;--output-type&quot; appears 10 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="195" column="54" severity="warning" message="The String &quot;nooutput&quot; appears 9 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="229" column="113" severity="warning" message="The String &quot;    }&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="231" column="164" severity="warning" message="The String &quot;}&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="241" column="43" severity="warning" message="The String &quot;OFF&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="274" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="287" column="17" severity="warning" message="The String &quot;-i&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="287" column="23" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="287" column="102" severity="warning" message="The String &quot;--with-imports&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="304" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="328" column="53" severity="warning" message="The String &quot;staticMethod&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="328" column="76" severity="warning" message="The String &quot;A&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="331" column="76" severity="warning" message="The String &quot;pack1.A&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="340" column="53" severity="warning" message="The String &quot;makeBurritos&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="340" column="76" severity="warning" message="The String &quot;Tacos.Burritos&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="340" column="108" severity="warning" message="The String &quot;Burritos&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="352" column="53" severity="warning" message="The String &quot;staticD&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="352" column="71" severity="warning" message="The String &quot;C.D&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="352" column="92" severity="warning" message="The String &quot;D&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="355" column="71" severity="warning" message="The String &quot;pack2.C.D&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="364" column="53" severity="warning" message="The String &quot;staticE&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="364" column="71" severity="warning" message="The String &quot;pack3.E.E&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="364" column="98" severity="warning" message="The String &quot;E&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="430" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/internal4/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="431" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/Tacos.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="435" column="57" severity="warning" message="The String &quot;m&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="436" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="451" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="457" column="45" severity="warning" message="The String &quot;line.separator&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="475" column="106" severity="warning" message="The String &quot;$InnerClass&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="492" column="83" severity="warning" message="The String &quot;spoon.test.imports.testclasses.internal.SuperClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="503" column="22" severity="warning" message="The String &quot;spoon.test.imports.testclasses.internal.ChildClass&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="537" column="80" severity="warning" message="The String &quot; but it has not&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="539" column="84" severity="warning" message="The String &quot; but it has&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="546" column="85" severity="warning" message="The String &quot; but it has &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="578" column="26" severity="warning" message="The String &quot;spoon.test.imports.testclasses.ClientClass&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="581" column="26" severity="warning" message="The String &quot;spoon.test.imports.testclasses.internal.PublicInterface2&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="584" column="26" severity="warning" message="The String &quot;spoon.test.imports.testclasses.internal.SuperClass$PublicInterface&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="586" column="26" severity="warning" message="The String &quot;spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="587" column="142" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="588" column="137" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="589" column="112" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="590" column="136" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="591" column="134" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="606" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="606" column="66" severity="warning" message="The String &quot;privateField&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="607" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="607" column="66" severity="warning" message="The String &quot;protectedField&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="608" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="608" column="66" severity="warning" message="The String &quot;field&quot; appears 10 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="609" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="609" column="66" severity="warning" message="The String &quot;publicField&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="610" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="615" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="616" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="617" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="618" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="619" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="625" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="626" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="627" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="628" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="629" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="635" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="636" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="637" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="638" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="639" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="645" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="646" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="647" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="648" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="649" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="657" column="23" severity="warning" message="The String &quot;./src/test/resources/spoon/test/imports/testclasses2/AbstractMapBasedMultimap.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="661" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="663" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="666" column="59" severity="warning" message="The String &quot;spoon.test.imports.testclasses2.AbstractMapBasedMultimap&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="667" column="62" severity="warning" message="The String &quot;spoon.test.imports.testclasses2.AbstractMapBasedMultimap$WrappedList$WrappedListIterator&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="668" column="22" severity="warning" message="The String &quot;private class WrappedListIterator extends spoon.test.imports.testclasses2.AbstractMapBasedMultimap&lt;K, V&gt;.WrappedCollection.WrappedIterator {}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="669" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="669" column="43" severity="warning" message="The String &quot;AbstractMapBasedMultimap&lt;K, V&gt;.WrappedCollection.WrappedIterator&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="671" column="67" severity="warning" message="The String &quot;spoon.test.imports.testclasses2.AbstractMapBasedMultimap$OtherWrappedList$WrappedListIterator&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="672" column="22" severity="warning" message="The String &quot;private class WrappedListIterator extends spoon.test.imports.testclasses2.AbstractMapBasedMultimap&lt;K, V&gt;.OtherWrappedList.WrappedIterator {}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="684" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="686" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="696" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="706" column="23" severity="warning" message="The String &quot;./src/test/resources/spoon/test/imports/testclasses2/Interners.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="710" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="712" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="715" column="59" severity="warning" message="The String &quot;spoon.test.imports.testclasses2.Interners&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="716" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="716" column="43" severity="warning" message="The String &quot;java.util.List&lt;spoon.test.imports.testclasses2.Interners.WeakInterner.Dummy&gt; list;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="727" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="729" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="734" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="741" column="23" severity="warning" message="The String &quot;./src/test/resources/spoon/test/imports/testclasses2/StaticWithNested.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="745" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="747" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="750" column="59" severity="warning" message="The String &quot;spoon.test.imports.testclasses2.StaticWithNested&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="751" column="20" severity="warning" message="The String &quot;new spoon.test.imports.testclasses2.StaticWithNested.StaticNested.StaticNested2&lt;K&gt;();&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="762" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="764" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="768" column="20" severity="warning" message="The String &quot;new StaticNested2&lt;K&gt;();&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="784" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="796" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="925" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="929" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="930" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="931" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="932" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="935" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="939" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="940" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="941" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="942" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="946" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="950" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="951" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="952" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="953" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="957" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="961" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="962" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="963" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="964" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="984" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="989" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="992" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="995" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="996" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="997" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="998" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1004" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1012" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1015" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1018" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1019" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1020" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1021" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1027" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1035" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1038" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1041" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1042" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1043" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1044" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1055" column="65" severity="warning" message="The String &quot;UnknownSuperClass&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1061" column="22" severity="warning" message="The String &quot;java.lang.Object&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1067" column="22" severity="warning" message="The String &quot;NotInClasspath&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1121" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1124" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1127" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1147" column="43" severity="warning" message="The String &quot;/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1165" column="35" severity="warning" message="The String &quot;./src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/enums/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1166" column="35" severity="warning" message="The String &quot;./src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/enum2/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1167" column="35" severity="warning" message="The String &quot;./src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/LangTestSuite.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1181" column="20" severity="warning" message="The String &quot;The call to the last EnumTestSuite should be in FQN&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1210" column="21" severity="warning" message="The String &quot;The file should not contain a static import &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1210" column="85" severity="warning" message="The String &quot;import static&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1270" column="32" severity="warning" message="The String &quot;import&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1286" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1321" column="17" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="1336" column="76" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1366" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/DumbClassUsingInternal.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1397" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1534" column="27" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/JavaLongUse.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1537" column="22" severity="warning" message="The String &quot;public class JavaLongUse {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1538" column="17" severity="warning" message="The String &quot;    public class Long {}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1540" column="17" severity="warning" message="The String &quot;    public static long method() {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1541" column="17" severity="warning" message="The String &quot;        return java.lang.Long.parseLong(\&quot;10000\&quot;);&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1547" column="55" severity="warning" message="The String &quot;spoon.test.imports.testclasses.JavaLongUse&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1580" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1592" column="63" severity="warning" message="The String &quot;some.package.SomeType&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1597" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1598" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1603" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1604" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1607" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1608" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1641" column="36" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/B.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1650" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1650" column="40" severity="warning" message="The String &quot;import java.util.ArrayList;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1651" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1651" column="40" severity="warning" message="The String &quot;import spoon.SpoonException;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1666" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1667" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method/testclasses/Methods.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/method/MethodTest.java">
<error line="60" column="53" severity="warning" message="The String &quot;method1&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="108" severity="warning" message="The String &quot;}&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="88" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="96" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="105" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="134" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/labels/testclasses/ManyLabels.java">
<error line="11" column="52" severity="warning" message="The String &quot;test&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="27" column="17" severity="warning" message="The String &quot;f&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="35" column="25" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/labels/TestLabels.java">
<error line="59" column="22" severity="warning" message="The String &quot;labelBlock&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="60" column="22" severity="warning" message="The String &quot;sw&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="62" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="128" column="22" severity="warning" message="The String &quot;labelbreak&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/role/TestCtRole.java">
<error line="77" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="80" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/ArrayAccessSample.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/BurritosWithLoop.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/MultiBurritos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/Burritos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/VariableAccessSample.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/RHSSample.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/BurritosStaticMethod.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/BurritosWithTryCatch.java">
<error line="10" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/StackedAssignmentSample.java">
<error line="6" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/BurritosFielded.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/ForStaticVariables.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/digest/DigestUtil.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/digest/MessageDigest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/testclasses/FieldAccessSample.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/AccessTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/AccessFullyQualifiedFieldTest.java">
<error line="64" column="25" severity="warning" message="The String &quot;target/spooned-&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="20" severity="warning" message="The String &quot;The java file should contain import for Launcher&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="88" severity="warning" message="The String &quot;import spoon.Launcher;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="99" severity="warning" message="The String &quot;xx = Launcher.SPOONED_CLASSES&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="106" column="20" severity="warning" message="The String &quot;The xx variable should be attributed with SPOONED_CLASSES&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="124" column="31" severity="warning" message="The String &quot;src/test/java/spoon/test/variable/testclasses/MultiBurritos.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="127" column="35" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="139" column="20" severity="warning" message="The String &quot;The result should contain a static import for spoon.Launcher.SPOONED_CLASSES&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="139" column="116" severity="warning" message="The String &quot;import static spoon.Launcher.SPOONED_CLASSES;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/variable/InferredVariableTest.java">
<error line="45" column="35" severity="warning" message="The String &quot;./src/test/resources/spoon/test/var/Main.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="53" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="56" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="59" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="60" column="22" severity="warning" message="The String &quot;java.io.FileReader&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="62" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="65" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="68" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="71" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="74" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="91" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="95" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="96" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="97" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="98" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="111" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="112" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/targeted/TargetedExpressionTest.java">
<error line="85" column="67" severity="warning" message="The String &quot;InnerClassThisAccess&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="90" column="17" severity="warning" message="The String &quot;this.method()&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="93" column="80" severity="warning" message="The String &quot;1InnerClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="110" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="117" column="47" severity="warning" message="The String &quot;i&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="121" column="22" severity="warning" message="The String &quot;this.i&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="147" column="63" severity="warning" message="The String &quot;field&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="156" column="128" severity="warning" message="The String &quot;this.bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="159" column="138" severity="warning" message="The String &quot;this.o&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="160" column="138" severity="warning" message="The String &quot;o&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="171" column="63" severity="warning" message="The String &quot;m&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="179" column="152" severity="warning" message="The String &quot;this.k&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="180" column="152" severity="warning" message="The String &quot;spoon.test.targeted.testclasses.Foo.k&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="185" column="158" severity="warning" message="The String &quot;spoon.test.targeted.testclasses.Bar.FIELD&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="57" severity="warning" message="The String &quot;InnerClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="64" severity="warning" message="The String &quot;1NestedTypeScanner&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="220" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="247" column="68" severity="warning" message="The String &quot;invStatic&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="259" column="35" severity="warning" message="The String &quot;./src/test/resources/spoon/test/noclasspath/targeted/Foo.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="260" column="43" severity="warning" message="The String &quot;./target/noclasspath&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="263" column="99" severity="warning" message="The String &quot;Foo&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="264" column="99" severity="warning" message="The String &quot;Bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="265" column="93" severity="warning" message="The String &quot;Fii.Fuu&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="275" column="127" severity="warning" message="The String &quot;foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="280" column="130" severity="warning" message="The String &quot;Bar.staticFieldBar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="302" column="70" severity="warning" message="The String &quot;inv&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="308" column="127" severity="warning" message="The String &quot;method()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="311" column="142" severity="warning" message="The String &quot;superMethod()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="335" column="130" severity="warning" message="The String &quot;foo.staticMethod()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="336" column="127" severity="warning" message="The String &quot;this.staticMethod()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="337" column="127" severity="warning" message="The String &quot;spoon.test.targeted.testclasses.Foo.staticMethod()&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="339" column="133" severity="warning" message="The String &quot;spoon.test.targeted.testclasses.Bar.staticMethodBar()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="401" column="127" severity="warning" message="The String &quot;this.invStatic()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="429" column="121" severity="warning" message="The String &quot;Bar.staticMethodBar()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="460" column="154" severity="warning" message="The String &quot;this.index&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="485" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/targeted/testclasses/SuperClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/targeted/testclasses/Foo.java">
<error line="96" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/targeted/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/targeted/testclasses/Tapas.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/targeted/testclasses/InternalSuperCall.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/targeted/testclasses/InnerClassThisAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/targeted/testclasses/Pozole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/sourcePosition/testclasses/Brambora.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/sourcePosition/SourcePositionTest.java">
<error line="65" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="105" column="22" severity="warning" message="The String &quot;|1;9|123456789|\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="106" column="17" severity="warning" message="The String &quot;modifier = |2;2|2|\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/secondaryclasses/ClassesTest.java">
<error line="58" column="33" severity="warning" message="The String &quot;spoon.test.secondaryclasses.testclasses&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="59" column="17" severity="warning" message="The String &quot;ClassWithInternalPublicClassOrInterf&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="66" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="69" column="25" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="80" column="76" severity="warning" message="The String &quot;AnonymousClass&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="102" column="22" severity="warning" message="The String &quot;spoon.test.secondaryclasses.testclasses.AnonymousClass$1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="103" column="22" severity="warning" message="The String &quot;spoon.test.secondaryclasses.testclasses.AnonymousClass$2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="133" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="134" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="135" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="145" column="76" severity="warning" message="The String &quot;TopLevel&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/secondaryclasses/testclasses/ClassWithInternalPublicClassOrInterf.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/secondaryclasses/testclasses/TopLevel.java">
<error line="15" column="17" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/secondaryclasses/testclasses/PrivateInnerClasses.java">
<error line="9" column="9" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="20" column="67" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/secondaryclasses/testclasses/AnonymousClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/secondaryclasses/testclasses/Pozole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/limits/utils/testclasses/ContainInternalClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/limits/utils/InternalTest.java">
<error line="36" column="33" severity="warning" message="The String &quot;spoon.test.limits.utils.testclasses&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="36" column="72" severity="warning" message="The String &quot;ContainInternalClass&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/comparison/EqualTest.java">
<error line="55" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="57" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="78" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="80" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="98" column="63" severity="warning" message="The String &quot;try{}catch(RuntimeException | AssertionError e){}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="126" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/javadoc/JavaDocTest.java">
<error line="56" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/javadoc/testclasses/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/javadoc/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/javadoc/testclasses/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/javadoc/testclasses/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/methodreference/testclasses/Foo.java">
<error line="100" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="112" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="115" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/methodreference/testclasses/Cloud.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/methodreference/testclasses/AssertJ.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/methodreference/MethodReferenceTest.java">
<error line="87" column="39" severity="warning" message="The String &quot;Person&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="88" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="101" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="114" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="127" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="140" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="153" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="161" column="40" severity="warning" message="The String &quot;java.util.HashSet&lt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="166" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="209" column="57" severity="warning" message="The String &quot;b&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="211" column="57" severity="warning" message="The String &quot;toString&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="229" column="60" severity="warning" message="The String &quot;method&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="237" column="25" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="310" column="25" severity="warning" message="Unnecessary parentheses around identifier &apos;methodReference&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="318" column="65" severity="warning" message="The String &quot;assertThat&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctType/testclasses/X.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctType/testclasses/ErasureModelA.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctType/testclasses/SubtypeModel.java">
<error line="14" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctType/CtTypeParameterTest.java">
<error line="86" column="46" severity="warning" message="The String &quot;param&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="159" column="62" severity="warning" message="The String &quot;method&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="209" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="213" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctType/CtTypeTest.java">
<error line="53" column="13" severity="warning" message="The String &quot;class X { public void foo() {} }&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="54" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="64" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="71" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="77" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/ctType/testclasses/X.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="81" column="69" severity="warning" message="The String &quot;spoon.test.ctType.testclasses.Y&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="84" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="98" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="106" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="107" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="110" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="112" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="125" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="127" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="133" column="99" severity="warning" message="The String &quot;foo&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="139" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="140" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="142" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="143" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="144" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="146" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="147" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="149" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="150" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="156" column="38" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="180" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="186" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="187" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="195" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="199" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/executable/testclasses/MyIntf.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/executable/testclasses/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/executable/testclasses/WithEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/executable/testclasses/AnonymousExecutableSample.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/executable/testclasses/ExecutableRefTestSource.java">
<error line="6" column="24" severity="warning" message="The String &quot;Hello World&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/executable/testclasses/Pozole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/executable/ExecutableRefTest.java">
<error line="55" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="63" column="22" severity="warning" message="The String &quot;Hello World&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="70" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="86" column="91" severity="warning" message="The String &quot;myMethod&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="99" column="43" severity="warning" message="The String &quot;./target/executable&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="129" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/executable/ExecutableTest.java">
<error line="66" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="75" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="82" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="83" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="89" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="90" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="96" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="97" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="111" column="28" severity="warning" message="The String &quot;valueOf&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reflect/visitor/testclasses/ReferenceQueryTestEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reflect/visitor/ReferenceQueryTest.java">
<error line="38" column="41" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/condition/ConditionalTest.java">
<error line="61" column="50" severity="warning" message="The String &quot;m3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="67" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="72" column="17" severity="warning" message="The String &quot;    java.lang.System.out.println();&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/condition/testclasses/Foo.java">
<error line="7" column="30" severity="warning" message="Returning explicit boolean from ternary operator." source="com.github.sevntu.checkstyle.checks.coding.ReturnBooleanFromTernaryCheck"/>
<error line="12" column="24" severity="warning" message="Returning explicit boolean from ternary operator." source="com.github.sevntu.checkstyle.checks.coding.ReturnBooleanFromTernaryCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/condition/testclasses/Foo2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/OutputTypeTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/type/testclasses/Foo.java">
<error line="5" column="21" severity="warning" message="The String &quot;one&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="5" column="29" severity="warning" message="The String &quot;two&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="6" column="37" severity="warning" message="The String &quot;three&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="7" column="47" severity="warning" message="The String &quot;four&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/type/testclasses/Mole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/type/testclasses/Spice.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/type/testclasses/TypeMembersOrder.java">
<error line="42" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/type/testclasses/Pozole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/type/TypeTest.java">
<error line="69" column="31" severity="warning" message="The String &quot;./target/type&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="71" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/type/testclasses&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="87" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="107" column="22" severity="warning" message="The String &quot;Class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="108" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="110" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="111" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="130" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="134" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="150" column="61" severity="warning" message="The String &quot;season&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="159" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="173" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="174" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="177" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="178" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="181" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="182" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="219" column="22" severity="warning" message="The String &quot;T&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="227" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="229" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="229" column="57" severity="warning" message="The String &quot;java.lang.Runnable&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="235" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="243" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="302" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="315" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="350" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="372" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="373" column="22" severity="warning" message="The String &quot;java.lang.Object&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="392" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="398" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="399" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="421" column="40" severity="warning" message="The String &quot;&lt;init&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="421" column="50" severity="warning" message="The String &quot;method1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="421" column="61" severity="warning" message="The String &quot;field2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="421" column="71" severity="warning" message="The String &quot;TypeMembersOrder&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="421" column="91" severity="warning" message="The String &quot;method4&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="421" column="102" severity="warning" message="The String &quot;field5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="421" column="116" severity="warning" message="The String &quot;nestedType6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="421" column="131" severity="warning" message="The String &quot;field7&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="421" column="141" severity="warning" message="The String &quot;method8&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="425" column="112" severity="warning" message="The String &quot;method9&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructorcallnewclass/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructorcallnewclass/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructorcallnewclass/testclasses/Panini.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructorcallnewclass/testclasses/Foo2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructorcallnewclass/NewClassTest.java">
<error line="120" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="183" column="43" severity="warning" message="The String &quot;./target/new-class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/constructorcallnewclass/ConstructorCallTest.java">
<error line="49" column="35" severity="warning" message="The String &quot;./src/test/java/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="93" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="98" severity="warning" message="The String &quot;/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="105" severity="warning" message="The String &quot;.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="105" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="109" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/spoonifier/testclasses/ArrayRealVector.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/spoonifier/SpoonifierTest.java">
<error line="43" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
<error line="91" column="28" severity="warning" message="The String &quot;src/test/java/spoon/test/prettyprinter/testclasses/Rule.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="99" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
<error line="161" column="69" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="178" column="35" severity="warning" message="The String &quot;Impl&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/enums/testclasses/NestedEnums.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/enums/testclasses/Burritos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/enums/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/enums/testclasses/Performable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/enums/testclasses/EnumWithMembers.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/enums/testclasses/Regular.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/enums/EnumsTest.java">
<error line="59" column="77" severity="warning" message="The String &quot;Regular&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="70" column="34" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="106" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="107" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="117" column="112" severity="warning" message="The String &quot;VALUE&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="144" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/comment/testclasses/EnumClass.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="154" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="155" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="157" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="157" column="37" severity="warning" message="The String &quot;/**\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="159" column="19" severity="warning" message="The String &quot;     */\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="162" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="184" column="13" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="185" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="187" column="28" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="202" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="203" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="204" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="205" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="206" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/enums/EnumsTypeTest.java">
<error line="57" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="58" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="59" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="63" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="64" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="65" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="87" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="88" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="89" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="93" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="94" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="95" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/AnnotationLoopTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/BasicAnnotation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/TestInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/SuperAnnotation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/PersistenceProperty.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/spring/AliasFor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationDefaultAnnotation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationsRepeated.java">
<error line="10" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/ClassProcessed.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/typeandfield/SimpleClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/typeandfield/AnnotTypeAndField.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/InnerAnnot.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/BoundNumber.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotParamTypeEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationValues.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationContainer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/TestAnnotation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationCatchExpression.java">
<error line="7" column="38" severity="warning" message="The String &quot;0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotArrayInnerClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationsAppliedOnAnyTypeInAClass.java">
<error line="23" column="68" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationRepeated.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/notrepeatable/StringAnnot.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/dropwizard/GraphiteReporterFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/Bound.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/repeatandarrays/TagArrays.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/repeatandarrays/TagsArrays.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/repeatandarrays/RepeatedArrays.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/TypeAnnotation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotParam.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/repeatable/Repeated.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/repeatable/Tag.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/repeatable/Tags.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/PortRange.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationIntrospection.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotationCatch.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/CustomAnnotation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/GlobalAnnotation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/Main.java">
<error line="6" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="26" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="27" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="28" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="29" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="30" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="31" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="32" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="33" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="34" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="35" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="36" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/Inception.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotArray.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/shadow/ClassRetention.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/shadow/DumbKlass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/shadow/RuntimeRetention.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/shadow/StandardRetention.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/Pozole.java">
<error line="5" column="14" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/testclasses/AnnotParamTypes.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/AnnotationValuesTest.java">
<error line="56" column="48" severity="warning" message="The String &quot;integer&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="57" column="48" severity="warning" message="The String &quot;integers&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="58" column="48" severity="warning" message="The String &quot;string&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="59" column="48" severity="warning" message="The String &quot;strings&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="60" column="48" severity="warning" message="The String &quot;clazz&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="48" severity="warning" message="The String &quot;classes&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="62" column="48" severity="warning" message="The String &quot;b&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="63" column="48" severity="warning" message="The String &quot;e&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="48" severity="warning" message="The String &quot;ia&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="48" severity="warning" message="The String &quot;ias&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="106" column="29" severity="warning" message="The String &quot;field&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="114" column="63" severity="warning" message="The String &quot;org.example.Tacos&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="117" column="115" severity="warning" message="The String &quot;value&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="132" column="109" severity="warning" message="The String &quot;byteOrder&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="134" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="149" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="151" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/annotation/AnnotationTest.java">
<error line="128" column="65" severity="warning" message="The String &quot;role&quot; appears 14 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="138" column="22" severity="warning" message="The String &quot;Bound&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="160" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/Main.java&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="163" column="45" severity="warning" message="The String &quot;spoon.test.annotation.testclasses.Main&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="164" column="22" severity="warning" message="The String &quot;Main&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="183" column="43" severity="warning" message="The String &quot;max&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="217" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="217" column="47" severity="warning" message="The String &quot;value&quot; appears 31 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="218" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="229" column="84" severity="warning" message="The String &quot;m1&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="239" column="42" severity="warning" message="The String &quot;integer&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="243" column="22" severity="warning" message="The String &quot;Hello World!&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="243" column="57" severity="warning" message="The String &quot;string&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="246" column="22" severity="warning" message="The String &quot;Hello&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="248" column="56" severity="warning" message="The String &quot;clazz&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="253" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="261" column="22" severity="warning" message="The String &quot;dd&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="263" column="84" severity="warning" message="The String &quot;m2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="277" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="287" column="84" severity="warning" message="The String &quot;m3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="302" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="319" column="47" severity="warning" message="The String &quot;spoon.test.annotation.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="337" column="60" severity="warning" message="The String &quot;toString&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="349" column="42" severity="warning" message="The String &quot;m&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="389" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="435" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/AnnotArrayInnerClass.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="442" column="61" severity="warning" message="The String &quot;Annotation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="456" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/Foo.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="459" column="68" severity="warning" message="The String &quot;spoon.test.annotation.testclasses.Foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="460" column="65" severity="warning" message="The String &quot;test&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="504" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/AnnotationsAppliedOnAnyTypeInAClass.java&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="507" column="68" severity="warning" message="The String &quot;spoon.test.annotation.testclasses.AnnotationsAppliedOnAnyTypeInAClass&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="562" column="52" severity="warning" message="The String &quot;}&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="595" column="61" severity="warning" message="The String &quot;m6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="602" column="85" severity="warning" message="The String &quot;java.lang.@spoon.test.annotation.testclasses.TypeAnnotation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="640" column="43" severity="warning" message="The String &quot;spoon.test.annotation.testclasses.@spoon.test.annotation.testclasses.TypeAnnotation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="642" column="20" severity="warning" message="The String &quot;Type annotation on a extends must be typed by TypeAnnotation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="644" column="22" severity="warning" message="The String &quot;Extends with an type annotation must be well printed&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="661" column="20" severity="warning" message="The String &quot;Type annotation on a implements in a enum must be typed by TypeAnnotation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="689" column="70" severity="warning" message="The String &quot;@spoon.test.annotation.testclasses.TypeAnnotation&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="689" column="149" severity="warning" message="The String &quot;T&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="714" column="17" severity="warning" message="The String &quot;java.util.List&lt;@spoon.test.annotation.testclasses.TypeAnnotation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="724" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="738" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="804" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/AnnotationsRepeated.java&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="811" column="20" severity="warning" message="The String &quot;Type of the first annotation is AnnotationRepeated&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="812" column="20" severity="warning" message="The String &quot;Type of the second annotation is AnnotationRepeated&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="841" column="61" severity="warning" message="The String &quot;method&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="902" column="22" severity="warning" message="The String &quot;Local variable must to have multi annotation of the same type&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="959" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/TypeAnnotation.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="960" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/AnnotParamTypeEnum.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="961" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/InnerAnnot.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="962" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/Inception.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="963" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/TestAnnotation.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1021" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1024" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1087" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1091" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1095" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1099" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1103" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1107" column="25" severity="warning" message="The String &quot;target/spooned-&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1107" column="79" severity="warning" message="The String &quot;-firstspoon/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1132" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1143" column="106" severity="warning" message="The String &quot;setField&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1170" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1183" column="107" severity="warning" message="The String &quot;params&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1190" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1208" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1213" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1217" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1282" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1289" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1292" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1296" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/repeatable&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1306" column="26" severity="warning" message="The String &quot;Tag&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1310" column="20" severity="warning" message="The String &quot;Content of the file: &quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1314" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1323" column="65" severity="warning" message="The String &quot;withoutAnnotation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1326" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1328" column="83" severity="warning" message="The String &quot;foo&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1331" column="83" severity="warning" message="The String &quot;bar&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1345" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1349" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/repeatandarrays&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1359" column="26" severity="warning" message="The String &quot;TagArrays&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1367" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1378" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1396" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1403" column="77" severity="warning" message="Unnecessary parentheses around string &quot;mamethod&quot;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1420" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1449" column="20" severity="warning" message="The String &quot;Content :&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1453" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1457" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/shadow&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1459" column="90" severity="warning" message="The String &quot;DumbKlass&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1469" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1476" column="60" severity="warning" message="The String &quot;fooClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1485" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1492" column="60" severity="warning" message="The String &quot;barOneValue&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1501" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1509" column="67" severity="warning" message="The String &quot;barMultipleValues&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1545" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1546" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1548" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1549" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1553" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1557" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1568" column="46" severity="warning" message="The String &quot;]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1572" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1577" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/annotation/testclasses/CustomAnnotation.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1583" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1585" column="22" severity="warning" message="The String &quot;@spoon.test.annotation.testclasses.CustomAnnotation(something = \&quot;annotation string\&quot;)&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1588" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1601" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1609" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/CloneReferenceTest.java">
<error line="43" column="32" severity="warning" message="The String &quot;./src/test/resources/noclasspath/A2.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="66" severity="warning" message="The String &quot;A2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="124" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="128" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="132" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/TypeReferenceTest.java">
<error line="83" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="89" column="37" severity="warning" message="The String &quot;--output-type&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="89" column="54" severity="warning" message="The String &quot;nooutput&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="93" column="54" severity="warning" message="The String &quot;spoon.test.reference&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="93" column="86" severity="warning" message="The String &quot;Foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="107" column="46" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="111" column="158" severity="warning" message="The String &quot;.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="149" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="215" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="216" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="248" column="43" severity="warning" message="The String &quot;./target/spoon-test&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="275" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="306" column="43" severity="warning" message="The String &quot;./target/class-declaration&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="320" column="35" severity="warning" message="The String &quot;./src/test/resources/noclasspath/Demo.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="325" column="74" severity="warning" message="The String &quot;Demo&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="336" column="24" severity="warning" message="The String &quot;void&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="338" column="24" severity="warning" message="The String &quot;java.lang.String&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="362" column="22" severity="warning" message="The String &quot;com.google.common.base.Function&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="391" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="392" column="22" severity="warning" message="The String &quot;?&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="394" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="399" column="22" severity="warning" message="The String &quot;Tacos&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="438" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="440" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="442" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="455" column="35" severity="warning" message="The String &quot;./src/test/resources/noclasspath/A.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="460" column="74" severity="warning" message="The String &quot;A&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="484" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="485" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="486" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="487" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="488" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="489" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="490" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="531" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="540" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="546" column="56" severity="warning" message="The String &quot;entryIterator&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="547" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="549" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="563" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="573" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="584" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="592" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="595" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="603" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="606" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="617" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="623" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="633" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="636" column="98" severity="warning" message="The String &quot;param&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="647" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="663" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="668" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="669" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="673" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="674" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="675" column="22" severity="warning" message="The String &quot;spoon.test.reference.testclasses.Parent&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="679" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="680" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="684" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="699" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="703" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Parameter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/EnumValue.java">
<error line="5" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Tortillas.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Burritos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/FooBar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Stream.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Panini.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/MyClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Kuu.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/SuperFoo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/MyClass3.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Mole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/MyClass2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/ParamRefs.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/SuperAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/testclasses/Pozole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/ExecutableReferenceTest.java">
<error line="53" column="68" severity="warning" message="The String &quot;--output-type&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="53" column="85" severity="warning" message="The String &quot;nooutput&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="118" column="64" severity="warning" message="The String &quot;m&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="140" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="140" column="42" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="144" column="24" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="241" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/Enum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/ExecutableReferenceGenericTest.java">
<error line="50" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="50" column="50" severity="warning" message="The String &quot;MyClass&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="90" column="76" severity="warning" message="The String &quot;MyClass2&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="96" column="52" severity="warning" message="The String &quot;MyClass3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="116" column="67" severity="warning" message="The String &quot;method1&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="118" column="68" severity="warning" message="The String &quot;method2&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="131" column="75" severity="warning" message="The String &quot;method5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="138" column="22" severity="warning" message="The String &quot;method1(java.lang.String)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="75" severity="warning" message="The String &quot;method4&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="267" column="18" severity="warning" message="The String &quot;java.lang.Object()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/AnnotationFieldReferenceTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/VariableAccessTest.java">
<error line="57" column="33" severity="warning" message="The String &quot;spoon.test.reference.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="57" column="69" severity="warning" message="The String &quot;FooBar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="175" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="180" column="60" severity="warning" message="The String &quot;make&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="200" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="245" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/reference/ElasticsearchStackoverflowTest.java">
<error line="59" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="65" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/arrays/ArraysTest.java">
<error line="47" column="65" severity="warning" message="The String &quot;ArrayClass&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="49" severity="warning" message="The String &quot;i&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="57" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="58" column="22" severity="warning" message="The String &quot;int[]&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="60" column="22" severity="warning" message="The String &quot;int&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="69" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="72" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="72" column="53" severity="warning" message="The String &quot;[]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="73" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="79" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="80" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="81" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="91" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="92" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="93" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="94" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="113" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="118" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="119" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="130" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="132" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="145" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="147" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="158" column="22" severity="warning" message="The String &quot;java.util.List&lt;?&gt;[]&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="159" column="22" severity="warning" message="The String &quot;java.util.List&lt;?&gt;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/arrays/testclasses/Foo.java">
<error line="11" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/arrays/testclasses/ArrayClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/arrays/testclasses/NewArrayWithComment.java">
<error line="5" column="37" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="5" column="38" severity="warning" message="The String &quot;a&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="5" column="42" severity="warning" message="The String &quot;b&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="6" column="37" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/arrays/testclasses/VaragParam.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jar/JarTest.java">
<error line="50" column="160" severity="warning" message="The String &quot;ISO-8859-1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="93" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="106" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="108" column="56" severity="warning" message="The String &quot;Foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/casts/testclasses/Castings.java">
<error line="15" column="43" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/casts/CastTest.java">
<error line="45" column="30" severity="warning" message="The String &quot;class X {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="45" column="44" severity="warning" message="The String &quot;public void foo() {&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="46" column="72" severity="warning" message="The String &quot;}&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="47" column="35" severity="warning" message="The String &quot;};&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="97" column="66" severity="warning" message="The String &quot;getValue&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="105" column="22" severity="warning" message="The String &quot;T&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/FilterTest.java">
<error line="114" column="48" severity="warning" message="The String &quot;spoon.test.filters.testclasses&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="114" column="90" severity="warning" message="The String &quot;Foo&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="140" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="146" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="158" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="164" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="170" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="171" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="191" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="215" column="33" severity="warning" message="The String &quot;spoon.test.testclasses&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="215" column="59" severity="warning" message="The String &quot;SampleClass&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="220" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="262" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="273" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="281" column="40" severity="warning" message="The String &quot;--output-type&quot; appears 29 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="281" column="57" severity="warning" message="The String &quot;nooutput&quot; appears 29 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="282" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/filters/testclasses&quot; appears 31 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="287" column="130" severity="warning" message="The String &quot;prepare&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="291" column="22" severity="warning" message="The String &quot;spoon.test.filters.testclasses.AbstractTostada$1&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="294" column="22" severity="warning" message="The String &quot;spoon.test.filters.testclasses.Tostada$1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="336" column="133" severity="warning" message="The String &quot;make&quot; appears 9 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="419" column="22" severity="warning" message="The String &quot;AbstractTostada&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="420" column="22" severity="warning" message="The String &quot;ITostada&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="435" column="57" severity="warning" message="The String &quot;foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="507" column="24" severity="warning" message="The String &quot;size&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="538" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="540" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="557" column="96" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="584" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="587" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="614" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="615" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="619" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="633" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="653" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="654" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="682" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="694" column="114" severity="warning" message="The String &quot;step1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="695" column="47" severity="warning" message="The String &quot;invalidStep2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="702" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="727" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="730" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="751" column="93" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="751" column="94" severity="warning" message="The String &quot;a&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="755" column="27" severity="warning" message="The String &quot;c&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="820" column="22" severity="warning" message="The String &quot;Tacos&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="822" column="22" severity="warning" message="The String &quot;Tostada&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="840" column="39" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="842" column="39" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="845" column="39" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="845" column="49" severity="warning" message="The String &quot;Antojito&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="847" column="39" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="850" column="39" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="852" column="39" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="906" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="907" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="918" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="919" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="930" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="931" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="963" column="63" severity="warning" message="The String &quot;x&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="988" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="996" column="50" severity="warning" message="The String &quot;TEST&quot; appears 16 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="998" column="22" severity="warning" message="The String &quot;It must fail, because body of forEach should be called and thrown CCE&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1000" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1017" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1032" column="22" severity="warning" message="The String &quot;It must fail, because body of select thrown CCE&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1034" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1048" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1063" column="22" severity="warning" message="The String &quot;It must fail, because body of map thrown CCE&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1065" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1079" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1096" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1110" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1140" column="35" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="1144" column="49" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="1160" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1235" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1236" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1266" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1276" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1277" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1349" column="94" severity="warning" message="The String &quot;CONSTANT&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1350" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1354" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1383" column="22" severity="warning" message="The String &quot;int x = 3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1401" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/SubTostada.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/FooLine.java">
<error line="27" column="32" severity="warning" message="The String &quot;if&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="37" column="17" severity="warning" message="The String &quot;test&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/AbstractTostada.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/Tacos.java">
<error line="29" column="56" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/ITostada.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/Antojito.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/FieldAccessFilterTacos.java">
<error line="26" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;FieldAccessFilterTacos&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/testclasses/Tostada.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/filters/CUFilterTest.java">
<error line="33" column="35" severity="warning" message="The String &quot;./src/test/resources/noclasspath/same-package&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="37" column="22" severity="warning" message="The String &quot;spoon.test.same.B&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="38" column="28" severity="warning" message="The String &quot;createB&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="58" column="22" severity="warning" message="The String &quot;A&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses4/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses4/C.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/ClassThatBindsAGenericType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/GenericMethodCallWithExtend.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/InstanceOfMapEntryGeneric.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/BugCollection.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/Tree.java">
<error line="19" column="34" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/ComparableComparatorBug.java">
<error line="42" column="71" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="48" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="74" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="75" column="9" severity="warning" message="Super call could be removed: Class &apos;ComparableComparatorBug&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="125" column="21" severity="warning" message="Constant have to be second operand of &apos;!=&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/ClassThatDefinesANewTypeArgument.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/SimilarSignatureMethodes.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses3/GenericConstructor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses2/SameSignature3.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses2/LikeCtClassImpl.java">
<error line="7" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses2/SameSignature2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses2/LikeCtClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/GenericsTest.java">
<error line="110" column="33" severity="warning" message="The String &quot;spoon.test.generics.testclasses3&quot; appears 9 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="111" column="17" severity="warning" message="The String &quot;ComparableComparatorBug&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="126" column="69" severity="warning" message="The String &quot;Tree&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="131" column="22" severity="warning" message="The String &quot;V&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="143" column="69" severity="warning" message="The String &quot;GenericConstructor&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="146" column="22" severity="warning" message="The String &quot;E&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="22" severity="warning" message="The String &quot;java.lang.Integer&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="158" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="174" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="175" column="22" severity="warning" message="The String &quot;java.lang.String&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="184" column="103" severity="warning" message="The String &quot;methode&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="204" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="207" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="211" column="22" severity="warning" message="The String &quot;T&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="242" column="42" severity="warning" message="The String &quot;R&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="255" column="31" severity="warning" message="The String &quot;m2&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="261" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="284" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="333" column="30" severity="warning" message="Either log or throw exception." source="com.github.sevntu.checkstyle.checks.coding.EitherLogOrThrowCheck"/>
<error line="374" column="88" severity="warning" message="The String &quot;K&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="376" column="93" severity="warning" message="The String &quot;O&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="384" column="17" severity="warning" message="The String &quot;-i&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="384" column="23" severity="warning" message="The String &quot;./src/test/java/spoon/test/generics/testclasses/&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="385" column="17" severity="warning" message="The String &quot;-o&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="385" column="23" severity="warning" message="The String &quot;./target/spooned/&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="393" column="55" severity="warning" message="The String &quot;m&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="430" column="20" severity="warning" message="The String &quot;./target/spooned/spoon/test/generics/testclasses/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="470" column="55" severity="warning" message="The String &quot;m3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="474" column="22" severity="warning" message="The String &quot;new javax.lang.model.util.SimpleTypeVisitor7&lt;spoon.test.generics.testclasses.Tacos, java.lang.Void&gt;() {}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="524" column="59" severity="warning" message="The String &quot;apply&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="537" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="538" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="540" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="541" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="542" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="579" column="55" severity="warning" message="The String &quot;cook&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="633" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="634" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="637" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="641" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="672" column="36" severity="warning" message="The String &quot;Y&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="684" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="696" column="42" severity="warning" message="The String &quot;src/test/java/spoon/test/generics/testclasses&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="698" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="722" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="726" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="730" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="734" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="738" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="742" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="746" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="750" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="754" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="758" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="762" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="766" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="770" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="774" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="778" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="781" column="116" severity="warning" message="The String &quot;disgust&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="782" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="786" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="790" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="794" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="798" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="802" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="806" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="809" column="115" severity="warning" message="The String &quot;list2m&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="810" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="814" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="818" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="822" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="826" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="830" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="834" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="840" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="844" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="848" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="852" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="856" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="860" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="871" column="22" severity="warning" message="The String &quot;spoon.test.generics.testclasses.CelebrationLunch&lt;java.lang.Integer, java.lang.Long, java.lang.Double&gt;.WeddingLunch&lt;spoon.test.generics.testclasses.Mole&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="875" column="22" severity="warning" message="The String &quot;spoon.test.generics.testclasses.CelebrationLunch&lt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="876" column="19" severity="warning" message="The String &quot;spoon.test.generics.testclasses.Tacos, &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="877" column="19" severity="warning" message="The String &quot;spoon.test.generics.testclasses.Paella, &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="878" column="19" severity="warning" message="The String &quot;X&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="879" column="19" severity="warning" message="The String &quot;&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="938" column="118" severity="warning" message="The String &quot;eatMe&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="951" column="22" severity="warning" message="The String &quot;A&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="960" column="22" severity="warning" message="The String &quot;spoon.test.generics.testclasses.Mole&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="967" column="22" severity="warning" message="The String &quot;java.lang.Double&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="985" column="22" severity="warning" message="The String &quot;M&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1000" column="55" severity="warning" message="The String &quot;B&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1003" column="22" severity="warning" message="The String &quot;N&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1004" column="22" severity="warning" message="The String &quot;P&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1019" column="76" severity="warning" message="The String &quot;method&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1054" column="22" severity="warning" message="The String &quot;spoon.test.generics.testclasses.Tacos&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1061" column="22" severity="warning" message="The String &quot;spoon.test.generics.testclasses.Paella&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1121" column="22" severity="warning" message="The String &quot;C&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1153" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1154" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1155" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1158" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1159" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1160" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1181" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1189" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1196" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1224" column="43" severity="warning" message="The String &quot;./target/spooned-rxjava&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1237" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1239" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1246" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1313" column="59" severity="warning" message="The String &quot;forEach&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1322" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1323" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1324" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1334" column="67" severity="warning" message="The String &quot;visitCtConditional&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1340" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1341" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1342" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1343" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1344" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1345" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1389" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1390" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1391" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1392" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1393" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1394" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1405" column="70" severity="warning" message="The String &quot;getConstructors&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1406" column="70" severity="warning" message="The String &quot;setConstructors&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1425" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="1444" column="57" severity="warning" message="The String &quot;iterator&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1447" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1448" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1460" column="43" severity="warning" message="The String &quot;m6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1463" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1486" column="26" severity="warning" message="The String &quot;java.util.List&lt;java.lang.String&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1505" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1506" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1519" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1520" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1526" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1527" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1533" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1534" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1535" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1536" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1538" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1539" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1540" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/SameSignature.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/Paella.java">
<error line="6" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/OuterTypeParameter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/Publisher.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/ToNotificationSubscriber.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/BehaviorSubject.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/Subject.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/Processor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/Try.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/Observable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/Subscriber.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/rxjava/PublisherRedo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/Orange.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/EnumSetOf.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/Panini.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/Tacos.java">
<error line="43" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="63" column="9" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/ExtendedPaella.java">
<error line="21" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="25" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/Lunch.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/CelebrationLunch.java">
<error line="8" column="9" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/Mole.java">
<error line="7" column="45" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/IBurritos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/Spaghetti.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/FakeTpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/ITacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses/Banana.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses6/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses5/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/generics/testclasses5/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/invocations/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/invocations/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/invocations/InvocationTest.java">
<error line="65" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="66" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java">
<error line="70" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="96" column="79" severity="warning" message="The String &quot;spoon.reflect.factory&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="104" column="21" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="110" column="59" severity="warning" message="The String &quot;create&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="142" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="151" column="32" severity="warning" message="The String &quot;src/main/java/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="191" column="148" severity="warning" message="The String &quot;\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="211" column="42" severity="warning" message="The String &quot;src/main/java/spoon/support/reflect/declaration&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="212" column="42" severity="warning" message="The String &quot;src/main/java/spoon/support/reflect/code&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="213" column="42" severity="warning" message="The String &quot;src/main/java/spoon/support/reflect/reference&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="217" column="37" severity="warning" message="The String &quot;src/main/java/spoon/reflect/declaration&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="218" column="37" severity="warning" message="The String &quot;src/main/java/spoon/reflect/code&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="219" column="37" severity="warning" message="The String &quot;src/main/java/spoon/reflect/reference&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="228" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="249" column="162" severity="warning" message="The String &quot;Test&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="438" column="44" severity="warning" message="The String &quot;\n\nDetails: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="450" column="13" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/api/MetamodelTest.java">
<error line="90" column="37" severity="warning" message="The String &quot;src/main/java/spoon/reflect/declaration&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="37" severity="warning" message="The String &quot;src/main/java/spoon/reflect/code&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="92" column="37" severity="warning" message="The String &quot;src/main/java/spoon/reflect/reference&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="34" severity="warning" message="The String &quot;Field &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="113" severity="warning" message="The String &quot; but computed value is &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="148" column="117" severity="warning" message="The String &quot;role&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="167" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="214" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="215" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="216" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="334" column="89" severity="warning" message="The String &quot; and CtRole.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="344" column="75" severity="warning" message="The String &quot; is implicit&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="357" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="371" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="413" column="91" severity="warning" message="The String &quot;value&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="413" column="100" severity="warning" message="The String &quot;abc&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="432" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="470" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="528" column="51" severity="warning" message="The String &quot;some.test.package&quot; appears 10 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="534" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="541" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="543" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="550" column="60" severity="warning" message="The String &quot;some.test.another_package&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="558" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="562" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="566" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="570" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="595" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="599" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="612" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="671" column="50" severity="warning" message="The String &quot;field1&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="672" column="50" severity="warning" message="The String &quot;field2&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="673" column="50" severity="warning" message="The String &quot;field3&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="696" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="699" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="706" column="123" severity="warning" message="The String &quot;getSimpleName()&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/api/testclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/api/NoClasspathTest.java">
<error line="57" column="66" severity="warning" message="The String &quot;target/spooned/apitest&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="60" column="53" severity="warning" message="The String &quot;Foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="75" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="86" column="50" severity="warning" message="The String &quot;method&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="122" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="159" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="200" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="201" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/api/APITest.java">
<error line="86" column="50" severity="warning" message="The String &quot;--output-type&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="17" severity="warning" message="The String &quot;-i&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="120" column="23" severity="warning" message="The String &quot;src/test/resources/spoon/test/api/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="121" column="17" severity="warning" message="The String &quot;-o&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="130" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="131" column="37" severity="warning" message="The String &quot;src/test/resources/spoon/test/api/Foo.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="135" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="135" column="84" severity="warning" message="The String &quot;./&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="141" column="27" severity="warning" message="The String &quot;target/spooned/apitest&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="151" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="165" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="176" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="188" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/api/testclasses&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="189" column="43" severity="warning" message="The String &quot;./target/spooned&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="209" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="222" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="231" column="35" severity="warning" message="The String &quot;./src/main/java/spoon/template/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="236" column="24" severity="warning" message="The String &quot;spoon.template.Parameter&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="237" column="28" severity="warning" message="The String &quot;spoon.template.AbstractTemplate&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="242" column="85" severity="warning" message="The String &quot;java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="246" column="22" severity="warning" message="The String &quot;AbstractTemplate.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="247" column="22" severity="warning" message="The String &quot;Parameter.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="271" column="38" severity="warning" message="The String &quot;./target/print-not-all/command&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="291" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/api/testclasses/Bar.java&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="296" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="315" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="345" column="56" severity="warning" message="The String &quot;set&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="359" column="24" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="363" column="24" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="418" column="111" severity="warning" message="The String &quot;.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="433" column="99" severity="warning" message="The String &quot; in the declaring class &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="444" column="44" severity="warning" message="The String &quot;class A { void m() { System.out.println(\&quot;yeah\&quot;);} }&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="447" column="22" severity="warning" message="The String &quot;m&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="464" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="465" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="466" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="474" column="59" severity="warning" message="The String &quot;spoon&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="481" column="54" severity="warning" message="The String &quot;_&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="504" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="570" column="84" severity="warning" message="The String &quot;). \nContent: &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="570" column="127" severity="warning" message="The String &quot;\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="609" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="610" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="621" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="623" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="626" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="633" column="38" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/api/FileSystemFolderTest.java">
<error line="39" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="46" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="50" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/api/processors/AwesomeProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/api/Metamodel.java">
<error line="234" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="235" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="247" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctCase/testclasses/ClassWithSwitchExample.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctCase/SwitchCaseTest.java">
<error line="39" column="30" severity="warning" message="The String &quot;spoon.test.ctCase.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="40" column="28" severity="warning" message="The String &quot;ClassWithSwitchExample&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="47" column="78" severity="warning" message="The String &quot;result = 0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/varargs/testclasses/VarArgsSample.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/varargs/VarArgsTest.java">
<error line="36" column="70" severity="warning" message="The String &quot;VarArgsSample&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="41" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="44" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="45" column="22" severity="warning" message="The String &quot;java.lang.String[]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/eval/EvalTest.java">
<error line="53" column="33" severity="warning" message="The String &quot;spoon.test.eval.testclasses&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="53" column="64" severity="warning" message="The String &quot;ToEvaluate&quot; appears 16 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="62" column="22" severity="warning" message="The String &quot;// if removed&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="92" column="46" severity="warning" message="The String &quot;testDoNotSimplifyCasts&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="141" column="84" severity="warning" message="The String &quot;(0+1)*3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="142" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="147" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="150" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="153" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="186" column="26" severity="warning" message="The String &quot;false&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="206" column="35" severity="warning" message="The String &quot;src/test/java/spoon/test/eval/testclasses/Foo.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="225" column="83" severity="warning" message="The String &quot;b6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="234" column="95" severity="warning" message="The String &quot;i1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="236" column="96" severity="warning" message="The String &quot;str1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/eval/testclasses/Foo.java">
<error line="8" column="23" severity="warning" message="Short-circuit operator should be used instead of &apos;&amp;&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidNotShortCircuitOperatorsForBooleanCheck"/>
<error line="9" column="23" severity="warning" message="Short-circuit operator should be used instead of &apos;|&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidNotShortCircuitOperatorsForBooleanCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/eval/testclasses/ToEvaluate.java">
<error line="8" column="30" severity="warning" message="The String &quot;S2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="16" column="32" severity="warning" message="The String &quot;dead code&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="18" column="28" severity="warning" message="The String &quot;S1S2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="39" column="25" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="46" column="38" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="51" column="16" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="61" column="11" severity="warning" message="Useless catch block. No logging, wrapping or handling code here." source="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/module/TestModule.java">
<error line="73" column="78" severity="warning" message="The String &quot;module-info.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="102" column="35" severity="warning" message="The String &quot;./src/test/resources/spoon/test/module/simple_module/module-info.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="111" column="79" severity="warning" message="The String &quot;simple_module&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="122" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="144" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="152" column="22" severity="warning" message="The String &quot;com.greetings.pkg.ConsumedService&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="57" severity="warning" message="The String &quot;/module_with_comments/module-info.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="211" column="68" severity="warning" message="The String &quot;module_with_comments&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="214" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="267" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="268" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="269" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="288" column="30" severity="warning" message="The String &quot;newName&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="314" column="92" severity="warning" message="The String &quot;simple_module_with_code&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="323" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
<error line="338" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="342" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="345" column="12" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="348" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/compilationunit/GetBinaryFilesTest.java">
<error line="45" column="30" severity="warning" message="The String &quot;./src/test/resources/compilation/compilation-tests/IBar.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="57" column="22" severity="warning" message="The String &quot;IBar.class&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="58" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="79" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="84" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="84" column="20" severity="warning" message="The String &quot;IBar$Test.class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="102" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="108" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="109" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="129" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="130" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="131" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="152" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="153" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="154" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="155" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/compilationunit/TestCompilationUnit.java">
<error line="65" column="76" severity="warning" message="The String &quot;ISO-8859-1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="80" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/api/testclasses/Bar.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="117" column="34" severity="warning" message="The String &quot;./src/test/java/spoon/test/model/Foo.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="38" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="174" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="175" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="176" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="177" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="184" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="194" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="210" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="223" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="278" column="36" severity="warning" message="The String &quot;Cp1251&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="306" column="22" severity="warning" message="The String &quot;\&quot;Привет мир\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="306" column="58" severity="warning" message="The String &quot;s1&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="309" column="43" severity="warning" message="The String &quot;s2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/literal/LiteralTest.java">
<error line="47" column="43" severity="warning" message="The String &quot;./target/literal&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="81" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="87" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="93" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="99" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="105" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="111" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="116" column="22" severity="warning" message="The String &quot;0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="117" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="122" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="145" column="38" severity="warning" message="The String &quot;literal&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="153" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="162" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="162" column="69" severity="warning" message="The String &quot;c1&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="163" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="165" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="165" column="69" severity="warning" message="The String &quot;c2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="166" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="168" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="168" column="66" severity="warning" message="The String &quot;c3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="169" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="171" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="171" column="67" severity="warning" message="The String &quot;c4&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="172" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="174" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="174" column="67" severity="warning" message="The String &quot;c5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="175" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="177" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="177" column="67" severity="warning" message="The String &quot;c6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="178" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="180" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="181" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="182" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="189" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/literal/testclasses/BasedLiteral.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="191" column="70" severity="warning" message="The String &quot;spoon.test.literal.testclasses.BasedLiteral&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="193" column="73" severity="warning" message="The String &quot;i1&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="194" column="73" severity="warning" message="The String &quot;i2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="195" column="71" severity="warning" message="The String &quot;i3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="196" column="71" severity="warning" message="The String &quot;i4&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="197" column="77" severity="warning" message="The String &quot;i5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="198" column="77" severity="warning" message="The String &quot;i6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="199" column="71" severity="warning" message="The String &quot;i7&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="200" column="72" severity="warning" message="The String &quot;i8&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="201" column="72" severity="warning" message="The String &quot;i9&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="203" column="73" severity="warning" message="The String &quot;l1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="204" column="73" severity="warning" message="The String &quot;l2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="71" severity="warning" message="The String &quot;l3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="206" column="71" severity="warning" message="The String &quot;l4&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="77" severity="warning" message="The String &quot;l5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="208" column="77" severity="warning" message="The String &quot;l6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="209" column="72" severity="warning" message="The String &quot;l7&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="210" column="72" severity="warning" message="The String &quot;l8&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="212" column="73" severity="warning" message="The String &quot;f1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="213" column="73" severity="warning" message="The String &quot;f2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="214" column="73" severity="warning" message="The String &quot;f3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="215" column="73" severity="warning" message="The String &quot;f4&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="216" column="73" severity="warning" message="The String &quot;f5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="217" column="77" severity="warning" message="The String &quot;f6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="218" column="77" severity="warning" message="The String &quot;f7&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="220" column="73" severity="warning" message="The String &quot;d1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="221" column="73" severity="warning" message="The String &quot;d2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="222" column="73" severity="warning" message="The String &quot;d3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="225" column="50" severity="warning" message="The String &quot;s1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="242" column="22" severity="warning" message="The String &quot;0x42&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="252" column="22" severity="warning" message="The String &quot;0x42L&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="259" column="22" severity="warning" message="The String &quot;0.0F&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="262" column="22" severity="warning" message="The String &quot;0x1.2p7F&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="265" column="22" severity="warning" message="The String &quot;0.0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/literal/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/literal/testclasses/BasedLiteral.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/literal/testclasses/EscapedLiteral.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/exceptions/ExceptionTest.java">
<error line="94" column="58" severity="warning" message="The String &quot;OFF&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="101" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="112" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/properties/SimpleProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/properties/PropertiesTest.java">
<error line="34" column="45" severity="warning" message="The String &quot;SPOON&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/properties/testclasses/Sample.java">
<error line="17" column="9" severity="warning" message="Super call could be removed: Class &apos;Sample&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/pkg/test_templates/FakeTemplate.java">
<error line="7" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/pkg/name/PackageTestClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/pkg/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/pkg/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/pkg/testclasses/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/pkg/testclasses/internal/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/pkg/processors/ElementProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/pkg/PackageTest.java">
<error line="64" column="44" severity="warning" message="The String &quot;./src/test/java/spoon/test/pkg/package-info.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="78" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="79" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="80" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="91" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="98" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="105" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="123" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="124" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="125" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="138" column="72" severity="warning" message="The String &quot;spoon.test.pkg.testclasses.internal&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="166" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/pkg/testclasses/Foo.java&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="170" column="33" severity="warning" message="The String &quot;otherName&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="179" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="185" column="32" severity="warning" message="The String &quot;./src/test/resources/noclasspath/app/Test.java&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="199" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="214" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="217" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="276" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="282" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="305" column="22" severity="warning" message="The String &quot;java.util&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="322" column="22" severity="warning" message="The String &quot;info.guardianproject.onionkit.ui&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess/StaticAccessTest.java">
<error line="60" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="61" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="81" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess/StaticAccessBug.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess/internal/Origin.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess/internal/Extends.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/staticFieldAccess/processors/InsertBlockProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/control/testclasses/DoWhile.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/control/testclasses/Fors.java">
<error line="14" column="14" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/control/ControlTest.java">
<error line="40" column="32" severity="warning" message="The String &quot;spoon.test.control.testclasses&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="40" column="66" severity="warning" message="The String &quot;Fors&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="51" column="22" severity="warning" message="The String &quot;i++&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="66" column="66" severity="warning" message="The String &quot;DoWhile&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="71" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/replace/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/replace/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/replace/testclasses/Mole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/replace/ReplaceParametrizedTest.java">
<error line="73" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="88" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="117" column="17" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="131" column="34" severity="warning" message="The String &quot;UnsettableProperty &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="36" severity="warning" message="The String &quot;dummyKey&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/replace/ReplaceTest.java">
<error line="84" column="48" severity="warning" message="The String &quot;spoon.test.replace.testclasses&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="85" column="26" severity="warning" message="The String &quot;Foo&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="88" column="26" severity="warning" message="The String &quot;Bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="61" severity="warning" message="The String &quot;i&quot; appears 13 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="94" column="22" severity="warning" message="The String &quot;int&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="114" column="57" severity="warning" message="The String &quot;foo&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="123" column="22" severity="warning" message="The String &quot;z = x + 1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="150" column="57" severity="warning" message="The String &quot;bar&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="176" column="45" severity="warning" message="The String &quot;retry&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="177" column="40" severity="warning" message="The String &quot;statements&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="242" column="35" severity="warning" message="The String &quot;j&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="256" column="37" severity="warning" message="The String &quot;notfoo&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="279" column="28" severity="warning" message="The String &quot;notfoo2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="297" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="313" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="318" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="326" column="61" severity="warning" message="The String &quot;m&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="377" column="87" severity="warning" message="The String &quot;com.best&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="389" column="58" severity="warning" message="The String &quot;m3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/main/testclasses/Test.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/main/MainTest.java">
<error line="52" column="57" severity="warning" message="The String &quot;java.class.path&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="53" column="42" severity="warning" message="The String &quot;test-classes&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="63" column="17" severity="warning" message="The String &quot;-o&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="63" column="23" severity="warning" message="The String &quot;target/spooned&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="17" severity="warning" message="The String &quot;--destination&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="64" column="33" severity="warning" message="The String &quot;target/spooned-build&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="17" severity="warning" message="The String &quot;--source-classpath&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="66" column="17" severity="warning" message="The String &quot;--compile&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="17" severity="warning" message="The String &quot;--compliance&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="33" severity="warning" message="The String &quot;8&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="17" severity="warning" message="The String &quot;--level&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="68" column="28" severity="warning" message="The String &quot;OFF&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="75" column="30" severity="warning" message="The String &quot;src/test/java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="129" column="17" severity="warning" message="The String &quot;-i&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="170" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="170" column="29" severity="warning" message="The String &quot;src/test/resources/no-copy-resources/package.html&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="171" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="172" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="172" column="29" severity="warning" message="The String &quot;src/test/resources/no-copy-resources/fr/package.html&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="173" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="174" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="174" column="29" severity="warning" message="The String &quot;src/test/resources/no-copy-resources/fr/inria/package.html&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="175" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="196" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="197" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="198" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="199" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="200" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="201" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="204" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="206" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="217" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/field/testclasses/AddFieldAtTop.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/field/testclasses/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/field/testclasses/BaseClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/field/FieldTest.java">
<error line="63" column="104" severity="warning" message="The String &quot; + 1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="84" column="22" severity="warning" message="The String &quot;pathSeparator&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="119" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/parameters/ParameterTest.java">
<error line="46" column="104" severity="warning" message="The String &quot;font&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="24" severity="warning" message="The String &quot;entryPair&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/TestSingleLineClass.java">
<error line="1" column="77" severity="warning" message="Only one variable definition per line allowed." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="1" column="84" severity="warning" message="Only one variable definition per line allowed." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/PositionParameterTypeWithReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooAbstractMethod.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooField.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/Kokos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooClazzWithComments.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooForEach.java">
<error line="12" column="14" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="12" column="38" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="12" column="51" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="12" column="59" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="13" column="30" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/SomeEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/TypeParameter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooStatement.java">
<error line="22" column="9" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooSwitch.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooLabel.java">
<error line="11" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/CatchPosition.java">
<error line="11" column="11" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="11" column="22" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="11" column="30" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="11" column="54" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="11" column="79" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="11" column="87" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="11" column="94" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="13" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="15" column="11" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="19" column="20" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/ArrayArgParameter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/CompilationUnitComments.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooAnnotation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooGeneric.java">
<error line="28" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/AnnonymousClassNewIface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/MoreLambda.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooLambda.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/TestSimpleClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/TestCommentedOutClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/PositionTry.java">
<error line="7" column="11" severity="warning" message="Catching &apos;java.lang.Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="15" column="11" severity="warning" message="Catching &apos;java.lang.Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooMethod.java">
<error line="6" column="9" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
<error line="26" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/NoMethodModifiers.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooClazz2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/ImplicitBlock.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooClazz.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/Expressions.java">
<error line="9" column="26" severity="warning" message="The String &quot;x&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="10" column="27" severity="warning" message="Unnecessary parentheses around string &quot;x&quot;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="12" column="56" severity="warning" message="Unnecessary parentheses around literal &apos;null&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="13" column="26" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="14" column="26" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="14" column="33" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="14" column="35" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="16" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="17" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="18" column="22" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="20" column="22" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/NewArrayList.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/testclasses/FooSourceFragments.java">
<error line="19" column="41" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="22" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="22" column="20" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="23" column="23" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="23" column="32" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="25" column="11" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="25" column="23" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="26" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="27" column="11" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/PositionTest.java">
<error line="117" column="46" severity="warning" message="The String &quot;src/test/java/spoon/test/position/testclasses/&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="128" column="22" severity="warning" message="The String &quot;@Deprecated\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="130" column="19" severity="warning" message="The String &quot;\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="131" column="19" severity="warning" message="The String &quot;}&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="133" column="22" severity="warning" message="The String &quot;{\n\n}&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="161" column="22" severity="warning" message="The String &quot;/*c1*/\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="162" column="17" severity="warning" message="The String &quot;//lc1\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="183" column="17" severity="warning" message="The String &quot;public&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="193" column="26" severity="warning" message="The String &quot;T extends List&lt;?&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="194" column="26" severity="warning" message="The String &quot;X&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="197" column="59" severity="warning" message="The String &quot;field1&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="202" column="59" severity="warning" message="The String &quot;field2&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="220" column="56" severity="warning" message="The String &quot;m1&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="224" column="56" severity="warning" message="The String &quot;m2&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="228" column="64" severity="warning" message="The String &quot;m3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="280" column="22" severity="warning" message="The String &quot;@Target(value={})\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="283" column="19" severity="warning" message="The String &quot;\tString value();\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="286" column="22" severity="warning" message="The String &quot;{\n&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="294" column="52" severity="warning" message="The String &quot;value&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="326" column="22" severity="warning" message="The String &quot;public final&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="341" column="40" severity="warning" message="The String &quot;m&quot; appears 17 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="350" column="22" severity="warning" message="The String &quot;FooField.f.field2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="360" column="22" severity="warning" message="The String &quot;FooField.f&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="391" column="88" severity="warning" message="The String &quot;variable&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="409" column="19" severity="warning" message="The String &quot;\t}&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="432" column="19" severity="warning" message="The String &quot;\t\treturn;\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="450" column="22" severity="warning" message="The String &quot;parm1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="453" column="49" severity="warning" message="The String &quot;mWithDoc&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="459" column="22" severity="warning" message="The String &quot;/**\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="517" column="22" severity="warning" message="The String &quot;final&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="537" column="19" severity="warning" message="The String &quot;\t\t\tswitch (parm1) {\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="538" column="19" severity="warning" message="The String &quot;\t\t\tcase 1:\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="539" column="19" severity="warning" message="The String &quot;\t\t\t\treturn;\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="540" column="19" severity="warning" message="The String &quot;\t\t\tdefault:\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="541" column="19" severity="warning" message="The String &quot;\t\t\t\tparm1++;\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="542" column="19" severity="warning" message="The String &quot;\t\t\t}\n&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="543" column="19" severity="warning" message="The String &quot;\t\t\tint count = 0;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="544" column="19" severity="warning" message="The String &quot;\t\t\tfor (int i =0; i&lt; parm1; i++) {\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="545" column="19" severity="warning" message="The String &quot;\t\t\t\tcount ++;\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="594" column="19" severity="warning" message="The String &quot;\t\t\t}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="641" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="647" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="654" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="665" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="679" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="685" column="22" severity="warning" message="The String &quot;ImplicitBlock.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="690" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="710" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="751" column="22" severity="warning" message="The String &quot;{\r\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="752" column="17" severity="warning" message="The String &quot;#x9;#x9;#x9;@Override\r\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="753" column="17" severity="warning" message="The String &quot;#x9;#x9;#x9;public void accept(Set&lt;?&gt; t) {\r\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="754" column="17" severity="warning" message="The String &quot;#x9;#x9;#x9;}\r\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="755" column="17" severity="warning" message="The String &quot;#x9;#x9;}&quot; appears 11 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="820" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="835" column="22" severity="warning" message="The String &quot;e&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="915" column="26" severity="warning" message="The String &quot;String arg[]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="924" column="57" severity="warning" message="The String &quot;m5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="929" column="57" severity="warning" message="The String &quot;m6&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="930" column="26" severity="warning" message="The String &quot;String[]//[]\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="931" column="21" severity="warning" message="The String &quot;#x9;#x9;#x9;p[]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="952" column="72" severity="warning" message="The String &quot;method&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="956" column="22" severity="warning" message="The String &quot;(\&quot;x\&quot;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="958" column="22" severity="warning" message="The String &quot;( String) ( (Serializable)(( (null ))))&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="975" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="983" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1007" column="21" severity="warning" message="The String &quot;#x9;#x9;#x9;throw new RuntimeException(e);\n&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1009" column="26" severity="warning" message="The String &quot;final IOException e&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1042" column="21" severity="warning" message="The String &quot;#x9;#x9;#x9;#x9;//catch (\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1087" column="21" severity="warning" message="The String &quot;#x9;#x9;#x9;System.out.println();\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1088" column="21" severity="warning" message="The String &quot;#x9;#x9;#x9;break;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1093" column="21" severity="warning" message="The String &quot;#x9;#x9;#x9;return 2;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1121" column="26" severity="warning" message="The String &quot;items&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1194" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1195" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1197" column="26" severity="warning" message="The String &quot;label2: while(x);&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1201" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1202" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1210" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1211" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1215" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1216" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1238" column="22" severity="warning" message="The String &quot;package spoon.test.position.testclasses;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1314" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="1316" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1317" column="23" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1318" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1333" column="84" severity="warning" message="The String &quot;Failing&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/position/TestSourceFragment.java">
<error line="167" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="181" column="60" severity="warning" message="The String &quot;./src/test/java/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="181" column="136" severity="warning" message="The String &quot;.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="189" column="17" severity="warning" message="The String &quot;if&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="189" column="23" severity="warning" message="The String &quot;(&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="189" column="28" severity="warning" message="The String &quot;x &gt; 0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="189" column="37" severity="warning" message="The String &quot;)&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="191" column="27" severity="warning" message="The String &quot; &quot; appears 22 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="193" column="25" severity="warning" message="The String &quot;#x9;#x9;}&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="196" column="52" severity="warning" message="The String &quot;m3&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="197" column="17" severity="warning" message="The String &quot;/**\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="200" column="23" severity="warning" message="The String &quot;\n\t&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="201" column="17" severity="warning" message="The String &quot;&lt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="201" column="28" severity="warning" message="The String &quot;T&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="201" column="33" severity="warning" message="The String &quot;,&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="201" column="49" severity="warning" message="The String &quot;&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="135" severity="warning" message="The String &quot;;&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="52" severity="warning" message="The String &quot;m5&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="91" severity="warning" message="The String &quot;f&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="207" column="111" severity="warning" message="The String &quot;7.2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="235" column="22" severity="warning" message="The String &quot;\n\n&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="236" column="22" severity="warning" message="The String &quot;/*\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="238" column="17" severity="warning" message="The String &quot; */\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="243" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="276" column="84" severity="warning" message="The String &quot;m&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="286" column="22" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="306" column="22" severity="warning" message="The String &quot;new&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="332" column="26" severity="warning" message="The String &quot;Consumer&lt;Set&lt;?&gt;&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="336" column="26" severity="warning" message="The String &quot;{&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="338" column="21" severity="warning" message="The String &quot;#x9;#x9;#x9;public void accept(Set&lt;?&gt; t) {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="339" column="21" severity="warning" message="The String &quot;#x9;#x9;#x9;}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="340" column="76" severity="warning" message="The String &quot;\\r|\\n&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="391" column="24" severity="warning" message="The String &quot;group(&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="393" column="20" severity="warning" message="The String &quot;\&quot;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/testclasses/staticimport/Dependency.java">
<error line="13" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/testclasses/staticimport/DependencySubClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/testclasses/fullpack/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/testclasses/fullpack/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/testclasses/fullpack/C.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/testclasses/StaticImport.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/testclasses/StarredImport.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/testclasses/StaticImportWithInheritance.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/jdtimportbuilder/ImportBuilderTest.java">
<error line="58" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="65" column="32" severity="warning" message="The String &quot;./src/test/java/spoon/test/imports/testclasses/ClassWithInvocation.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="77" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="94" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="109" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="113" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="114" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="115" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="134" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="158" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/BCUBug20140402.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/Panini.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/MyClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/Kuu.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/internal/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/internal/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/Mole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/Mouse.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/Pozole.java">
<error line="11" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/TargetedAccessPosition.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/testclasses/BUG20160112.java">
<error line="10" column="9" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/fieldaccesses/FieldAccessTest.java">
<error line="75" column="32" severity="warning" message="The String &quot;spoon.test.fieldaccesses.testclasses&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="75" column="72" severity="warning" message="The String &quot;Mouse&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="79" column="57" severity="warning" message="The String &quot;meth1&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="124" column="17" severity="warning" message="The String &quot;BCUBug20140402&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="165" column="72" severity="warning" message="The String &quot;BUG20160112&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="176" column="72" severity="warning" message="The String &quot;TargetedAccessPosition&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="220" column="9" severity="warning" message="try/catch either requires a fail at the end of the try clause for junit tests or to remove the try/catch completely." source="com.github.sevntu.checkstyle.checks.coding.RequireFailForTryCatchInJunitCheck"/>
<error line="266" column="22" severity="warning" message="The String &quot;game.board&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="287" column="64" severity="warning" message="The String &quot;i&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="306" column="62" severity="warning" message="The String &quot;prepare&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="333" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="340" column="40" severity="warning" message="The String &quot;--output-type&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="340" column="57" severity="warning" message="The String &quot;nooutput&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="355" column="59" severity="warning" message="The String &quot;m&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="359" column="22" severity="warning" message="The String &quot;inv(spoon.test.fieldaccesses.testclasses.internal.Foo.i)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="363" column="22" severity="warning" message="The String &quot;inv(spoon.test.fieldaccesses.testclasses.internal.Foo.SubInner.j)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="367" column="22" severity="warning" message="The String &quot;runIteratorTest(spoon.test.fieldaccesses.testclasses.internal.Foo.KnownOrder.KNOWN_ORDER)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="450" column="79" severity="warning" message="The String &quot;age&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/support/ResourceTest.java">
<error line="41" column="24" severity="warning" message="The String &quot;src/test/resources/spoon/test/api/Foo.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="42" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="47" column="22" severity="warning" message="The String &quot;src/test/resources/spoon/test/api/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="90" column="50" severity="warning" message="The String &quot;src/test/java/spoon/test/visibility/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctClass/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctClass/testclasses/AnonymousClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctClass/testclasses/issue1306/internal/BooleanArrays.java">
<error line="25" column="3" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctClass/testclasses/issue1306/internal/BooleanArraysBaseTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctClass/testclasses/issue1306/test/BooleanArrays.java">
<error line="29" column="3" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctClass/testclasses/Pozole.java">
<error line="6" column="13" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/test/ctClass/CtClassTest.java">
<error line="122" column="43" severity="warning" message="The String &quot;./target/class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="128" column="60" severity="warning" message="The String &quot;InvariantCheckProcessor&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="145" column="43" severity="warning" message="The String &quot;./target/draw2d&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="162" column="55" severity="warning" message="The String &quot;1Cook&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="167" column="89" severity="warning" message="The String &quot;}&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="184" column="37" severity="warning" message="The String &quot;Foo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="237" column="22" severity="warning" message="The String &quot;package spoon.test.ctClass.testclasses;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="238" column="17" severity="warning" message="The String &quot;/**&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="239" column="17" severity="warning" message="The String &quot; * Created by urli on 11/10/2017.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="240" column="17" severity="warning" message="The String &quot; */&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="241" column="17" severity="warning" message="The String &quot;public class AnonymousClass {&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="245" column="17" severity="warning" message="The String &quot;            return 0;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="246" column="17" severity="warning" message="The String &quot;        }&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="247" column="17" severity="warning" message="The String &quot;    }.compare(1, 2);&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="279" column="43" severity="warning" message="The String &quot;./target/issue1306&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="296" column="35" severity="warning" message="The String &quot;./src/test/java/spoon/test/ctClass/testclasses/AnonymousClass.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="313" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="314" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="341" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="342" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/LauncherTest.java">
<error line="47" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="48" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="49" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="51" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="54" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="74" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="75" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="79" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="86" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="99" column="48" severity="warning" message="The String &quot;user.dir&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/support/visitor/java/JavaReflectionTreeBuilderTest.java">
<error line="101" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="102" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="103" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="104" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="105" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="114" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="115" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="116" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="117" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="126" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="127" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="128" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="136" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="137" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="138" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="139" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="154" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="163" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="209" column="81" severity="warning" message="The String &quot;\n&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="220" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="221" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="269" column="114" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="270" column="124" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="315" column="27" severity="warning" message="Return count for &apos;fail&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="324" column="48" severity="warning" message="Condition with &amp;&amp; at line 324 position 38 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="332" column="123" severity="warning" message="The String &quot;#&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="333" column="19" severity="warning" message="The String &quot;\nShadow: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="334" column="19" severity="warning" message="The String &quot;\nNormal: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="436" column="40" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="456" column="22" severity="warning" message="The String &quot;T&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="457" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="469" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="497" column="57" severity="warning" message="The String &quot; doesn&apos;t exist?&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="530" column="30" severity="warning" message="The String &quot;A&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="536" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="550" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="559" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="564" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="601" column="29" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="609" column="42" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/support/compiler/classpath/ComputeClasspathTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/support/compiler/jdt/ExtendedStringLiteralTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/support/compiler/jdt/JDTBasedSpoonCompilerTest.java">
<error line="37" column="9" severity="warning" message="Variable &apos;compilationUnitDeclarations1&apos; can be moved inside the block at line &apos;39&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="39" column="27" severity="warning" message="The String &quot;SPOON_SEED_CU_COMPARATOR&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/support/compiler/jdt/testclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/support/compiler/jdt/testclasses/ExtendedStringLiteralTestClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/support/compiler/jdt/JDTBuilderTest.java">
<error line="37" column="123" severity="warning" message="The String &quot;.&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="37" column="137" severity="warning" message="The String &quot;UTF-8&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/java/spoon/support/compiler/jdt/JDTBatchCompilerTest.java">
<error line="38" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="39" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test-2/spoontest/c/ClassC.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test-2/spoontest/a/ClassA.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test-2/spoontest/b/ClassB.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/new-class/IndexWriter.java">
<error line="49" column="45" severity="warning" message="The String &quot;write.lock&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="54" column="46" severity="warning" message="The String &quot;commit.lock&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="91" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="118" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="126" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="129" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="232" column="50" severity="warning" message="The String &quot; (&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="232" column="71" severity="warning" message="The String &quot; docs)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="305" column="35" severity="warning" message="The String &quot;deletable&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="319" column="52" severity="warning" message="The String &quot;deleteable.new&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/compilation2/UnresolvedFullQualifiedType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/import-with-generics/TestWithGenerics.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/comment/JavaDocComment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/encodings/Cp1251.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/encodings/Utf8.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/compilation3/subpackage/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/compilation3/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/visitor/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/visitor/ConditionalRes.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/visitor/Assignments.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/prettyprinter/testclasses/ComplexClass.java">
<error line="146" column="25" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="181" column="13" severity="warning" message="Variable &apos;oldBounds&apos; can be moved inside the block at line &apos;219&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="272" column="55" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="286" column="55" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/prettyprinter/NestedSuperCall.java">
<error line="24" column="9" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/processor/test/sub/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/processor/test/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/intercession/insertBefore/InsertBeforeExample2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/loop/testclasses/Foo.java">
<error line="8" column="14" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/StaticWithNested.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/AbstractMapBasedMultimap.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/staticjava3/AllLangTestJava3.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/staticcollision/AllLangTestSuite.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/enums/EnumTestSuite.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/staticmethod/AllLangTestSuiteStaticMethod.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/enum2/EnumTestSuite.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/apachetestsuite/LangTestSuite.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/ImportSameName.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/JavaLangConflict.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/Interners.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/imports/testclasses2/toto/ImportSameName.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/variable/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/itf/DumbItf.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/duplicateclasses/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/duplicateclasses/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/var/Main.java">
<error line="9" column="19" severity="warning" message="Return count for &apos;toString&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="11" column="27" severity="warning" message="The String &quot;bla&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/var/VarInLambda.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/inheritance/AnotherClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/inheritance/MyAbstractClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/inheritance/MyClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/inheritance/MyInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/noclasspath/fields/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/noclasspath/fields/Toto.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/noclasspath/targeted/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/noclasspath/exceptions/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/noclasspath/exceptions/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/api/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/api/CommentedClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/module/simple_module_with_code/fr/simplemodule/pack/SimpleClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/module/code-multiple-modules/bar/packbar/BarClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/module/code-multiple-modules/foo/packfoo/FooClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/spoon/test/exceptions/ClassWithError.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/import-static/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/compilation/SimpleProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/compilation/subpackage/ClassUsingStaticFields.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/compilation/ClassWithStaticFields.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/compilation/compilation-tests/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/compilation/compilation-tests/IBar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/dollar-and-nested-classes/$Poor$Name.java">
<error line="6" column="9" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/visibility/YamlRepresenter.java">
<error line="8" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/snippet/SnippetResources.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/duplicateClass/DuplicateInnerClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/parameter/FlowUtilities.java">
<error line="48" column="48" severity="warning" message="Condition with || at line 48 position 44 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="82" column="33" severity="warning" message="Condition with &amp;&amp; at line 82 position 32 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="171" column="34" severity="warning" message="Condition with || at line 171 position 33 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="196" column="21" severity="warning" message="Return count for &apos;wrapFragmentInContext&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="214" column="5" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="218" column="5" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="233" column="5" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="235" column="5" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/variable/PropPanelUseCase_1.40.java">
<error line="76" column="38" severity="warning" message="The String &quot;UMLMenu&quot; appears 14 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="86" column="20" severity="warning" message="The String &quot;isLeaf&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="88" column="20" severity="warning" message="The String &quot;isRoot&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/multiclass/module2/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/multiclass/module1/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Demo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Demo4.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/SecondaryIndexManager.java">
<error line="117" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="180" column="18" severity="warning" message="Constant have to be second operand of &apos;!=&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="338" column="101" severity="warning" message="The String &quot;,&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="382" column="13" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="576" column="18" severity="warning" message="Return count for &apos;getBestIndexFor&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="589" column="30" severity="warning" message="The String &quot;Command contains a custom index expression, using target index {}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="603" column="26" severity="warning" message="The String &quot;No applicable indexes found&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="996" column="18" severity="warning" message="Constant have to be second operand of &apos;!=&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="1005" column="22" severity="warning" message="Constant have to be second operand of &apos;!=&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/draw2d/org/eclipse/draw2d/parts/ScrollableThumbnail.java">
<error line="110" column="59" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="186" column="5" severity="warning" message="Redundant super constructor call could be removed. Class &apos;ScrollableThumbnail&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="195" column="5" severity="warning" message="Redundant super constructor call could be removed. Class &apos;ScrollableThumbnail&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/draw2d/org/eclipse/draw2d/MouseMotionListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/ArrayRealVector.java">
<error line="38" column="49" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="293" column="28" severity="warning" message="Return count for &apos;add&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="319" column="28" severity="warning" message="Return count for &apos;subtract&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="448" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="570" column="23" severity="warning" message="Return count for &apos;outerProduct&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="601" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="675" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/spring/PropertyComparator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Foo4.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/orwall/BackgroundProcess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/orwall/PreferencesActivity.java">
<error line="52" column="71" severity="warning" message="The String &quot;enforce_init_script&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="86" column="17" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Attachment.java">
<error line="25" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;Attachment&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="26" column="15" severity="warning" message="Overridable method &apos;setUri&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="32" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;Attachment&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="34" column="15" severity="warning" message="Overridable method &apos;setUri&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="44" column="15" severity="warning" message="Overridable method &apos;setUri&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="77" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/ternary-bug/transformators/IssueTransformator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/ternary-bug/data/IssueType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/ternary-bug/data/entities/Issue.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/A3.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Simple.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/superclass/UnknownSuperClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/TypeAccessInLambda.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/InheritedInterfacesWithLambda.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/MultiParameterLambda.java">
<error line="13" column="62" severity="warning" message="The String &quot;, &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/external1/impl/RatingLookUp.java">
<error line="60" column="31" severity="warning" message="The String &quot;userId&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="75" column="31" severity="warning" message="The String &quot;type&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/external1/IRatingLookUp.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/imported/SeparateInterfaceWithField.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/InheritedClassesWithLambda2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/FieldAccessInLambda.java">
<error line="8" column="43" severity="warning" message="The String &quot;spoon&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/lambdas/InheritedClassesWithLambda1.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Demo3.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/A2.java">
<error line="10" column="11" severity="warning" message="Useless catch block. No logging, wrapping or handling code here." source="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/elasticsearch-stackoverflow/BroadcastShardResponse.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/elasticsearch-stackoverflow/TransportBroadcastAction.java">
<error line="147" column="19" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="202" column="19" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="227" column="42" severity="warning" message="The String &quot;{}: failed to execute [{}]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="249" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/initializer/Utf8HttpResponse.java">
<error line="87" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="95" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Tacos.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Demo5.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/FieldAccessRes.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/UnknownCalls.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Solver.java">
<error line="84" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="89" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="89" column="51" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="94" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="94" column="51" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="115" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="120" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="125" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="129" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="139" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="145" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="151" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="155" column="65" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="198" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="203" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="208" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="216" column="28" severity="warning" message="Overridable method &apos;setLearningStrategy&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="254" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="264" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="314" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="318" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="329" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="338" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="407" column="21" severity="warning" message="The String &quot;Reference to the constraint to remove needed!&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="499" column="21" severity="warning" message="The String &quot;Call the solve method first!!!&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="542" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="544" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="546" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="636" column="20" severity="warning" message="Return count for &apos;analyzeFinalConflictInTermsOfAssumptions&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="708" column="21" severity="warning" message="Condition with &amp;&amp; at line 708 position 5 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="713" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="728" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="744" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="761" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="778" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="790" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="839" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="861" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="863" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="869" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="886" column="21" severity="warning" message="Return count for &apos;analyzeRemovable&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="933" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="1038" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1038" column="55" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="1063" column="20" severity="warning" message="Return count for &apos;reduceClausesForFalsifiedLiteral&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1159" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1161" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1163" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1165" column="11" severity="warning" message="Return count for &apos;search&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1182" column="42" severity="warning" message="Condition with &amp;&amp; at line 1,182 position 29 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="1291" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1292" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1294" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1380" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1392" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="1473" column="21" severity="warning" message="The String &quot;Use a valid Dimacs var id as argument!&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1546" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1548" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1550" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1552" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1574" column="17" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="1591" column="31" severity="warning" message="The String &quot;cleaning &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1592" column="31" severity="warning" message="The String &quot; clauses out of &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1638" column="17" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="1690" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1708" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1725" column="13" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="1745" column="9" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="1821" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1855" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1858" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1878" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1880" column="20" severity="warning" message="Return count for &apos;isSatisfiable&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="2056" column="51" severity="warning" message="The String &quot; =&gt; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="2068" column="55" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="2117" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2156" column="26" severity="warning" message="The String &quot;ignored satisfied constraints&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="2180" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2231" column="20" severity="warning" message="The String &quot;\n&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="2303" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="2312" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="2315" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2319" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2362" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2369" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2417" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2456" column="49" severity="warning" message="The String &quot;Not implemented yet!&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="2474" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2478" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2486" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2539" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2543" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="2547" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2554" column="48" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="2613" column="42" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="2614" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/elasticsearch1753/TaskManager.java">
<error line="134" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="169" column="25" severity="warning" message="The String &quot;couldn&apos;t persist error {}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="202" column="25" severity="warning" message="The String &quot;couldn&apos;t persist response {}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/LiteralInForEach.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/SubscriptionAdapter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/app/Test.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/A6.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/TestBot.java">
<error line="53" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(protected)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="72" column="21" severity="warning" message="Return count for &apos;calculateMoveTurn&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="118" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="118" column="32" severity="warning" message="Condition with &amp;&amp; at line 118 position 31 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="134" column="91" severity="warning" message="The String &quot; &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="136" column="17" severity="warning" message="Variable &apos;result&apos; can be moved inside the block at line &apos;140&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="209" column="53" severity="warning" message="Condition with &amp;&amp; at line 209 position 52 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="217" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="231" column="17" severity="warning" message="Variable &apos;enemy_hit_arc&apos; can be moved inside the block at line &apos;273&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="236" column="17" severity="warning" message="Variable &apos;self_hit_arc&apos; can be moved inside the block at line &apos;241&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="241" column="53" severity="warning" message="Condition with &amp;&amp; at line 241 position 52 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="267" column="58" severity="warning" message="The String &quot;\n&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="269" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="355" column="23" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="376" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="409" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="533" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="556" column="66" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="576" column="29" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="600" column="25" severity="warning" message="Variable &apos;self_hit_arc&apos; can be moved inside the block at line &apos;609&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="611" column="29" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="693" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="715" column="90" severity="warning" message="The String &quot; \n&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="764" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="805" column="13" severity="warning" message="Variable &apos;centity&apos; can be moved inside the block at line &apos;806&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="823" column="13" severity="warning" message="Variable &apos;enemy&apos; can be moved inside the block at line &apos;825&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="1044" column="53" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1047" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1050" column="20" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="1064" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1066" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1069" column="53" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1071" column="53" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1091" column="26" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="1096" column="22" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="1099" column="27" severity="warning" message="Constant have to be second operand of &apos;==&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck"/>
<error line="1135" column="17" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1158" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="1166" column="40" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/same-package/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/same-package/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/FileIO.java">
<error line="38" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="39" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="40" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="43" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="44" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="45" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="46" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="47" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="48" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="49" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="50" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="52" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="54" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="67" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="74" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="80" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="86" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="92" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="98" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="104" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="113" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="121" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="124" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="132" column="71" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="136" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="137" column="3" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="137" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="141" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="146" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="149" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="151" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="155" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="157" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="211" column="25" severity="warning" message="The String &quot;Reading &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="213" column="26" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="241" column="30" severity="warning" message="Return count for &apos;read_ppt_decl&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="247" column="5" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="251" column="5" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="251" column="59" severity="warning" message="The String &quot;ppt name&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="265" column="26" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="267" column="53" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="279" column="7" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="281" column="23" severity="warning" message="The String &quot;parent&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="283" column="30" severity="warning" message="The String &quot;flags&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="285" column="30" severity="warning" message="The String &quot;variable&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="314" column="30" severity="warning" message="The String &quot;comparability&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="357" column="13" severity="warning" message="Unnecessary parentheses around identifier &apos;pr&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="367" column="64" severity="warning" message="The String &quot;ppt flags&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="379" column="13" severity="warning" message="Unnecessary parentheses around identifier &apos;ppt_type&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="384" column="30" severity="warning" message="Return count for &apos;read_declaration&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="406" column="47" severity="warning" message="The String &quot;Duplicate declaration of program point \&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="469" column="44" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="493" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="500" column="26" severity="warning" message="Return count for &apos;read_VarInfo&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="587" column="24" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="593" column="7" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="607" column="13" severity="warning" message="The String &quot; for variable &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="642" column="22" severity="warning" message="Return count for &apos;read_var_comparability&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="662" column="14" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="664" column="14" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="667" column="42" severity="warning" message="The String &quot;&apos;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="676" column="5" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="685" column="5" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="701" column="5" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="742" column="16" severity="warning" message="The String &quot;  &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="756" column="20" severity="warning" message="The String &quot;, &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="766" column="34" severity="warning" message="The String &quot;null&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="813" column="50" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="814" column="64" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="858" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="859" column="26" severity="warning" message="The String &quot;.end&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="894" column="9" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="988" column="31" severity="warning" message="The String &quot;-&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="991" column="36" severity="warning" message="The String &quot;+&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1096" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1103" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1115" column="28" severity="warning" message="The String &quot; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1142" column="11" severity="warning" message="Catching &apos;Error&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1143" column="11" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="1148" column="35" severity="warning" message="The String &quot;trace file - record ignored&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1149" column="31" severity="warning" message="The String &quot;Ignored backtrace:&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1179" column="5" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="1252" column="28" severity="warning" message="The String &quot;: &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1273" column="9" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1275" column="11" severity="warning" message="Cause exception &apos;t&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="1278" column="11" severity="warning" message="Cause exception &apos;t&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="1311" column="9" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1315" column="11" severity="warning" message="The String &quot;this_invocation_nonce&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1318" column="26" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1344" column="41" severity="warning" message="Condition with || at line 1,344 position 40 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="1376" column="5" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
<error line="1483" column="5" severity="warning" message="Variable &apos;unmatched_count&apos; can be moved inside the block at line &apos;1,485&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="1491" column="26" severity="warning" message="The String &quot;  Unmatched entries are ignored!&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1499" column="46" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="1500" column="60" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="1540" column="50" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="1554" column="43" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="1591" column="10" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="1594" column="24" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1598" column="24" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1603" column="24" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1615" column="11" severity="warning" message="The String &quot;Unexpected end of file at &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1617" column="15" severity="warning" message="The String &quot; line &quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1621" column="15" severity="warning" message="The String &quot;, got &quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1623" column="15" severity="warning" message="The String &quot; for program point &quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1634" column="31" severity="warning" message="The String &quot;0&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1634" column="51" severity="warning" message="The String &quot;1&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1634" column="71" severity="warning" message="The String &quot;2&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1758" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1759" column="11" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="1805" column="25" severity="warning" message="Return count for &apos;add_orig_variables&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1808" column="5" severity="warning" message="Variable &apos;vis&apos; can be moved inside the block at line &apos;1,821&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="1809" column="5" severity="warning" message="Variable &apos;fn_name&apos; can be moved inside the block at line &apos;1,821&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="1875" column="24" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1887" column="16" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1929" column="24" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1971" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1972" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1973" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1986" column="24" severity="warning" message="Return count for &apos;read_serialized_pptmap&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1999" column="16" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2015" column="17" severity="warning" message="Unnecessary parentheses around identifier &apos;ppts&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2023" column="7" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="2048" column="15" severity="warning" message="Unnecessary parentheses around literal &apos;false&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2050" column="15" severity="warning" message="Unnecessary parentheses around literal &apos;true&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2060" column="15" severity="warning" message="Unnecessary parentheses around literal &apos;false&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2084" column="25" severity="warning" message="Return count for &apos;unescape_decl&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="2173" column="9" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="2189" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2191" column="19" severity="warning" message="Overridable method &apos;need&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="2192" column="16" severity="warning" message="Overridable method &apos;need_eol&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="2199" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2235" column="7" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="2254" column="7" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="2260" column="7" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="2268" column="59" severity="warning" message="The String &quot;Flag&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="2280" column="39" severity="warning" message="The String &quot;Language Specific Flag&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="2288" column="7" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="2319" column="7" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="2329" column="14" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2375" column="5" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="2378" column="15" severity="warning" message="Unnecessary parentheses around identifier &apos;e&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2379" column="7" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="2388" column="15" severity="warning" message="Unnecessary parentheses around literal &apos;null&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2400" column="14" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2402" column="14" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/IsoEncoding.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/annotation/issue1307/SpecIterator.java">
<error line="33" column="30" severity="warning" message="Return count for &apos;next&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/A4.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/InvariantChecker.java">
<error line="21" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="22" column="25" severity="warning" message="The String &quot;daikon.tools.InvariantChecker&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="24" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="28" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="29" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="30" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="31" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="33" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="39" column="7" severity="warning" message="The String &quot;  --&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="56" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="57" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="57" column="58" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="67" column="59" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="68" column="59" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="69" column="59" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="70" column="63" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="179" column="28" severity="warning" message="The String &quot;.inv&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="184" column="35" severity="warning" message="The String &quot;.dtrace&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="199" column="47" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="204" column="44" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="220" column="65" severity="warning" message="The String &quot;.gz&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="221" column="20" severity="warning" message="The String &quot;,&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="258" column="47" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="262" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="299" column="33" severity="warning" message="The String &quot;: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="324" column="56" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="346" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="353" column="29" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="361" column="27" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="421" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="426" column="34" severity="warning" message="The String &quot;: : Skipping slice, &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="439" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="462" column="13" severity="warning" message="Variable &apos;line&apos; can be moved inside the block at line &apos;464&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/A5.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/TestNullable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Daikon.java">
<error line="200" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="203" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="205" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="206" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="207" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="220" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="228" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="234" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="242" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="248" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="252" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="260" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="267" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="271" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="278" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="282" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="284" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="287" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="290" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="294" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="301" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="310" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="319" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="326" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="342" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="348" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="355" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="370" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="375" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="381" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="386" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="392" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="394" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="397" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="398" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="399" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="400" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="406" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="413" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="417" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="420" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="425" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="431" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="443" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="450" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="460" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="462" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="463" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="464" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="465" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="466" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="467" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="468" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="469" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="471" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="472" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="473" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="474" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="476" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="477" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="478" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="479" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="481" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="482" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="483" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="485" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="486" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="487" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="488" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="489" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="491" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="494" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="497" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="500" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="500" column="64" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="503" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="503" column="60" severity="warning" message="The String &quot;daikon.Daikon&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="505" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="506" column="22" severity="warning" message="The String &quot;daikon.Progress&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="508" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="512" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="515" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="523" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="561" column="35" severity="warning" message="Redundant super constructor call could be removed. Class &apos;TerminationMessage&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="609" column="26" severity="warning" message="The String &quot;No .decls or .dtrace files specified&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="636" column="16" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="671" column="9" severity="warning" message="Variable &apos;inv_cnt&apos; can be moved inside the block at line &apos;674&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="713" column="9" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="784" column="5" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="865" column="49" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="866" column="53" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="866" column="65" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="867" column="51" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="868" column="48" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="948" column="21" severity="warning" message="The String &quot;File &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="948" column="42" severity="warning" message="The String &quot; not found.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="950" column="38" severity="warning" message="The String &quot;.decls&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="952" column="45" severity="warning" message="The String &quot;.dtrace&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="954" column="45" severity="warning" message="The String &quot;.spinfo&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="956" column="45" severity="warning" message="The String &quot;.map&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="965" column="15" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="995" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1010" column="17" severity="warning" message="The String &quot;multiple --&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1012" column="21" severity="warning" message="The String &quot; regular expressions supplied on command line&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1018" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1019" column="15" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="1019" column="51" severity="warning" message="The String &quot;Bad regexp &quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1019" column="83" severity="warning" message="The String &quot; for &quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1019" column="113" severity="warning" message="The String &quot;: &quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1033" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1034" column="15" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="1048" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1049" column="15" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="1063" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="1064" column="15" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="1085" column="15" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="1133" column="127" severity="warning" message="The String &quot; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1160" column="28" severity="warning" message="The String &quot;-&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1160" column="53" severity="warning" message="The String &quot;+&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1437" column="25" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1561" column="45" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="1568" column="44" severity="warning" message="Condition with &amp;&amp; at line 1,568 position 43 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="1572" column="46" severity="warning" message="Condition with &amp;&amp; at line 1,572 position 45 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="1642" column="24" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="1663" column="26" severity="warning" message="The String &quot; (read &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1665" column="28" severity="warning" message="The String &quot;)&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1691" column="24" severity="warning" message="Either log or throw exception." source="com.github.sevntu.checkstyle.checks.coding.EitherLogOrThrowCheck"/>
<error line="1749" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1756" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1759" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1774" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1775" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1776" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1801" column="24" severity="warning" message="The String &quot;\r&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1909" column="24" severity="warning" message="Either log or throw exception." source="com.github.sevntu.checkstyle.checks.coding.EitherLogOrThrowCheck"/>
<error line="2082" column="59" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="2170" column="3" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2170" column="72" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="2220" column="25" severity="warning" message="Return count for &apos;setup_ppt_perc&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="2226" column="9" severity="warning" message="The String &quot;ppt_perc of &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="2231" column="35" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="2241" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="2255" column="24" severity="warning" message="Either log or throw exception." source="com.github.sevntu.checkstyle.checks.coding.EitherLogOrThrowCheck"/>
<error line="2271" column="7" severity="warning" message="Variable &apos;ppt_name&apos; can be moved inside the block at line &apos;2,272&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="2276" column="38" severity="warning" message="The String &quot;EXIT&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="2278" column="21" severity="warning" message="Unnecessary parentheses around identifier &apos;last_ppt_name&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2281" column="17" severity="warning" message="Unnecessary parentheses around identifier &apos;ppt_name&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2318" column="48" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="2323" column="43" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/ExtendsObject.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/issue1293/com/cristal/ircica/applicationcolis/userinterface/fragments/TransporteurFragment.java">
<error line="51" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/issue1293/com/cristal/ircica/applicationcolis/userinterface/fragments/CompletableFragment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/LogService.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Foo3.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/UnionCatch.java">
<error line="13" column="17" severity="warning" message="Return count for &apos;toto&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="16" column="50" severity="warning" message="The String &quot;machin&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="23" column="35" severity="warning" message="The String &quot;Error&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="34" column="13" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
<error line="37" column="13" severity="warning" message="Redundant return." source="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/TorIntegration.java">
<error line="54" column="36" severity="warning" message="The String &quot;com.duckduckgo.mobile.android.DDGApplication&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="55" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="64" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="72" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="81" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/org/elasticsearch/indices/analysis/HunspellService.java">
<error line="99" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="104" column="36" severity="warning" message="Calling the method &apos;scanAndLoadDictionaries&apos; in constructor body leads to the call of the overridable method &apos;getDictionary&apos;." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="123" column="41" severity="warning" message="The String &quot;hunspell&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="134" column="112" severity="warning" message="The String &quot;*.dic&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="138" column="35" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="199" column="25" severity="warning" message="Either log or throw exception." source="com.github.sevntu.checkstyle.checks.coding.EitherLogOrThrowCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/org/elasticsearch/action/admin/cluster/node/tasks/TasksIT.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Demo2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Foo2.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/noclasspath/Initializer.java">
<error line="14" column="24" severity="warning" message="Unnecessary parentheses around string &quot;&quot;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/executable-reference/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/no-copy-resources/fr/inria/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/executable/CmiContext_1.2.java">
<error line="106" column="72" severity="warning" message="The String &quot;&apos; with name &apos;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="113" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/maven-launcher/very-simple/src/main/java/Test.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/maven-launcher/system-dependency/src/main/java/Test.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/printer-test/spoon/test/subclass/prettyprinter/DefaultPrettyPrinterExample.java">
<error line="8" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;DefaultPrettyPrinterExample&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="13" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/printer-test/spoon/test/prettyprinter/DefaultPrettyPrinterDependency.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/printer-test/spoon/test/AnnotationSpecTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/unresolved/StaticImportUnresolved.java">
<error line="10" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;StaticImportUnresolved&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/unresolved/UnresolvedExtend.java">
<error line="9" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;UnresolvedExtend&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/unresolved/UtilUnresolved.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/unresolved/Unresolved.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/serialization/SomeClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/annotated-parameter-on-nested-class-constructor/Caller.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test/Foo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test/MultipleDeclarationsOfLocalVariable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test/EnumsRef.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test/reference/spoon/test/reference/ReferencedClass.java">
<error line="7" column="14" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="10" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="11" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test/InterfaceWithEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test/ChangeScanner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test/input/spoon/test/reference/ReferencingClass.java">
<error line="17" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-test/InterfaceEnumRef.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/simple-import/TestClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/executable-reference-expression/Bar.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/classloader-test/spoontest/Foo.java">
<error line="5" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/classloader-test/spoontest/IFoo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/reference-package/Panini.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/incremental/original-files/D.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/incremental/original-files/B.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/incremental/original-files/A.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/incremental/original-files/C.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/incremental/changed-files/D.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/incremental/changed-files/C.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/syntheticMethods/ClassWithSyntheticEnumNotParsable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/syntheticMethods/ClassWithSyntheticEnumParsable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/jdtimportbuilder/ItfImport.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/jdtimportbuilder/itf/DumbItf.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/ConfigPlugin.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/import-resources/ImportAndExtendWithPackageName.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/import-resources/fr/inria/AnotherMissingImport.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/import-resources/fr/inria/MissingImport.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/import-resources/fr/inria/PageButtonNoClassPath.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/test/resources/import-resources/fr/inria/FooNoClassPath.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/refactoring/CtRenameGenericVariableRefactoring.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/refactoring/CtParameterRemoveRefactoring.java">
<error line="61" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="109" column="38" severity="warning" message="The String &quot;The target of refactoring is not defined&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/refactoring/CtRenameRefactoring.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/refactoring/RefactoringException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/refactoring/CtRefactoring.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/refactoring/CtRenameLocalVariableRefactoring.java">
<error line="110" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="119" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="125" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="138" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="144" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="150" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="160" column="28" severity="warning" message="Return count for &apos;matches&apos; method is 6 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="167" column="29" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="194" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="198" column="29" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="220" column="29" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="243" column="81" severity="warning" message="The String &quot; with name &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/refactoring/AbstractRenameRefactoring.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/refactoring/Refactoring.java">
<error line="76" column="86" severity="warning" message="The String &quot;Copy&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="79" column="38" severity="warning" message="The String &quot;X&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="95" column="46" severity="warning" message="The String &quot;post condition broken &quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/Parameter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/Template.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/TemplateMatcher.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/TemplateParameter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/ExtensionTemplate.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/ExpressionTemplate.java">
<error line="37" column="28" severity="warning" message="The String &quot;expression&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="43" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/TypedStatementListTemplateParameter.java">
<error line="29" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="41" column="85" severity="warning" message="The String &quot;statements&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/StatementTemplate.java">
<error line="29" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/TemplateBuilder.java">
<error line="72" column="9" severity="warning" message="Variable &apos;templateParamRef&apos; can be moved inside the block at line &apos;74&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="108" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="109" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="110" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="112" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/BlockTemplate.java">
<error line="34" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="34" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/AbstractTemplate.java">
<error line="39" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/TypedBlockTemplateParameter.java">
<error line="28" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/Local.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/TemplateException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/template/Substitution.java">
<error line="154" column="23" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="198" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="337" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="626" column="17" severity="warning" message="Variable &apos;proxyName&apos; can be moved inside the block at line &apos;629&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="666" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/AbstractCtElementAssert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/AbstractFileAssert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/Assert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/AbstractCtPackageAssert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/AbstractAssert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/CtElementAssert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/FileAssert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/CtPackageAssert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/utils/ProcessorUtils.java">
<error line="44" column="27" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="54" column="31" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/utils/ModelUtils.java">
<error line="35" column="60" severity="warning" message="The String &quot;./src/test/java/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="35" column="113" severity="warning" message="The String &quot;/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="35" column="131" severity="warning" message="The String &quot;.java&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="138" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/testing/utils/Check.java">
<error line="28" column="67" severity="warning" message="The String &quot;null&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/ModelBuildingException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/SpoonFile.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/SpoonResourceHelper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/ComplianceOptions.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/EncodingProvider.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/SourceOptions.java">
<error line="33" column="22" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/ClasspathOptions.java">
<error line="56" column="22" severity="warning" message="The String &quot;-d&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/JDTBuilder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/Options.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/AdvancedOptions.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/AnnotationProcessingOptions.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/builder/JDTBuilderImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/InvalidClassPathException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/SpoonResource.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/Environment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/compiler/SpoonFolder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/ContractVerifier.java">
<error line="137" column="38" severity="warning" message="The String &quot;assertSame violation&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="32" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="366" column="31" severity="warning" message="The String &quot; &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="516" column="92" severity="warning" message="The String &quot;)&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="541" column="42" severity="warning" message="The String &quot;Path &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="558" column="36" severity="warning" message="The String &quot;Element of type &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="560" column="35" severity="warning" message="The String &quot; of parent type &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/AnnotationProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/AbstractProblemFixer.java">
<error line="21" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/AbstractManualProcessor.java">
<error line="27" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="52" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/FileGenerator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/ProcessInterruption.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/AbstractProcessor.java">
<error line="38" column="44" severity="warning" message="Overridable method &apos;addProcessedElementType&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="43" column="36" severity="warning" message="Overridable method &apos;addProcessedElementType&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="86" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/SpoonTagger.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/TraversalStrategy.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/Property.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/ProcessorProperties.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/Processor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/AbstractAnnotationProcessor.java">
<error line="40" column="48" severity="warning" message="Overridable method &apos;inferConsumedAnnotationType&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="40" column="51" severity="warning" message="Condition with &amp;&amp; at line 40 position 38 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="49" column="40" severity="warning" message="Overridable method &apos;inferConsumedAnnotationType&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="141" column="19" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/ProcessorPropertiesImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/ProcessingManager.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/ProblemFixer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/processing/FactoryAccessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/experimental/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/experimental/SpoonifyVisitor.java">
<error line="106" column="35" severity="warning" message="The String &quot;Impl&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="127" column="115" severity="warning" message="The String &quot;\&quot;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="133" column="56" severity="warning" message="The String &quot; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="149" column="85" severity="warning" message="The String &quot;Map&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="151" column="85" severity="warning" message="The String &quot;List&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="153" column="85" severity="warning" message="The String &quot;Set&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="65" severity="warning" message="The String &quot;.setValueByRole(CtRole.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="122" severity="warning" message="The String &quot;, &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="144" severity="warning" message="The String &quot;);\n&quot; appears 11 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="189" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="259" column="137" severity="warning" message="The String &quot;\&quot;);\n&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="266" column="56" severity="warning" message="The String &quot;.setKind(BinaryOperatorKind.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="307" column="56" severity="warning" message="The String &quot;.setSimpleName(\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/experimental/CtUnresolvedImport.java">
<error line="19" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="22" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="24" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="28" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="32" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/Launcher.java">
<error line="85" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="109" column="48" severity="warning" message="The String &quot;gui&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="134" column="32" severity="warning" message="The String &quot;spoon.log.path&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="144" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="145" column="32" severity="warning" message="Overridable method &apos;createFactory&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="146" column="25" severity="warning" message="Overridable method &apos;processArguments&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="157" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="162" column="25" severity="warning" message="Overridable method &apos;processArguments&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="210" column="37" severity="warning" message="The String &quot;help&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="213" column="28" severity="warning" message="The String &quot;false&quot; appears 10 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="217" column="30" severity="warning" message="The String &quot;tabs&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="224" column="52" severity="warning" message="The String &quot;tabsize&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="232" column="38" severity="warning" message="The String &quot;level&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="240" column="30" severity="warning" message="The String &quot;imports&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="247" column="38" severity="warning" message="The String &quot;compliance&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="255" column="38" severity="warning" message="The String &quot;encoding&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="264" column="38" severity="warning" message="The String &quot;input&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="273" column="38" severity="warning" message="The String &quot;processors&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="282" column="38" severity="warning" message="The String &quot;template&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="292" column="38" severity="warning" message="The String &quot;output&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="302" column="38" severity="warning" message="The String &quot;source-classpath&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="310" column="38" severity="warning" message="The String &quot;template-classpath&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="318" column="38" severity="warning" message="The String &quot;destination&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="328" column="38" severity="warning" message="The String &quot;output-type&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="345" column="30" severity="warning" message="The String &quot;compile&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="352" column="30" severity="warning" message="The String &quot;precompile&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="358" column="30" severity="warning" message="The String &quot;lines&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="365" column="38" severity="warning" message="The String &quot;cpmode&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="376" column="30" severity="warning" message="The String &quot;noclasspath&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="390" column="30" severity="warning" message="The String &quot;no-copy-resources&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="398" column="30" severity="warning" message="The String &quot;enable-comments&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="406" column="30" severity="warning" message="The String &quot;disable-comments&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="413" column="38" severity="warning" message="The String &quot;generate-files&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="422" column="30" severity="warning" message="The String &quot;disable-model-self-checks&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="506" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="518" column="69" severity="warning" message="The String &quot;[&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="518" column="100" severity="warning" message="The String &quot;]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="529" column="61" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="604" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="680" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="734" column="71" severity="warning" message="The String &quot; ms&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="743" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="755" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="788" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="876" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/OutputType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/ConflictResolutionMode.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/PatternBuilderHelper.java">
<error line="116" column="38" severity="warning" message="The String &quot;The body of &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="163" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/Match.java">
<error line="43" column="42" severity="warning" message="The String &quot;Match contains a &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="84" severity="warning" message="The String &quot; which cannot be cast to &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/Generator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/matcher/ChainOfMatchersImpl.java">
<error line="43" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/matcher/TobeMatched.java">
<error line="53" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="66" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="73" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="80" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="164" column="24" severity="warning" message="Return count for &apos;matchNext&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/matcher/Matchers.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/matcher/MatchingScanner.java">
<error line="98" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/DefaultGenerator.java">
<error line="90" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="138" column="19" severity="warning" message="Return count for &apos;getGeneratedByComment&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="199" column="9" severity="warning" message="Variable &apos;EOL&apos; can be moved inside the block at line &apos;202&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/ResultHolder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/ValueConvertorImpl.java">
<error line="32" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="36" column="18" severity="warning" message="Return count for &apos;getValueAs&apos; method is 13 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="69" column="108" severity="warning" message="The String &quot; cannot be converted to class is: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="90" column="46" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/ValueConvertor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/parameter/ParameterInfo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/parameter/AbstractParameterInfo.java">
<error line="122" column="22" severity="warning" message="Return count for &apos;mergeSingle&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="324" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="359" column="29" severity="warning" message="Return count for &apos;getContainerKind&apos; method is 10 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="402" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/parameter/MapParameterInfo.java">
<error line="50" column="22" severity="warning" message="Return count for &apos;addValueAs&apos; method is 10 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="122" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/parameter/ListParameterInfo.java">
<error line="46" column="22" severity="warning" message="Return count for &apos;addValueAs&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/parameter/ComputedParameterInfo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/parameter/ParameterComputer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/parameter/SetParameterInfo.java">
<error line="37" column="22" severity="warning" message="Return count for &apos;addValueAs&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/parameter/SimpleNameOfTypeReferenceParameterComputer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/SubstitutionRequestProvider.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/PatternPrinter.java">
<error line="195" column="61" severity="warning" message="The String &quot;/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/AbstractNode.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/ParameterNode.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/ConstantNode.java">
<error line="26" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/MapEntryNode.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/StringNode.java">
<error line="53" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="71" column="25" severity="warning" message="Return count for &apos;matchTarget&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/PrimitiveMatcher.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/RootNode.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/RepeatableMatcher.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/InlineNode.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/AbstractRepeatableMatcher.java">
<error line="18" column="24" severity="warning" message="Return count for &apos;matchTargets&apos; method is 5 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="21" column="13" severity="warning" message="Variable &apos;isMandatory&apos; can be moved inside the block at line &apos;24&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="57" column="25" severity="warning" message="Return count for &apos;matchOptionalTargets&apos; method is 6 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/SwitchNode.java">
<error line="41" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="87" column="24" severity="warning" message="Return count for &apos;matchTargets&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="104" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="179" column="34" severity="warning" message="Returning explicit boolean from ternary operator." source="com.github.sevntu.checkstyle.checks.coding.ReturnBooleanFromTernaryCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/ListOfNodes.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/ElementNode.java">
<error line="165" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="166" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="167" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="174" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="243" column="38" severity="warning" message="The String &quot;CtRole.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="335" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="337" column="59" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="338" column="60" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="339" column="63" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="340" column="56" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="341" column="66" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/AbstractPrimitiveMatcher.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/internal/node/ForEachNode.java">
<error line="39" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="77" column="24" severity="warning" message="Return count for &apos;matchAllWith&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/InlinedStatementConfigurator.java">
<error line="137" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="179" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/Quantifier.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/PatternParameterConfigurator.java">
<error line="196" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="220" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="395" column="9" severity="warning" message="Variable &apos;typeReferenceRef&apos; can be moved inside the block at line &apos;399&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="396" column="9" severity="warning" message="Variable &apos;ctStatementRef&apos; can be moved inside the block at line &apos;399&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="402" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="418" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="452" column="81" severity="warning" message="Condition with &amp;&amp; at line 452 position 68 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="456" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="558" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="565" column="25" severity="warning" message="The String &quot;S&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="915" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="938" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="952" column="13" severity="warning" message="Variable &apos;execRef&apos; can be moved inside the block at line &apos;953&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="956" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/PatternBuilder.java">
<error line="69" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="70" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="71" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="72" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="74" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="75" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="77" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="78" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="79" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="80" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="103" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="162" column="22" severity="warning" message="Return count for &apos;getPatternNode&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="172" column="46" severity="warning" message="The String &quot;The role &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="194" column="38" severity="warning" message="The String &quot;Removing of Node is not supported&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="323" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="345" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/pattern/Pattern.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/MavenLauncher.java">
<error line="25" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="48" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="49" column="60" severity="warning" message="The String &quot;M2_HOME&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="60" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="69" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="79" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="94" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="107" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/javadoc/internal/Pair.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/javadoc/internal/Javadoc.java">
<error line="35" column="22" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="119" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="120" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/javadoc/internal/JavadocBlockTag.java">
<error line="27" column="30" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="72" column="19" severity="warning" message="The String &quot; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/javadoc/internal/JavadocDescriptionElement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/javadoc/internal/JavadocInlineTag.java">
<error line="22" column="31" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="35" column="30" severity="warning" message="The String &quot;{@&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="39" column="28" severity="warning" message="The String &quot;}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="80" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="81" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="87" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="89" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="103" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/javadoc/internal/JavadocSnippet.java">
<error line="23" column="29" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/javadoc/internal/JavadocDescription.java">
<error line="22" column="37" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/IncrementalLauncher.java">
<error line="72" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="82" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="90" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="98" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="106" column="86" severity="warning" message="The String &quot;.java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="111" column="25" severity="warning" message="Cause exception &apos;e1&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="111" column="50" severity="warning" message="The String &quot;unable to locate input source file: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="118" column="21" severity="warning" message="Cause exception &apos;e1&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="134" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="146" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="219" column="17" severity="warning" message="Cause exception &apos;e2&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="247" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/DefaultImportComparator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/PrintingContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/LexicalScopeScanner.java">
<error line="44" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtScanner.java">
<error line="114" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="200" column="24" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="200" column="38" severity="warning" message="Unnecessary parentheses around identifier &apos;o&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="477" column="27" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="478" column="27" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/JavaIdentifiers.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ForceFullyQualifiedProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtImportVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtVisitable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/Parent.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java">
<error line="182" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="187" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="202" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="209" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="211" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="218" column="30" severity="warning" message="Overridable method &apos;setPrinterTokenWriter&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="239" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="240" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="279" column="36" severity="warning" message="The String &quot;(&quot; appears 21 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="285" column="40" severity="warning" message="The String &quot;)&quot; appears 20 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="305" column="83" severity="warning" message="The String &quot;:&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="317" column="40" severity="warning" message="The String &quot;;&quot; appears 14 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="408" column="32" severity="warning" message="The String &quot;@&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="412" column="49" severity="warning" message="The String &quot;,&quot; appears 12 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="416" column="88" severity="warning" message="The String &quot;=&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="426" column="50" severity="warning" message="The String &quot;interface&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="428" column="42" severity="warning" message="The String &quot;{&quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="431" column="41" severity="warning" message="The String &quot;}&quot; appears 10 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="455" column="32" severity="warning" message="The String &quot;[&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="457" column="32" severity="warning" message="The String &quot;]&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="570" column="34" severity="warning" message="The String &quot;default&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="605" column="38" severity="warning" message="The String &quot;class&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="605" column="111" severity="warning" message="The String &quot;^[0-9]*&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="626" column="47" severity="warning" message="The String &quot;extends&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="649" column="44" severity="warning" message="The String &quot;?&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="656" column="13" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="703" column="30" severity="warning" message="The String &quot;while&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="793" column="48" severity="warning" message="The String &quot;.&quot; appears 14 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="845" column="38" severity="warning" message="The String &quot;this&quot; appears 5 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="888" column="30" severity="warning" message="The String &quot;super&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="900" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="923" column="42" severity="warning" message="The String &quot;static&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="947" column="45" severity="warning" message="The String &quot;*&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1027" column="50" severity="warning" message="The String &quot; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1161" column="30" severity="warning" message="The String &quot;for&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1212" column="13" severity="warning" message="Variable &apos;comments&apos; can be moved inside the block at line &apos;1,213&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="1333" column="54" severity="warning" message="The String &quot;var&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1436" column="38" severity="warning" message="The String &quot;new&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1703" column="30" severity="warning" message="The String &quot;try&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1710" column="47" severity="warning" message="The String &quot;finally&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1851" column="21" severity="warning" message="Return count for &apos;isPrintTypeReference&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1862" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="2053" column="13" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="2071" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ModelConsistencyChecker.java">
<error line="56" column="53" severity="warning" message="Condition with &amp;&amp; at line 56 position 40 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="56" column="112" severity="warning" message="Condition with &amp;&amp; at line 56 position 99 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="59" column="77" severity="warning" message="The String &quot; - &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ImportScanner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ImportCleaner.java">
<error line="123" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="197" column="21" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="258" column="27" severity="warning" message="Return count for &apos;getImportRefID&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="264" column="69" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtIterator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtBiScannerDefault.java">
<error line="46" column="14" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="53" column="56" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="65" column="60" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="75" column="65" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="86" column="48" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="100" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="113" column="62" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="125" column="45" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="136" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="149" column="53" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="162" column="44" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="172" column="44" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="181" column="43" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="192" column="44" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="203" column="51" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="217" column="59" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="227" column="50" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="241" column="57" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="254" column="47" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="263" column="41" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="274" column="50" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="286" column="63" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="299" column="51" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="311" column="55" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="323" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="335" column="60" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="347" column="58" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="357" column="42" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="370" column="46" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="382" column="41" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="386" column="48" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="387" column="48" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="394" column="55" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="406" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="419" column="46" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="430" column="52" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="441" column="66" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="450" column="52" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="460" column="66" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="469" column="52" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="484" column="62" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="495" column="47" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="509" column="54" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="522" column="47" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="537" column="45" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="552" column="68" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="565" column="57" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="578" column="53" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="589" column="60" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="597" column="55" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="607" column="62" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="616" column="45" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="626" column="52" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="636" column="45" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="647" column="51" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="658" column="44" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="668" column="42" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="681" column="54" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="694" column="66" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="705" column="61" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="717" column="69" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="730" column="57" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="743" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="754" column="52" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="767" column="51" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="779" column="52" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="790" column="44" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="801" column="60" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="812" column="59" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="821" column="68" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="830" column="48" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="843" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="856" column="50" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="869" column="46" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="879" column="46" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="890" column="49" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="900" column="52" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="911" column="52" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="923" column="59" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="932" column="59" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="944" column="63" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="955" column="61" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="967" column="57" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="978" column="61" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="992" column="64" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1003" column="77" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/CtConsumer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/ScanningMode.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/CtQuery.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/CtQueryable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/CtFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java">
<error line="43" column="17" severity="warning" message="Overridable method &apos;setInput&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="144" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="145" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="178" column="52" severity="warning" message="The String &quot;apply&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="273" column="42" severity="warning" message="The String &quot;) &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="401" column="31" severity="warning" message="Condition with || at line 401 position 21 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="413" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="430" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="437" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="469" column="54" severity="warning" message="The String &quot;_accept&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="487" column="26" severity="warning" message="Overridable method &apos;onCallbackSet&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="507" column="26" severity="warning" message="Overridable method &apos;onCallbackSet&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="550" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="553" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="556" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="558" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="600" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/CtScannerListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/CtQueryAware.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/QueryFailurePolicy.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/chain/CtConsumableFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/DefaultTokenWriter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/TypeNameScope.java">
<error line="43" column="18" severity="warning" message="Return count for &apos;forEachElementByName&apos; method is 5 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="100" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/PrettyPrinter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtDequeScanner.java">
<error line="21" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="27" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/AstParentConsistencyChecker.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CacheBasedConflictFinder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/EarlyTerminatingScanner.java">
<error line="34" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="41" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="75" column="28" severity="warning" message="Condition with || at line 75 position 21 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="90" column="28" severity="warning" message="Condition with || at line 90 position 21 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="175" column="28" severity="warning" message="Condition with || at line 175 position 21 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ImportConflictDetector.java">
<error line="72" column="13" severity="warning" message="Variable &apos;fieldAccess&apos; can be moved inside the block at line &apos;73&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="74" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="111" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="174" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/Query.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/PrinterHelper.java">
<error line="36" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="64" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="104" column="26" severity="warning" message="Return count for &apos;write&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="185" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CommentHelper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ElementPrinterHelper.java">
<error line="143" column="43" severity="warning" message="The String &quot;,&quot; appears 7 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="195" column="36" severity="warning" message="The String &quot;.&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="202" column="34" severity="warning" message="The String &quot;\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="24" severity="warning" message="The String &quot;{&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="205" column="61" severity="warning" message="The String &quot;}&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="236" column="32" severity="warning" message="The String &quot;&lt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="236" column="69" severity="warning" message="The String &quot;&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="283" column="69" severity="warning" message="The String &quot;.*&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="332" column="34" severity="warning" message="The String &quot;import&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="333" column="59" severity="warning" message="The String &quot;;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="390" column="38" severity="warning" message="Condition with || at line 390 position 31 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="398" column="38" severity="warning" message="Condition with || at line 398 position 31 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="419" column="38" severity="warning" message="Condition with || at line 419 position 31 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="422" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="423" column="72" severity="warning" message="Condition with &amp;&amp; at line 423 position 62 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="427" column="72" severity="warning" message="Condition with &amp;&amp; at line 427 position 62 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="466" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="512" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/Filter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/FieldAccessFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/RegexFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/CtScannerFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java">
<error line="294" column="34" severity="warning" message="The String &quot;Cannot load class: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="294" column="84" severity="warning" message="The String &quot; with class loader &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/SubtypeFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/AllTypeMembersFunction.java">
<error line="89" column="78" severity="warning" message="Condition with &amp;&amp; at line 89 position 56 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/ParameterReferenceFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/OverriddenMethodFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java">
<error line="100" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="162" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/AllMethodsSameSignatureFunction.java">
<error line="44" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="193" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/LambdaFilter.java">
<error line="36" column="33" severity="warning" message="Overridable method &apos;addImplementingInterface&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="44" column="33" severity="warning" message="Overridable method &apos;addImplementingInterface&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/SiblingsFunction.java">
<error line="37" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/VariableScopeFunction.java">
<error line="40" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="41" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="42" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/OverriddenMethodQuery.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/AnnotationFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/ReferenceTypeFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/CatchVariableReferenceFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/CatchVariableScopeFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/DirectReferenceFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/ExecutableReferenceFilter.java">
<error line="47" column="22" severity="warning" message="Overridable method &apos;addExecutable&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/OverridingMethodFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/ParameterScopeFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/CompositeFilter.java">
<error line="24" column="20" severity="warning" message="Return count for &apos;matches&apos; method is 8 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="70" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/AbstractReferenceFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/SubInheritanceHierarchyFunction.java">
<error line="35" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="71" column="39" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java">
<error line="90" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/VariableReferenceFunction.java">
<error line="35" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="36" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/FilteringOperator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/TypeFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/VariableAccessFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/InvocationFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/FieldReferenceFunction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/ReturnOrThrowFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/FieldScopeFunction.java">
<error line="32" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/ParentFunction.java">
<error line="27" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/AbstractFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/NamedElementFilter.java">
<error line="45" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/filter/LineFilter.java">
<error line="35" column="20" severity="warning" message="Return count for &apos;matches&apos; method is 6 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/OperatorHelper.java">
<error line="30" column="26" severity="warning" message="Return count for &apos;getOperatorText&apos; method is 6 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="33" column="24" severity="warning" message="The String &quot;+&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="35" column="24" severity="warning" message="The String &quot;-&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="41" column="24" severity="warning" message="The String &quot;++&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="43" column="24" severity="warning" message="The String &quot;--&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="49" column="42" severity="warning" message="The String &quot;Unsupported operator &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="56" column="26" severity="warning" message="Return count for &apos;getOperatorText&apos; method is 18 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtBFSIterator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/AccessibleVariablesFinder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/LiteralHelper.java">
<error line="22" column="20" severity="warning" message="The String &quot;0b&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="24" column="20" severity="warning" message="The String &quot;0&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="26" column="20" severity="warning" message="The String &quot;0x&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="33" column="56" severity="warning" message="The String &quot;L&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="44" column="47" severity="warning" message="The String &quot;F&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="97" column="20" severity="warning" message="The String &quot;\&quot;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="152" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtAbstractImportVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ForceImportProcessor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ImportAnalyzer.java">
<error line="77" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="94" column="13" severity="warning" message="Super call could be removed: Class &apos;ScannerListener&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="98" column="29" severity="warning" message="Return count for &apos;enter&apos; method is 7 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="114" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="121" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="153" column="29" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="161" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="168" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ListPrinter.java">
<error line="51" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="56" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtAbstractVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/printer/CommentOffset.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java">
<error line="68" column="23" severity="warning" message="Return count for &apos;addMethodImport&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/TokenWriter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java">
<error line="66" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="67" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="68" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="70" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="167" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="168" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="169" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="171" column="21" severity="warning" message="Return count for &apos;matchesTypeName&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="173" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="342" column="23" severity="warning" message="Return count for &apos;addClassImport&apos; method is 8 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="381" column="29" severity="warning" message="Variable &apos;pack&apos; can be moved inside the block at line &apos;402&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="407" column="46" severity="warning" message="The String &quot;java.lang&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="439" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="452" column="21" severity="warning" message="Return count for &apos;isAlreadyInUsedImport&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="479" column="81" severity="warning" message="Condition with &amp;&amp; at line 479 position 62 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="538" column="99" severity="warning" message="The String &quot;.&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="559" column="23" severity="warning" message="Return count for &apos;isImportedInClassImports&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="598" column="21" severity="warning" message="Return count for &apos;declaringTypeIsLocalOrImported&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="647" column="23" severity="warning" message="Return count for &apos;addMethodImport&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="758" column="27" severity="warning" message="Return count for &apos;lookForLocalVariables&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="809" column="23" severity="warning" message="Return count for &apos;isTypeInCollision&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/NameScopeImpl.java">
<error line="30" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="32" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="35" column="28" severity="warning" message="Overridable method &apos;addNamedElement&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="39" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/Root.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtInheritanceScanner.java">
<error line="136" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/LexicalScope.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/CtAbstractBiScanner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/visitor/Child.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/cu/SourcePositionHolder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/cu/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/cu/CompilationUnit.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/cu/SourcePosition.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/cu/position/NoSourcePosition.java">
<error line="18" column="31" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="31" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="45" column="49" severity="warning" message="The String &quot;PartialSourcePosition only contains a CompilationUnit&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/cu/position/DeclarationSourcePosition.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/cu/position/BodyHolderSourcePosition.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/cu/position/CompoundSourcePosition.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/impl/ListHandler.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/impl/SingleHandler.java">
<error line="52" column="57" severity="warning" message="The String &quot;Index: &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="52" column="77" severity="warning" message="The String &quot;, Size: &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/impl/ModelRoleHandlers.java">
<error line="110" column="64" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="120" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="137" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="154" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="171" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="188" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="205" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="222" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="239" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="256" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="273" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="290" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="307" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="324" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="341" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="358" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="375" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="392" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="409" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="426" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="443" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="460" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="477" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="494" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="511" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="528" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="545" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="562" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="574" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="591" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="603" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="620" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="637" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="654" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="671" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="688" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="705" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="722" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="739" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="756" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="773" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="785" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="802" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="819" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="836" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="853" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="870" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="887" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="904" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="921" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="938" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="955" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="972" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="989" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1006" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1023" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1040" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1057" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1074" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1091" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1108" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1125" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1142" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1159" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1176" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1193" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1210" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1222" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1239" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1256" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1273" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1290" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1307" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1324" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1341" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1358" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1375" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1392" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1409" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1426" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1443" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1460" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1477" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1494" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1511" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1528" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1540" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1557" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1574" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1591" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1608" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1625" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1642" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1659" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1676" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1693" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1710" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1727" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1744" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1761" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1778" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1795" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1812" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1829" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1846" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1863" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1880" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1897" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1914" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1931" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1948" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1965" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1982" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1999" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2016" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2033" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2050" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2067" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2079" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2096" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2113" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2130" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2147" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2164" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2181" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2198" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2215" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2232" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2249" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2266" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2283" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2300" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2317" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2334" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2351" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="2368" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/impl/SetHandler.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/impl/RoleHandlerHelper.java">
<error line="29" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="31" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/impl/MapHandler.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/impl/AbstractRoleHandler.java">
<error line="82" column="34" severity="warning" message="The String &quot;The value of CtRole.&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/RoleHandler.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/meta/ContainerKind.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/ModelStreamer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/PackageFactory.java">
<error line="158" column="44" severity="warning" message="Condition with &amp;&amp; at line 158 position 34 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/QueryFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/ClassFactory.java">
<error line="87" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="106" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/AnnotationFactory.java">
<error line="100" column="51" severity="warning" message="Return count for &apos;annotate&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="104" column="48" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="108" column="21" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="113" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="150" column="48" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="153" column="26" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/Factory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/InterfaceFactory.java">
<error line="77" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="96" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/FactoryImpl.java">
<error line="129" column="26" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="144" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="157" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="170" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="183" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="196" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="211" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="224" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="237" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="250" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="263" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="279" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="292" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="305" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="318" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="331" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="344" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="357" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="374" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="384" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="401" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="441" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/ConstructorFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/CodeFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/EvalFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/EnumFactory.java">
<error line="61" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="79" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/ModuleFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/TypeFactory.java">
<error line="64" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="65" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="66" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="67" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="68" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="69" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="70" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="71" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="72" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="73" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="74" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="75" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="76" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="77" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="78" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="79" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="80" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="81" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="82" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="83" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="84" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="85" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="86" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="87" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="88" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="89" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="90" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="91" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="255" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="259" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="423" column="26" severity="warning" message="Return count for &apos;get&apos; method is 7 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="486" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="552" column="26" severity="warning" message="Return count for &apos;get&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="560" column="19" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="709" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/CoreFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/ExecutableFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/CompilationUnitFactory.java">
<error line="34" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="41" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="71" column="42" severity="warning" message="The String &quot;Cannot get path for file: &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="76" column="28" severity="warning" message="Return count for &apos;getOrCreate&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/FieldFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/MethodFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/factory/SubFactory.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/Changes.java">
<error line="28" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/CtElementPathBuilder.java">
<error line="75" column="25" severity="warning" message="Variable &apos;attrName&apos; can be moved inside the block at line &apos;77&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="103" column="57" severity="warning" message="Condition with &amp;&amp; at line 103 position 35 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="105" column="57" severity="warning" message="The String &quot;index&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="134" column="45" severity="warning" message="The String &quot;name&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="171" column="28" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/impl/CtRolePathElement.java">
<error line="83" column="56" severity="warning" message="The String &quot;name&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="86" column="63" severity="warning" message="The String &quot;signature&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="92" column="56" severity="warning" message="The String &quot;index&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="122" column="56" severity="warning" message="The String &quot;key&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/impl/CtTypedNameElement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/impl/CtPathElement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/impl/CtNamedPathElement.java">
<error line="38" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/impl/CtPathImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/impl/AbstractPathElement.java">
<error line="21" column="49" severity="warning" message="The String &quot;[&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="22" column="47" severity="warning" message="The String &quot;]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="23" column="58" severity="warning" message="The String &quot;=&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/CtPath.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/CtPathException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/CtPathBuilder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/CtPathStringBuilder.java">
<error line="48" column="13" severity="warning" message="Cause exception &apos;ex&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="53" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="54" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="55" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="57" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="106" column="25" severity="warning" message="The String &quot;]&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="118" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="128" column="17" severity="warning" message="The String &quot;(&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="128" column="38" severity="warning" message="The String &quot;[&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="137" column="51" severity="warning" message="The String &quot;Unexpected end of bracket &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/path/CtRole.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/annotations/MetamodelPropertyField.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/annotations/PropertySetter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/annotations/PropertyGetter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/CtModelImpl.java">
<error line="79" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="81" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/ModelElementContainerDefaultCapacities.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtPackageReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtWildcardReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtTypeReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtFieldReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtActualTypeContainer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtArrayTypeReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtModuleReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtVariableReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtExecutableReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtTypeMemberWildcardImportReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtIntersectionTypeReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtCatchVariableReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtTypeParameterReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtLocalVariableReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtUnboundVariableReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/reference/CtParameterReference.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/eval/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/eval/PartialEvaluator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtVariable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtShadowable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtFormalTypeDeclarer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtElement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtPackageDeclaration.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/ParentNotInitializedException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtImport.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtAnnotationType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtPackageExport.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtAnnotation.java">
<error line="198" column="35" severity="warning" message="Return count for &apos;getAnnotatedElementTypeForCtElement&apos; method is 11 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtAnonymousExecutable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtModifiable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtInterface.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtMethod.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtExecutable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtModuleRequirement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtTypeInformation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtEnumValue.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtMultiTypedElement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtAnnotationMethod.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtParameter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtPackage.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtNamedElement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtCodeSnippet.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtProvidedService.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtCompilationUnit.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtModule.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtImportKind.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtTypeMember.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtTypedElement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtField.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtUsedService.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtTypeParameter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtEnum.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtConstructor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtAnnotatedElementType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/CtModuleDirective.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/declaration/ModifierKind.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/CtModel.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtExecutableReferenceExpression.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtVariableAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtLoop.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtConditional.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtSuperAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtVariableWrite.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtArrayRead.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtUnaryOperator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtAssert.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtBinaryOperator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtCodeSnippetExpression.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtJavaDoc.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtLocalVariable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtThrow.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtNewArray.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtLabelledFlowBreak.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtBodyHolder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtOperatorAssignment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtBlock.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtTypeAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtNewClass.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtThisAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtLiteral.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/BinaryOperatorKind.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtFieldAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtAbstractInvocation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtJavaDocTag.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtExpression.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtReturn.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtRHSReceiver.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtVariableRead.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtForEach.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtCFlowBreak.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtSynchronized.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/UnaryOperatorKind.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtFor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtStatement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtFieldWrite.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtInvocation.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtWhile.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtCodeElement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtArrayWrite.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtCodeSnippetStatement.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtDo.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtFieldRead.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtArrayAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtCatchVariable.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtSwitch.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtContinue.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/LiteralBase.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtAnnotationFieldAccess.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtCatch.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtComment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtTargetedExpression.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtAssignment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtConstructorCall.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtStatementList.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtTry.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtLambda.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtCase.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtBreak.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtIf.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/reflect/code/CtTryWithResource.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/SpoonException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/SpoonModelBuilder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/SpoonAPI.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/metamodel/ConceptKind.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/metamodel/MMMethod.java">
<error line="42" column="30" severity="warning" message="Overridable method &apos;addRelatedMethod&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="48" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="69" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="96" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/metamodel/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/metamodel/MetamodelConcept.java">
<error line="157" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="168" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/metamodel/MetamodelProperty.java">
<error line="126" column="82" severity="warning" message="The String &quot;.&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="155" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="160" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="164" column="24" severity="warning" message="Return count for &apos;detectValueType&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="186" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="200" column="9" severity="warning" message="Variable &apos;f&apos; can be moved inside the block at line &apos;201&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="214" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="333" column="17" severity="warning" message="Return count for &apos;getIdxOfBestMatchByReturnType&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="451" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="479" column="20" severity="warning" message="Return count for &apos;isDerived&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="520" column="20" severity="warning" message="Return count for &apos;isUnsettable&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="571" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="626" column="92" severity="warning" message="The String &quot; failed&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/metamodel/Metamodel.java">
<error line="184" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="188" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="196" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="204" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="206" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="237" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="244" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="269" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="352" column="31" severity="warning" message="The String &quot;spoon.support.reflect&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="352" column="56" severity="warning" message="The String &quot;spoon.reflect&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="384" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="385" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="476" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/metamodel/MMMethodKind.java">
<error line="23" column="89" severity="warning" message="The String &quot;get&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="34" column="46" severity="warning" message="The String &quot;add&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="34" column="85" severity="warning" message="The String &quot;insert&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="103" column="41" severity="warning" message="Condition with &amp;&amp; at line 103 position 31 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/QueueProcessingManager.java">
<error line="47" column="19" severity="warning" message="Overridable method &apos;setFactory&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="55" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="76" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/RuntimeProcessingManager.java">
<error line="44" column="19" severity="warning" message="Overridable method &apos;setFactory&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="54" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="75" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="112" column="111" severity="warning" message="The String &quot;&apos;...&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/Internal.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/SignaturePrinter.java">
<error line="29" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="53" column="15" severity="warning" message="The String &quot;(&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="23" severity="warning" message="The String &quot;,&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="67" column="15" severity="warning" message="The String &quot;)&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="77" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/JavaReflectionVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/internal/PackageRuntimeBuilderContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/internal/TypeReferenceRuntimeBuilderContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/internal/TypeRuntimeBuilderContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/internal/ExecutableRuntimeBuilderContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/internal/VariableRuntimeBuilderContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/internal/RuntimeBuilderContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/internal/AnnotationRuntimeBuilderContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/internal/AbstractRuntimeBuilderContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java">
<error line="86" column="9" severity="warning" message="Variable &apos;ctPackage&apos; can be moved inside the block at line &apos;91&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="87" column="9" severity="warning" message="Variable &apos;ctEnclosingClass&apos; can be moved inside the block at line &apos;88&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="237" column="19" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="265" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="449" column="20" severity="warning" message="Return count for &apos;getTypeName&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="466" column="19" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="466" column="41" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/reflect/RtParameter.java">
<error line="73" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="114" column="24" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="114" column="63" severity="warning" message="Condition with &amp;&amp; at line 114 position 50 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="116" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="116" column="49" severity="warning" message="Condition with &amp;&amp; at line 116 position 39 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="172" column="61" severity="warning" message="Condition with &amp;&amp; at line 172 position 54 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java">
<error line="54" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="86" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="94" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="98" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="147" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="165" column="38" severity="warning" message="The String &quot;Calling of Java8 Method#isDefault() failed&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="167" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/java/JavaReflectionVisitorImpl.java">
<error line="194" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="211" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/equals/EqualsChecker.java">
<error line="38" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/equals/CloneHelper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/equals/NotEqualException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/equals/EqualsVisitor.java">
<error line="24" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="26" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="28" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="32" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="47" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="48" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="49" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="50" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/ClassTypingContext.java">
<error line="146" column="37" severity="warning" message="Return count for &apos;resolveActualTypeArgumentsOf&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="157" column="17" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="161" column="17" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="164" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="168" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="173" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="177" column="13" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="180" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="185" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="196" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="229" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="238" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="424" column="29" severity="warning" message="Return count for &apos;enter&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="426" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="435" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="475" column="32" severity="warning" message="Return count for &apos;resolveTypeParameter&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="477" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="490" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="504" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="522" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
<error line="555" column="21" severity="warning" message="Return count for &apos;isSubTypeByActualTypeArguments&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="583" column="21" severity="warning" message="Return count for &apos;isSubTypeArg&apos; method is 8 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="619" column="21" severity="warning" message="Return count for &apos;isSameSignature&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="646" column="25" severity="warning" message="Return count for &apos;isSameSignatureLikeScopeMethod&apos; method is 8 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/MethodTypingContext.java">
<error line="45" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="65" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="171" column="34" severity="warning" message="Return count for &apos;adaptTypeParameter&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="189" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="204" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="215" column="20" severity="warning" message="Return count for &apos;hasSameMethodFormalTypeParameters&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/TypeReferenceScanner.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/ProcessingVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/GenericTypeAdapter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/clone/CloneVisitor.java">
<error line="26" column="16" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="26" column="22" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="392" column="55" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="393" column="55" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/clone/CloneBuilder.java">
<error line="23" column="16" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="26" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="34" column="59" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="40" column="55" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="49" column="49" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="50" column="49" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="51" column="49" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="60" column="54" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="69" column="49" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="78" column="44" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="87" column="49" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="88" column="49" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="94" column="59" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="100" column="55" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="106" column="61" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="112" column="52" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="118" column="40" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="124" column="56" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="125" column="56" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="131" column="43" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="137" column="62" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="143" column="50" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="144" column="50" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="150" column="57" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="151" column="57" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="157" column="48" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="163" column="45" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="164" column="45" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="170" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="171" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="172" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="178" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="179" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="185" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="186" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="187" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="194" column="53" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="201" column="44" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="207" column="59" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="213" column="49" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="219" column="54" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="220" column="54" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="221" column="54" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="222" column="54" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="229" column="57" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="235" column="56" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="241" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="242" column="51" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="249" column="42" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="250" column="42" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="257" column="45" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="258" column="45" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="259" column="45" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="266" column="48" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="273" column="55" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="280" column="59" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="287" column="57" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="288" column="57" severity="warning" message="Unnecessary parentheses around identifier &apos;other&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/replace/CtListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/replace/ReplaceSetListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/replace/ReplacementVisitor.java">
<error line="1329" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1331" column="76" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1331" column="144" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="1332" column="11" severity="warning" message="Useless catch block. No logging, wrapping or handling code here." source="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck"/>
<error line="1337" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1340" column="11" severity="warning" message="Useless catch block. No logging, wrapping or handling code here." source="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck"/>
<error line="1345" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1347" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1349" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1351" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1356" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1361" column="40" severity="warning" message="Unnecessary parentheses around identifier &apos;original&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1370" column="85" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1370" column="86" severity="warning" message="The String &quot;Cannot replace single value by multiple values in &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="1372" column="25" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1386" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1390" column="29" severity="warning" message="Unnecessary parentheses around identifier &apos;original&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1399" column="29" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1399" column="35" severity="warning" message="Unnecessary parentheses around identifier &apos;ele&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1407" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1412" column="35" severity="warning" message="Unnecessary parentheses around identifier &apos;original&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1422" column="29" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1422" column="35" severity="warning" message="Unnecessary parentheses around identifier &apos;aReplace&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1434" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1435" column="27" severity="warning" message="Unnecessary parentheses around identifier &apos;original&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1439" column="85" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1451" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1461" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1469" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1477" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1488" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1499" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1509" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1518" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1529" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1540" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1548" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1555" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1564" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1573" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1584" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1592" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1604" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1615" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1622" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1631" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1641" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1652" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1661" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1670" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1680" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1690" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1698" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1709" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1719" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1723" column="31" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1724" column="31" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1729" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1739" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1750" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1759" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1768" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1775" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1783" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1790" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1802" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1811" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1822" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1833" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1845" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1857" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1868" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1879" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1888" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1894" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1902" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1909" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1917" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1925" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1934" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1943" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1951" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1961" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1972" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1980" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1989" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1999" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2009" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2018" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2028" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2037" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2046" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2055" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2064" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2071" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2077" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2087" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2097" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2107" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2114" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2122" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2129" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2137" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2146" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2152" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2161" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2169" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2178" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2186" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2197" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="2205" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/replace/InvalidReplaceException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/replace/ReplaceListListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/replace/ReplaceListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/replace/ReplaceMapListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/AbstractTypingContext.java">
<error line="28" column="31" severity="warning" message="Return count for &apos;adaptType&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="65" column="13" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/SubInheritanceHierarchyResolver.java">
<error line="106" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="110" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="126" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="134" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="142" column="37" severity="warning" message="Return count for &apos;enter&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="146" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="153" column="29" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="166" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="172" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="182" column="21" severity="warning" message="Variable &apos;type&apos; can be moved inside the block at line &apos;183&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="206" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="216" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/visitor/HashcodeVisitor.java">
<error line="46" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/template/UndefinedParameterException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/template/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/template/Parameters.java">
<error line="46" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="74" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="78" column="41" severity="warning" message="Condition with &amp;&amp; at line 78 position 34 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="98" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="106" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="156" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="157" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="191" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="192" column="38" severity="warning" message="The String &quot;Getting of template parameters failed&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="210" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="245" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/OutputDestinationHandler.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/UnsettableProperty.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/ProgressLogger.java">
<error line="30" column="34" severity="warning" message="The String &quot;Step &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="30" column="54" severity="warning" message="The String &quot; &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="30" column="97" severity="warning" message="The String &quot; in &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="30" column="143" severity="warning" message="The String &quot; ms&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/VirtualFolder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/ZipFile.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/FileSystemFile.java">
<error line="83" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/SnippetCompilationError.java">
<error line="17" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/SpoonPom.java">
<error line="85" column="35" severity="warning" message="The String &quot;Pom does not exists.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="95" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="124" column="65" severity="warning" message="The String &quot;src&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="124" column="80" severity="warning" message="The String &quot;java&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="130" column="71" severity="warning" message="The String &quot;target&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="186" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="208" column="20" severity="warning" message="Return count for &apos;getProperty&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="242" column="16" severity="warning" message="Return count for &apos;getSourceVersion&apos; method is 7 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="280" column="33" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="280" column="51" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="284" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="301" column="19" severity="warning" message="Return count for &apos;toString&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="304" column="19" severity="warning" message="The String &quot;:&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="314" column="41" severity="warning" message="The String &quot;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="356" column="17" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="398" column="35" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="398" column="47" severity="warning" message="The String &quot;-version&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="400" column="35" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="415" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="417" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="448" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="470" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/FileSystemFolder.java">
<error line="29" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="149" column="49" severity="warning" message="The String &quot;not possible a real folder&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/VirtualFile.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/SpoonProgress.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java">
<error line="42" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="43" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="157" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/FilteringFolder.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/TreeBuilderRequestor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/CompilationUnitFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/FactoryCompilerConfig.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/TreeBuilderCompiler.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/ASTPair.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/JDTImportBuilder.java">
<error line="58" column="41" severity="warning" message="The String &quot;*&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="87" column="17" severity="warning" message="Variable &apos;methodOrFieldName&apos; can be moved inside the block at line &apos;90&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="141" column="20" severity="warning" message="Return count for &apos;getOrLoadClass&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/ParentExiter.java">
<error line="126" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="130" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="149" column="17" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="776" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java">
<error line="263" column="28" severity="warning" message="Return count for &apos;getQualifiedTypeReference&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="309" column="9" severity="warning" message="Variable &apos;environment&apos; can be moved inside the block at line &apos;311&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="324" column="29" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="567" column="28" severity="warning" message="Return count for &apos;getTypeReference&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="575" column="9" severity="warning" message="Variable &apos;typeName&apos; can be moved inside the block at line &apos;600&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="620" column="35" severity="warning" message="Return count for &apos;getTypeReference&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="622" column="26" severity="warning" message="The String &quot;.*(&lt;.+&gt;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="623" column="47" severity="warning" message="The String &quot;([^&lt;]+)&lt;(.+)&gt;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="625" column="33" severity="warning" message="The String &quot;?&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="632" column="57" severity="warning" message="The String &quot;,&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="660" column="27" severity="warning" message="The String &quot;extends&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="660" column="55" severity="warning" message="The String &quot;super&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="731" column="25" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="766" column="13" severity="warning" message="Variable &apos;oldBounds&apos; can be moved inside the block at line &apos;808&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="772" column="17" severity="warning" message="Variable &apos;typeParamBinding&apos; can be moved inside the block at line &apos;773&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="980" column="32" severity="warning" message="Return count for &apos;getVariableReference&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1061" column="37" severity="warning" message="Return count for &apos;getLambdaExecutableReference&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java">
<error line="93" column="19" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="126" column="9" severity="warning" message="Variable &apos;current&apos; can be moved inside the block at line &apos;127&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="211" column="90" severity="warning" message="The String &quot;\\.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="211" column="97" severity="warning" message="The String &quot;\\&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="217" column="44" severity="warning" message="Return count for &apos;getVariableDeclaration&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="220" column="9" severity="warning" message="Variable &apos;typeFactory&apos; can be moved inside the block at line &apos;292&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="225" column="9" severity="warning" message="Variable &apos;environment&apos; can be moved inside the block at line &apos;292&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/JDTBatchCompiler.java">
<error line="81" column="21" severity="warning" message="Variable &apos;fileName&apos; can be moved inside the block at line &apos;97&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="136" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java">
<error line="117" column="47" severity="warning" message="The String &quot;built in &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="117" column="96" severity="warning" message="The String &quot; ms&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="171" column="51" severity="warning" message="The String &quot;Loaded processor &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="171" column="89" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="221" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="268" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="341" column="36" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="370" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="498" column="44" severity="warning" message="The String &quot;Error creating output directory&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="551" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="586" column="57" severity="warning" message="The String &quot; at &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="586" column="113" severity="warning" message="The String &quot;:&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="617" column="9" severity="warning" message="Variable &apos;message&apos; can be moved inside the block at line &apos;619&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="620" column="13" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="643" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/JDTSnippetCompiler.java">
<error line="24" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/CompilationUnitWrapper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java">
<error line="177" column="29" severity="warning" message="Return count for &apos;createVariableAccessNoClasspath&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="180" column="9" severity="warning" message="Variable &apos;referenceBuilder&apos; can be moved inside the block at line &apos;191&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="290" column="78" severity="warning" message="Condition with &amp;&amp; at line 290 position 71 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="480" column="84" severity="warning" message="Condition with || at line 480 position 77 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="496" column="9" severity="warning" message="Variable &apos;originTypeRef&apos; can be moved inside the block at line &apos;503&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="513" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="542" column="25" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="604" column="13" severity="warning" message="Variable &apos;className&apos; can be moved inside the block at line &apos;605&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="722" column="16" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java">
<error line="154" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="517" column="24" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="581" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="582" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="583" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="585" column="27" severity="warning" message="Return count for &apos;cleanComment&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="601" column="35" severity="warning" message="The String &quot;*/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/FileCompilerConfig.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java">
<error line="185" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="187" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="191" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="195" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="211" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="240" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="261" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="266" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="271" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="276" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="281" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="286" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="291" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="296" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="301" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="306" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="311" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="316" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="321" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="326" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="331" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="336" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="341" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="345" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="350" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="355" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="360" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="365" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="370" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="375" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="380" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="385" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="390" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="395" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="400" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="405" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="410" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="415" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="420" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="425" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="430" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="435" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="440" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="445" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="450" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="491" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="496" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="501" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="507" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="513" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="519" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="522" column="40" severity="warning" message="The String &quot;Inconsistent Stack&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="526" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="533" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="538" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="544" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="550" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="555" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="560" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="569" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="578" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="587" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="596" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="601" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="606" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="611" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="618" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="623" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="632" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="637" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="642" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="644" column="14" severity="warning" message="The String &quot;value&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="651" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="658" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="667" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="676" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="681" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="686" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="691" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="696" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="702" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="707" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="715" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="720" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="725" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="730" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="735" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="740" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="745" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="750" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="757" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="764" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="769" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="774" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="780" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="786" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="792" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="802" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="824" column="61" severity="warning" message="Condition with &amp;&amp; at line 824 position 48 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="824" column="93" severity="warning" message="Condition with &amp;&amp; at line 824 position 80 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="841" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="847" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="852" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="864" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="870" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="886" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="899" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="907" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="915" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="930" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="936" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="942" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="954" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="967" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="972" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="985" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="990" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="996" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1002" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1010" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1018" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1024" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1034" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1038" column="25" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="1045" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1052" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1058" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1064" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1081" column="45" severity="warning" message="Condition with &amp;&amp; at line 1,081 position 38 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="1095" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1121" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1126" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1131" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1138" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1148" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1154" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1163" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1171" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1182" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1188" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1194" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1225" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1231" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1240" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1246" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1252" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1258" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1268" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1276" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1285" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1287" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="1298" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1319" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1328" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1333" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1338" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1343" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1348" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1355" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1361" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1367" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1373" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1379" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1396" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1402" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1410" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1415" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1420" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1425" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1430" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1440" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1453" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1466" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1467" column="20" severity="warning" message="Return count for &apos;visit&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1495" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1515" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1520" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1526" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1550" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1559" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1565" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1571" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1577" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1582" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1587" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1596" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1601" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1602" column="20" severity="warning" message="Return count for &apos;visit&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1629" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1634" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1640" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1646" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1656" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1662" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1668" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1674" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1680" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1692" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1694" column="9" severity="warning" message="Variable &apos;t&apos; can be moved inside the block at line &apos;1,695&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="1707" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1713" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1714" column="20" severity="warning" message="Return count for &apos;visit&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="1742" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1750" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="1756" column="5" severity="warning" message="Method definition in wrong order. Expected &apos;Method(.*)&apos; then &apos;InnerClass()&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/PositionBuilder.java">
<error line="71" column="20" severity="warning" message="Return count for &apos;buildPositionCtElement&apos; method is 7 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="84" column="13" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="91" column="20" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="105" column="50" severity="warning" message="The String &quot;Unexpected character \&apos;&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="168" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="170" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="187" column="50" severity="warning" message="The String &quot;Unexpected character &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="226" column="57" severity="warning" message="Condition with &amp;&amp; at line 226 position 47 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="274" column="101" severity="warning" message="The String &quot; of annonymous class with sources:\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="326" column="61" severity="warning" message="Condition with &amp;&amp; at line 326 position 51 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="450" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="700" column="16" severity="warning" message="Return count for &apos;getEndOfComment&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="718" column="21" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="782" column="71" severity="warning" message="The String &quot;Source position detection failed: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderQuery.java">
<error line="123" column="28" severity="warning" message="Return count for &apos;searchPackage&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="124" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="157" column="20" severity="warning" message="Return count for &apos;hasAnnotationWithType&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="165" column="48" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="168" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="249" column="31" severity="warning" message="Return count for &apos;getBinaryOperatorKind&apos; method is 20 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/compiler/ZipFolder.java">
<error line="80" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="121" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="154" column="49" severity="warning" message="The String &quot;not possible a real folder&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="186" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/DerivedProperty.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/CompressionType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/StandardEnvironment.java">
<error line="61" column="34" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="65" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="86" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="88" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="90" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="92" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="94" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="96" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="98" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="100" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="102" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="104" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="106" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="108" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="110" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="112" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="114" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="116" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="118" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="120" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="122" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="124" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="126" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="128" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="134" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="134" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="245" column="13" severity="warning" message="Variable &apos;type&apos; can be moved inside the block at line &apos;250&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="301" column="29" severity="warning" message="The String &quot;s&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="387" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="393" column="1" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="538" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="663" column="26" severity="warning" message="Return count for &apos;createPrettyPrinter&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/SerializationModelStreamer.java">
<error line="40" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="88" column="13" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/JavaOutputProcessor.java">
<error line="89" column="42" severity="warning" message="The String &quot;Error creating output directory&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/ActionBasedChangeListenerImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/context/ListContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/context/MapContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/context/CollectionContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/context/SetContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/context/ObjectContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/context/Context.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/FineModelChangeListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/EmptyModelChangeListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/SourceFragmentCreator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/ActionBasedChangeListener.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/ChangeCollector.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/action/DeleteAllAction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/action/UpdateAction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/action/DeleteAction.java">
<error line="31" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/action/AddAction.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/modelobs/action/Action.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/gui/SpoonModelTree.java">
<error line="70" column="19" severity="warning" message="Calling the method &apos;initialize&apos; in constructor body leads to the call of the overridable method &apos;setVisible&apos;." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="78" column="19" severity="warning" message="Calling the method &apos;initialize&apos; in constructor body leads to the call of the overridable method &apos;setVisible&apos;." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="169" column="34" severity="warning" message="The String &quot;Search&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="239" column="14" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="242" column="14" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="245" column="14" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/gui/SpoonTreeBuilder.java">
<error line="43" column="31" severity="warning" message="The String &quot; - &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="50" column="23" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="62" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/gui/SpoonObjectFieldsTable.java">
<error line="36" column="23" severity="warning" message="Overridable method &apos;scanFields&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="55" column="23" severity="warning" message="Return count for &apos;getValueAt&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="58" column="19" severity="warning" message="Unnecessary parentheses around literal &apos;0&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="60" column="19" severity="warning" message="Unnecessary parentheses around literal &apos;1&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="62" column="19" severity="warning" message="Unnecessary parentheses around literal &apos;2&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="72" column="19" severity="warning" message="Unnecessary parentheses around literal &apos;3&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/Experimental.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/DefaultOutputDestinationHandler.java">
<error line="63" column="38" severity="warning" message="The String &quot;.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/comparator/SignatureComparator.java">
<error line="17" column="34" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/comparator/FixedOrderBasedOnFileNameCompilationUnitComparator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/comparator/DeepRepresentationComparator.java">
<error line="16" column="43" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/comparator/CtLineElementComparator.java">
<error line="17" column="38" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/comparator/QualifiedNameComparator.java">
<error line="18" column="38" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="21" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="24" column="16" severity="warning" message="Return count for &apos;compare&apos; method is 5 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/cu/CompilationUnitImpl.java">
<error line="61" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/cu/position/BodyHolderSourcePositionImpl.java">
<error line="18" column="9" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/cu/position/SourcePositionImpl.java">
<error line="22" column="33" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="29" column="19" severity="warning" message="Return count for &apos;searchLineNumber&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="61" column="19" severity="warning" message="Return count for &apos;searchColumnNumber&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="94" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="97" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="102" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="104" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="171" column="89" severity="warning" message="The String &quot;C:/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="171" column="96" severity="warning" message="The String &quot;/&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="196" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="214" column="16" severity="warning" message="The String &quot;|&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="235" column="9" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/cu/position/DeclarationSourcePositionImpl.java">
<error line="18" column="9" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/cu/position/PartialSourcePositionImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/cu/position/CompoundSourcePositionImpl.java">
<error line="18" column="9" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtArrayTypeReferenceImpl.java">
<error line="25" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="64" column="53" severity="warning" message="The String &quot;[]&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java">
<error line="68" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="77" column="31" severity="warning" message="Return count for &apos;box&apos; method is 9 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="81" column="13" severity="warning" message="The String &quot;int&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="84" column="13" severity="warning" message="The String &quot;float&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="87" column="13" severity="warning" message="The String &quot;long&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="90" column="13" severity="warning" message="The String &quot;char&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="93" column="13" severity="warning" message="The String &quot;double&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="96" column="13" severity="warning" message="The String &quot;boolean&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="99" column="13" severity="warning" message="The String &quot;short&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="102" column="13" severity="warning" message="The String &quot;byte&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="105" column="13" severity="warning" message="The String &quot;void&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="113" column="21" severity="warning" message="Return count for &apos;getActualClass&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="139" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="140" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="148" column="24" severity="warning" message="Return count for &apos;findClass&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="158" column="53" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="172" column="15" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="173" column="55" severity="warning" message="The String &quot;cannot load class: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="231" column="16" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="236" column="20" severity="warning" message="Return count for &apos;isSubtypeOf&apos; method is 5 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="320" column="31" severity="warning" message="Return count for &apos;unbox&apos; method is 11 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="370" column="9" severity="warning" message="Variable &apos;msg&apos; can be moved inside the block at line &apos;372&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="445" column="68" severity="warning" message="The String &quot; cannot be found&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="483" column="20" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="575" column="20" severity="warning" message="Return count for &apos;canAccess&apos; method is 8 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="606" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="628" column="20" severity="warning" message="Return count for &apos;canAccess&apos; method is 7 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="654" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="692" column="31" severity="warning" message="Return count for &apos;getAccessType&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="740" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="806" column="28" severity="warning" message="Return count for &apos;getTypeParameterDeclaration&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java">
<error line="45" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="54" column="19" severity="warning" message="Return count for &apos;getActualField&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java">
<error line="30" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="40" column="31" severity="warning" message="Return count for &apos;getDeclaration&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java">
<error line="70" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="114" column="29" severity="warning" message="Return count for &apos;getCtExecutable&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="279" column="19" severity="warning" message="Return count for &apos;getActualMethod&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="287" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java">
<error line="30" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="35" column="16" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="98" column="28" severity="warning" message="Return count for &apos;getDeclaration&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="107" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtParameterReferenceImpl.java">
<error line="21" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="48" column="28" severity="warning" message="Return count for &apos;lookupDynamically&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtUnboundVariableReferenceImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtVariableReferenceImpl.java">
<error line="27" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtWildcardReferenceImpl.java">
<error line="32" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="34" column="24" severity="warning" message="Overridable method &apos;setBoundingType&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtCatchVariableReferenceImpl.java">
<error line="18" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtReferenceImpl.java">
<error line="25" column="61" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="29" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="32" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtPackageReferenceImpl.java">
<error line="17" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtIntersectionTypeReferenceImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtTypeMemberWildcardImportReferenceImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/reference/CtModuleReferenceImpl.java">
<error line="16" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/eval/InlinePartialEvaluator.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/eval/VisitorPartialEvaluator.java">
<error line="196" column="44" severity="warning" message="The String &quot;unsupported operator &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="298" column="9" severity="warning" message="Variable &apos;fieldName&apos; can be moved inside the block at line &apos;306&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="421" column="85" severity="warning" message="Condition with &amp;&amp; at line 421 position 75 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="426" column="21" severity="warning" message="Unnecessary parentheses around expression." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="443" column="19" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/eval/EvalHelper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/CtExtendedModifier.java">
<error line="20" column="33" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="72" column="16" severity="warning" message="Unnecessary parentheses around return value." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="77" column="22" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/CtModifierHandler.java">
<error line="22" column="32" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtMethodImpl.java">
<error line="51" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtPackageDeclarationImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java">
<error line="71" column="37" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="73" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="74" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="92" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="97" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="105" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="105" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="353" column="32" severity="warning" message="The String &quot;parent not initialized for &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="353" column="103" severity="warning" message="The String &quot;(&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="353" column="127" severity="warning" message="The String &quot;)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="357" column="34" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="357" column="156" severity="warning" message="The String &quot; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="357" column="168" severity="warning" message="The String &quot; (?)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="359" column="34" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java">
<error line="80" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="147" column="32" severity="warning" message="Condition with || at line 147 position 25 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="147" column="51" severity="warning" message="Condition with || at line 147 position 44 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="147" column="71" severity="warning" message="Condition with || at line 147 position 64 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="147" column="93" severity="warning" message="Condition with || at line 147 position 86 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="147" column="112" severity="warning" message="Condition with || at line 147 position 105 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="147" column="132" severity="warning" message="Condition with || at line 147 position 125 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="147" column="153" severity="warning" message="Condition with || at line 147 position 146 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="147" column="175" severity="warning" message="Condition with || at line 147 position 168 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="292" column="26" severity="warning" message="Return count for &apos;getValueAsExpression&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="370" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtExecutableImpl.java">
<error line="48" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtPackageImpl.java">
<error line="32" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="82" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtImportImpl.java">
<error line="28" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="65" column="11" severity="warning" message="Useless catch block. No logging, wrapping or handling code here." source="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtUsedServiceImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtInterfaceImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtPackageExportImpl.java">
<error line="29" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtAnnotationMethodImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/InvisibleArrayConstructorImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtClassImpl.java">
<error line="253" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="267" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtProvidedServiceImpl.java">
<error line="25" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java">
<error line="81" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
<error line="95" column="36" severity="warning" message="Return count for &apos;addTypeMember&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="99" column="9" severity="warning" message="Variable &apos;c&apos; can be moved inside the block at line &apos;109&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="680" column="28" severity="warning" message="Return count for &apos;getMethod&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="681" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="691" column="72" severity="warning" message="Condition with &amp;&amp; at line 691 position 59 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="719" column="23" severity="warning" message="Return count for &apos;hasSameParameters&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="723" column="64" severity="warning" message="Condition with &amp;&amp; at line 723 position 57 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="728" column="21" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
<error line="793" column="20" severity="warning" message="Return count for &apos;hasMethod&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtEnumImpl.java">
<error line="162" column="40" severity="warning" message="The String &quot;values&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="175" column="41" severity="warning" message="The String &quot;valueOf&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="187" column="35" severity="warning" message="Condition with &amp;&amp; at line 187 position 28 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="189" column="43" severity="warning" message="Condition with &amp;&amp; at line 189 position 36 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="199" column="13" severity="warning" message="Condition with &amp;&amp; at line 199 position 3 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="203" column="13" severity="warning" message="Condition with &amp;&amp; at line 203 position 3 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtAnonymousExecutableImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtModuleRequirementImpl.java">
<error line="24" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtAnnotationTypeImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtConstructorImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtTypeParameterImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtFieldImpl.java">
<error line="45" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtCompilationUnitImpl.java">
<error line="109" column="22" severity="warning" message="Return count for &apos;getUnitType&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="291" column="48" severity="warning" message="The String &quot;.class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="329" column="15" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtEnumValueImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtModuleImpl.java">
<error line="38" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/declaration/CtParameterImpl.java">
<error line="48" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtArrayReadImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtStatementImpl.java">
<error line="44" column="40" severity="warning" message="The String &quot;cannot insert in this context (use insertEnd?)&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtNewClassImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtUnaryOperatorImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtCodeElementImpl.java">
<error line="15" column="5" severity="warning" message="This empty public constructor is useless." source="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtJavaDocImpl.java">
<error line="90" column="9" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtThisAccessImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtSuperAccessImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtCatchVariableImpl.java">
<error line="70" column="31" severity="warning" message="Return count for &apos;getType&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="87" column="42" severity="warning" message="Condition with &amp;&amp; at line 87 position 35 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtAssertImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtVariableAccessImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtLiteralImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtSwitchImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtArrayWriteImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtBreakImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtBinaryOperatorImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtLocalVariableImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtTargetedExpressionImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtReturnImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtCommentImpl.java">
<error line="23" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtContinueImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtTryWithResourceImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtThrowImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtLoopImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtCaseImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtConditionalImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtJavaDocTagImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtInvocationImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtOperatorAssignmentImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtFieldReadImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtFieldWriteImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtCodeSnippetStatementImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtCodeSnippetExpressionImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtArrayAccessImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtTypeAccessImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java">
<error line="114" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtBlockImpl.java">
<error line="47" column="30" severity="warning" message="Condition with &amp;&amp; at line 47 position 20 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtIfImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtForEachImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtStatementListImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtCatchImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtExpressionImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtWhileImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtAnnotationFieldAccessImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtAssignmentImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtSynchronizedImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtFieldAccessImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtExecutableReferenceExpressionImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtVariableWriteImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtNewArrayImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtConstructorCallImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtForImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtTryImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtVariableReadImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/reflect/code/CtDoImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/CollectionSourceFragment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/SourceFragmentContextSet.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/ElementPrinterEvent.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/TokenType.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/SourceFragmentContextNormal.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/ChangeResolver.java">
<error line="39" column="13" severity="warning" message="Variable &apos;modifier&apos; can be moved inside the block at line &apos;40&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/SourceFragmentContextPrettyPrint.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/PrinterEvent.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/MutableTokenWriter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/TokenSourceFragment.java">
<error line="39" column="16" severity="warning" message="The String &quot;|&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/ElementSourceFragment.java">
<error line="98" column="16" severity="warning" message="The String &quot;|&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="98" column="35" severity="warning" message="The String &quot;, &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="136" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="187" column="35" severity="warning" message="Return count for &apos;addChild&apos; method is 2 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="201" column="29" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="262" column="34" severity="warning" message="Return count for &apos;add&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="347" column="17" severity="warning" message="Return count for &apos;compare&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="395" column="34" severity="warning" message="Return count for &apos;getSourceFragmentOf&apos; method is 6 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="411" column="54" severity="warning" message="The String &quot;There is no source fragment for element &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="411" column="120" severity="warning" message="The String &quot;. There is one for class &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="491" column="9" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="535" column="17" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="584" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="588" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="630" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="643" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="653" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/TokenWriterProxy.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/AbstractSourceFragmentContextCollection.java">
<error line="32" column="20" severity="warning" message="Return count for &apos;matchesPrinterEvent&apos; method is 5 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="38" column="34" severity="warning" message="Condition with || at line 38 position 27 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="62" column="9" severity="warning" message="Method declares to return Boolean and returns null." source="com.github.sevntu.checkstyle.checks.coding.ReturnNullInsteadOfBooleanCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/TokenPrinterEvent.java">
<error line="51" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/DirectPrinterHelper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/SourceFragment.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/AbstractSourceFragmentContext.java">
<error line="35" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(protected)&apos; then &apos;Field(private)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="64" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="100" column="13" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="116" column="23" severity="warning" message="Return count for &apos;isFragmentModified&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="121" column="17" severity="warning" message="Method declares to return Boolean and returns null." source="com.github.sevntu.checkstyle.checks.coding.ReturnNullInsteadOfBooleanCheck"/>
<error line="123" column="17" severity="warning" message="Method declares to return Boolean and returns null." source="com.github.sevntu.checkstyle.checks.coding.ReturnNullInsteadOfBooleanCheck"/>
<error line="186" column="50" severity="warning" message="Condition with &amp;&amp; at line 186 position 40 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="187" column="17" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/SourceFragmentContext.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/internal/SourceFragmentContextList.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/sniper/SniperJavaPrettyPrinter.java">
<error line="114" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="115" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="116" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/EmptyIterator.java">
<error line="18" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/EmptyClearableSet.java">
<error line="14" column="64" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="23" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/internal/MapUtils.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/SortedList.java">
<error line="45" column="17" severity="warning" message="Short-circuit operator should be used instead of &apos;&amp;=&apos;." source="com.github.sevntu.checkstyle.checks.coding.AvoidNotShortCircuitOperatorsForBooleanCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/SignatureBasedSortedSet.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/ImmutableMap.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/QualifiedNameBasedSortedSet.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/EmptyClearableList.java">
<error line="17" column="66" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
<error line="26" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/ModelSet.java">
<error line="30" column="76" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/ImmutableMapImpl.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/RtHelper.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/ByteSerialization.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/util/ModelList.java">
<error line="28" column="78" severity="warning" message="Inner class should not implement default Serializable interface." source="com.github.sevntu.checkstyle.checks.coding.AvoidDefaultSerializableInInnerClassesCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/SpoonClassNotFoundException.java">
<error line="18" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;CTOR(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/support/DefaultCoreFactory.java">
<error line="809" column="22" severity="warning" message="Return count for &apos;create&apos; method is 81 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/legacy/package-info.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/src/main/java/spoon/legacy/NameFilter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/test/java/fr/inria/controlflow/AllBranchesReturnTest.java">
<error line="139" column="36" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="154" column="35" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/test/java/fr/inria/controlflow/ControlFlowGraphTests.java">
<error line="41" column="11" severity="warning" message="Forbidden element &apos;expected&apos; in annotation &apos;Test&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationElementValueCheck"/>
<error line="100" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="101" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="102" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="103" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="143" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="144" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="145" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="146" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="147" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/test/java/fr/inria/controlflow/ForwardFlowBuilderVisitorTest.java">
<error line="84" column="1" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
<error line="107" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="158" column="20" severity="warning" message="The String &quot;simple&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="180" column="45" severity="warning" message="The String &quot;mixed&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="251" column="45" severity="warning" message="The String &quot;ctWhileBlock&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="275" column="45" severity="warning" message="The String &quot;ctDoWhileBlock&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/test/java/fr/inria/controlflow/SpoonMetaFactory.java">
<error line="43" column="44" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="75" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/test/java/fr/inria/dataflow/UselessAssignmentTest.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/test/java/fr/inria/dataflow/InitializedVariablesTest.java">
<error line="41" column="45" severity="warning" message="The String &quot;/initialized&quot; appears 6 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="48" column="24" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="58" column="28" severity="warning" message="The String &quot;Compiled OK&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="70" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="71" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="72" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="73" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="74" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="75" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="76" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="77" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="78" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="79" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="80" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="103" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="104" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="105" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="106" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="128" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="129" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="130" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="131" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="132" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="133" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="154" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="155" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="159" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
<error line="176" column="20" severity="warning" message="Call to &apos;assertFalse&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/test/resources/control-flow/ControlFlowArithmetic.java">
<error line="139" column="13" severity="warning" message="Variable &apos;factors&apos; can be moved inside the block at line &apos;140&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="217" column="31" severity="warning" message="The String &quot;A &lt; 0!&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="227" column="23" severity="warning" message="More than 1 ternary operators in expression." source="com.github.sevntu.checkstyle.checks.coding.TernaryPerExpressionCountCheck"/>
<error line="413" column="14" severity="warning" message="Unnecessary parentheses around identifier &apos;phase&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="414" column="21" severity="warning" message="Unnecessary parentheses around identifier &apos;phase&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="419" column="34" severity="warning" message="Unnecessary parentheses around identifier &apos;starved&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="424" column="22" severity="warning" message="Unnecessary parentheses around identifier &apos;target&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="424" column="33" severity="warning" message="Unnecessary parentheses around identifier &apos;source&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="424" column="45" severity="warning" message="Unnecessary parentheses around identifier &apos;phase&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="424" column="56" severity="warning" message="Unnecessary parentheses around identifier &apos;source&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="425" column="23" severity="warning" message="Unnecessary parentheses around identifier &apos;current&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="426" column="34" severity="warning" message="Unnecessary parentheses around identifier &apos;baseIncrement&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/test/resources/initialized/ComplexFlow.java">
<error line="65" column="13" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="67" column="13" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="87" column="17" severity="warning" message="Loops should not contain more than a single &quot;break&quot; or &quot;continue&quot; statement" source="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck"/>
<error line="227" column="54" severity="warning" message="Unnecessary parentheses around identifier &apos;cs&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="287" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="287" column="9" severity="warning" message="Variable &apos;j&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="287" column="9" severity="warning" message="Variable &apos;nw0&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="287" column="9" severity="warning" message="Variable &apos;nw1&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="287" column="9" severity="warning" message="Variable &apos;nwh&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="288" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="288" column="9" severity="warning" message="Variable &apos;delta&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="288" column="9" severity="warning" message="Variable &apos;wk1i&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="288" column="9" severity="warning" message="Variable &apos;wk1r&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="288" column="9" severity="warning" message="Variable &apos;wk3i&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="288" column="9" severity="warning" message="Variable &apos;wk3r&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="288" column="9" severity="warning" message="Variable &apos;wn4r&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="289" column="9" severity="warning" message="Each variable declaration must be in its own statement." source="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck"/>
<error line="289" column="9" severity="warning" message="Variable &apos;delta2&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="289" column="9" severity="warning" message="Variable &apos;deltaj&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="289" column="9" severity="warning" message="Variable &apos;deltaj3&apos; can be moved inside the block at line &apos;293&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="295" column="21" severity="warning" message="Numeric literal should have underscores." source="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck"/>
<error line="351" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="355" column="9" severity="warning" message="Variable &apos;notInitialized&apos; can be moved inside the block at line &apos;357&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
<error line="372" column="31" severity="warning" message="Unnecessary parentheses around identifier &apos;n&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="379" column="39" severity="warning" message="Unnecessary parentheses around identifier &apos;n&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="382" column="33" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="383" column="23" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="383" column="41" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="386" column="15" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="386" column="24" severity="warning" message="Unnecessary parentheses around identifier &apos;n&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="386" column="35" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="387" column="15" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="392" column="23" severity="warning" message="Unnecessary parentheses around identifier &apos;n&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="393" column="26" severity="warning" message="Unnecessary parentheses around identifier &apos;n&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="395" column="27" severity="warning" message="Unnecessary parentheses around identifier &apos;n&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="400" column="23" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="401" column="33" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="403" column="38" severity="warning" message="Unnecessary parentheses around identifier &apos;n&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="404" column="40" severity="warning" message="Unnecessary parentheses around identifier &apos;n&apos;." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="405" column="36" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="406" column="23" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="409" column="19" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/AllBranchesReturn.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/NotFoundException.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/GraphVisPrettyPrinter.java">
<error line="45" column="64" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="53" column="66" severity="warning" message="The String &quot; -&gt; &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/BranchKind.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/ControlFlowGraph.java">
<error line="104" column="58" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/Value.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/TransferFunctionVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/ControlFlowNode.java">
<error line="53" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="72" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="81" column="5" severity="warning" message="Constructor definition in wrong order. Expected &apos;CTOR(.*)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="116" column="58" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="131" column="58" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
<error line="142" column="58" severity="warning" message="Diamond operator expected." source="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/ControlFlowBuilder.java">
<error line="191" column="35" severity="warning" message="Return count for &apos;firstNode&apos; method is 4 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="277" column="17" severity="warning" message="Condition with &amp;&amp; at line 277 position 4 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/controlflow/ControlFlowEdge.java">
<error line="36" column="5" severity="warning" message="Unexpected getter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
<error line="40" column="5" severity="warning" message="Unexpected setter name." source="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/dataflow/ControlFlowVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/dataflow/AbstractControlFlowVisitor.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/dataflow/InitializedVariables.java">
<error line="63" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(private)&apos; then &apos;Method(.*)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="100" column="38" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/dataflow/ControlFlowVisitorForward.java">
<error line="39" column="9" severity="warning" message="C-style comments (/*...*/) inside method body are not allowed." source="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/dataflow/UselessAssignmentAnalysis.java">
<error line="78" column="13" severity="warning" message="Variable &apos;kill&apos; can be moved inside the block at line &apos;81&apos; to restrict runtime creation." source="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-control-flow/src/main/java/fr/inria/dataflow/ControlFlowVisitorBackwards.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/test/java/spoon/decompiler/SpoonClassFileTransformerTest.java">
<error line="44" column="77" severity="warning" message="The String &quot;/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="142" column="72" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="145" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/test/java/spoon/decompiler/test/architecture/DecompilerArchitectureTest.java">
<error line="40" column="32" severity="warning" message="The String &quot;src/main/java/&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="80" column="148" severity="warning" message="The String &quot;\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="110" column="162" severity="warning" message="The String &quot;Test&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="174" column="44" severity="warning" message="The String &quot;\n\nDetails: &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="186" column="13" severity="warning" message="Avoid negation within an &quot;if&quot; expression with an &quot;else&quot; clause." source="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/test/java/spoon/DecompiledResourceTest.java">
<error line="51" column="97" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/test/java/spoon/JarLauncherTest.java">
<error line="50" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
<error line="56" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
<error line="59" column="33" severity="warning" message="The String &quot;src/test/resources/jarLauncher&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="60" column="38" severity="warning" message="The String &quot;helloworld-1.0-SNAPSHOT.jar&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="65" severity="warning" message="The String &quot;java.io.tmpdir&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="104" severity="warning" message="The String &quot;file.separator&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="61" column="124" severity="warning" message="The String &quot;spoon-tmp&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="66" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="72" column="19" severity="warning" message="Call to &apos;assertTrue&apos; method (matches pattern &apos;assert(True|False)&apos;) with &apos;1&apos; arguments (matches pattern &apos;1&apos;) is forbidden." source="com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck"/>
<error line="125" column="5" severity="warning" message="Incorrect target: &apos;METHOD_DEF&apos; for annotation: &apos;Ignore&apos;." source="com.github.sevntu.checkstyle.checks.annotation.ForbidAnnotationCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/DecompiledResource.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/JarLauncher.java">
<error line="101" column="38" severity="warning" message="The String &quot;Dir &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="101" column="74" severity="warning" message="The String &quot; already exists and is not deletable.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="102" column="44" severity="warning" message="Condition with &amp;&amp; at line 102 position 37 need optimization. All method calls are advised to move to end of logic expression." source="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck"/>
<error line="106" column="17" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="120" column="51" severity="warning" message="Overridable method &apos;getDefaultDecompiler&apos; is called in constructor body." source="com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck"/>
<error line="125" column="63" severity="warning" message="The String &quot; not found.&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="145" column="17" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
<error line="154" column="17" severity="warning" message="Cause exception &apos;e&apos; was lost." source="com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/decompiler/MultiTypeTransformer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/decompiler/FernflowerDecompiler.java">
<error line="26" column="44" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/decompiler/TypeTransformer.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/decompiler/ProcyonDecompiler.java">
<error line="59" column="43" severity="warning" message="The String &quot;.class&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="62" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="95" column="35" severity="warning" message="The String &quot;  &quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="99" column="31" severity="warning" message="The String &quot;Decompiling %s...\n&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="156" column="19" severity="warning" message="Catching &apos;Throwable&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
<error line="227" column="73" severity="warning" message="The String &quot;UTF-8&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/decompiler/Decompiler.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/decompiler/SpoonClassFileTransformer.java">
<error line="56" column="5" severity="warning" message="Field definition in wrong order. Expected &apos;Field(public)&apos; then &apos;Field(protected)&apos;." source="com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck"/>
<error line="65" column="46" severity="warning" message="The String &quot;spoon-decompiled&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="66" severity="warning" message="The String &quot;spoon-cache&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="65" column="81" severity="warning" message="The String &quot;spoon-recompiled&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="128" column="19" severity="warning" message="Return count for &apos;transform&apos; method is 3 (max allowed is 1)." source="com.github.sevntu.checkstyle.checks.coding.ReturnCountExtendedCheck"/>
<error line="143" column="69" severity="warning" message="The String &quot;.class&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="144" column="99" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="179" column="11" severity="warning" message="Catching &apos;Exception&apos; is not allowed." source="com.github.sevntu.checkstyle.checks.coding.IllegalCatchExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-decompiler/src/main/java/spoon/decompiler/CFRDecompiler.java">
<error line="31" column="35" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
<error line="31" column="47" severity="warning" message="The String &quot;--outputdir&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="33" column="35" severity="warning" message="Array initializer should have whitespace before." source="com.github.sevntu.checkstyle.checks.coding.WhitespaceBeforeArrayInitializerCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/test/java/spoon/visualisation/instrument/SpoonCodeInstrumentTest.java">
<error line="118" column="40" severity="warning" message="The String &quot;class Foo { }&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="132" column="40" severity="warning" message="The String &quot;int i;&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="246" column="43" severity="warning" message="The String &quot;CtClass&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="310" column="45" severity="warning" message="The String &quot;fooo&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="312" column="55" severity="warning" message="The String &quot;docc&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="313" column="64" severity="warning" message="The String &quot;text&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="323" column="59" severity="warning" message="The String &quot;foo(): String&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="326" column="115" severity="warning" message="The String &quot;[]&quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="328" column="65" severity="warning" message="The String &quot;null&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="350" column="46" severity="warning" message="The String &quot;#propPanel&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="415" column="50" severity="warning" message="The String &quot;#thePath&quot; appears 2 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/ShowMe.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/spoon/TreeNodeLabel.java">
<error line="24" column="9" severity="warning" message="Super call could be removed: Class &apos;TreeNodeLabel&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="35" column="35" severity="warning" message="The String &quot; &quot; appears 3 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/spoon/SpoonElementVisitor.java">
<error line="35" column="9" severity="warning" message="Super call could be removed: Class &apos;SpoonElementVisitor&apos; does not extend anything." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/spoon/SpoonTreeItem.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/spoon/TreePrinter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/spoon/StreamPrinter.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/spoon/SpoonTreeScanner.java">
<error line="64" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;SpoonTreeScanner&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
<error line="92" column="79" severity="warning" message="The String &quot;: &quot; appears 8 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
<error line="108" column="118" severity="warning" message="The String &quot;(null)&quot; appears 4 times in the file." source="com.github.sevntu.checkstyle.checks.coding.MultipleStringLiteralsExtendedCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/instrument/SpoonCodeInstrument.java">
<error line="117" column="31" severity="warning" message="Unnecessary parentheses around assignment right-hand side." source="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck"/>
<error line="277" column="25" severity="warning" message="Method should return empty collection instead of null." source="com.github.sevntu.checkstyle.checks.coding.NoNullForCollectionReturnCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/command/UpdateSpoonTree.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/command/SelectCodeText.java">
<error line="43" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;SelectCodeText&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/command/TreeLevel.java">
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/command/SpoonTreeCmdBase.java">
<error line="46" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;SpoonTreeCmdBase&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/command/SelectCodeItem.java">
<error line="45" column="9" severity="warning" message="Redundant super constructor call could be removed. Class &apos;SelectCodeItem&apos; has superclass. Java compiler automatically inserts a call to the no-argument constructor of the superclass." source="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck"/>
</file>
<file name="/home/nick/development/contribution/checkstyle-tester/repositories/spoon/spoon-visualisation/src/main/java/spoon/visualisation/command/SaveTreeText.java">
</file>
</checkstyle>
